version: 2
cached-checkout: &cached-checkout
  attach_workspace:
    at: ".."
images-caches: &images-caches
  attach_workspace:
    at: ../caches

jobs:
  checkout-and-cache:
    machine: true
    steps:
      - checkout
      - persist_to_workspace:
          root: ".."
          paths:
            - project

  checkout-and-cache-stable-version:
    machine: true
    steps:
      - checkout
      - run:
          name: "Travel back in time to 4 days ago"
          command: scripts/get-git-history.sh
      - run: 'git log -1 --pretty="%H: %cD - %s"'
      - persist_to_workspace:
          root: ".."
          paths:
            - project

  build-unlock:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - run: mkdir -p ../caches
      - *cached-checkout
      - run:
          name: Build Unlock Image
          command: scripts/build-image.sh unlock
      - run:
          name: Cache image locally
          command: docker save -o "../caches/unlock.tar" unlock
      - persist_to_workspace:
          root: "../caches"
          paths:
            - "unlock.tar"

  build-unlock-integration:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - run: mkdir -p ../caches
      - *cached-checkout
      - run:
          name: Build Unlock Integration Image
          command: scripts/build-image.sh unlock-integration
      - run:
          name: Cache image locally
          command: docker save -o "../caches/unlock-integration.tar" unlock-integration
      - persist_to_workspace:
          root: "../caches"
          paths:
            - "unlock-integration.tar"

  unlock-app-tests:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Creator Dashboard tests
          command: scripts/tests.sh unlock-app

  unlock-app-chromatic:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Creator Dashboard stories
          command: scripts/storybook.sh unlock-app "$CIRCLE_BRANCH"
          environment:
            UNLOCK_APP_CHROMATIC_APP_CODE: swpc6wf70qp

  smart-contracts-tests:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Smart Contract Tests
          command: scripts/tests.sh smart-contracts

  locksmith-tests:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
      DB_USERNAME: locksmith_test
      DB_PASSWORD: password
      DB_NAME: locksmith_test
      DB_HOSTNAME: db
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Smart Contract Tests
          command: scripts/tests.sh locksmith

  paywall-tests:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Smart Contract Tests
          command: scripts/tests.sh paywall

  integration-tests:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Load Unlock Integration Image
          command: docker load -i "../caches/unlock-integration.tar"
      - run:
          name: Integration Tests
          command: scripts/integration-tests.sh

  deploy-unlock-app-netlify:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Set IS_FORKED_PR
          command: scripts/circleci/set-is-forked-pull-request.sh >> $BASH_ENV
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Deploy to Netlify
          command: scripts/deploy.sh "$ENV_TARGET" unlock-app netlify "$CIRCLE_SHA1" "$CIRCLE_BRANCH" "$IS_FORKED_PR"

  deploy-paywall-netlify:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Set IS_FORKED_PR
          command: scripts/circleci/set-is-forked-pull-request.sh >> $BASH_ENV
      - run:
          name: Load Unlock Image
          command: docker load -i "../caches/unlock.tar"
      - run:
          name: Deploy to Netlify
          command: scripts/deploy.sh "$ENV_TARGET" paywall netlify "$CIRCLE_SHA1" "$CIRCLE_BRANCH" "$IS_FORKED_PR"

  deploy-locksmith-beanstalk:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *cached-checkout
      - run:
          name: Set GIT_COMMIT_DESC
          command: echo 'export GIT_COMMIT_DESC=$(git log --format=%B -n 1 "$CIRCLE_SHA1")' >> $BASH_ENV
      - run:
          name: Set IS_FORKED_PR
          command: ./scripts/circleci/set-is-forked-pull-request.sh >> $BASH_ENV
      - run:
          name: Deploy to to Beanstalk
          command: locksmith/scripts/deploy-elasticbeanstalk.sh "$CIRCLE_SHA1" "$CIRCLE_BRANCH" "$IS_FORKED_PR" "$GIT_COMMIT_DESC"

  promote-unlock-image:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Image
          command: docker load -i  "../caches/unlock.tar"
      - run:
          name: Push Unlock Image as master
          command: scripts/push-image.sh unlock master

  promote-unlock-integration-image:
    machine: true
    environment:
      DOCKER_REPOSITORY: unlockprotocol
    steps:
      - *images-caches
      - *cached-checkout
      - run:
          name: Load Unlock Integration Image
          command: docker load -i  "../caches/unlock-integration.tar"
      - run:
          name: Push Unlock Integration Image as master
          command: scripts/push-image.sh unlock-integration master

workflows:
  version: 2
  deploy: # The deploy workflow will not re-run tests, just build an image with the "older" version and deploy it
    triggers:
      - schedule:
          cron: "0,5,10,15,20,25,30,35,40,45,50,55 * * * *" # use cron syntax to set the schedule
          filters:
            branches:
              only:
                - master
    jobs:
      - checkout-and-cache-stable-version
      - build-unlock:
          requires:
            - checkout-and-cache-stable-version
      # I cannot test things below for now... because  I want to make sure things above this are working as expected, on master
      # - deploy-unlock-app-netlify:
      #     requires:
      #       - build-unlock
      # - deploy-paywall-netlify:
      #     requires:
      #       - build-unlock

  build-test-and-deploy:
    jobs:
      - checkout-and-cache
      - build-unlock:
          requires:
            - checkout-and-cache
      - build-unlock-integration:
          requires:
            - checkout-and-cache
      - unlock-app-tests:
          requires:
            - build-unlock
      - unlock-app-chromatic:
          requires:
            - build-unlock
      - smart-contracts-tests:
          requires:
            - build-unlock
      - locksmith-tests:
          requires:
            - build-unlock
      - paywall-tests:
          requires:
            - build-unlock
      - integration-tests:
          requires:
            - build-unlock
            - build-unlock-integration
      - deploy-unlock-app-netlify:
          requires:
            - unlock-app-tests
            - smart-contracts-tests
            - locksmith-tests
            - paywall-tests
            - integration-tests
      - deploy-paywall-netlify:
          requires:
            - unlock-app-tests
            - smart-contracts-tests
            - locksmith-tests
            - paywall-tests
            - integration-tests
      - promote-unlock-image:
          filters:
            branches:
              only: master
          requires:
            - unlock-app-tests
            - smart-contracts-tests
            - locksmith-tests
            - paywall-tests
            - integration-tests
      - promote-unlock-integration-image:
          filters:
            branches:
              only: master
          requires:
            - unlock-app-tests
            - smart-contracts-tests
            - locksmith-tests
            - paywall-tests
            - integration-tests
      - deploy-locksmith-beanstalk:
          filters:
            branches:
              only: master
          requires:
            - unlock-app-tests
            - smart-contracts-tests
            - locksmith-tests
            - paywall-tests
            - integration-tests
