{
  "contractName": "PublicLock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sendTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "CancelKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Disable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_timeAdded",
          "type": "bool"
        }
      ],
      "name": "ExpirationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ExpireKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KeyGranterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KeyGranterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newManager",
          "type": "address"
        }
      ],
      "name": "KeyManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "LockManagerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "LockManagerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "NewLockSymbol",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keyManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextAvailableNonce",
          "type": "uint256"
        }
      ],
      "name": "NonceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldKeyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "keyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "PricingChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "freeTrialLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundPenaltyBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "RefundPenaltyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExpiration",
          "type": "uint256"
        }
      ],
      "name": "RenewKeyPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "TransferFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKeyGranter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addLockManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAndRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyManager",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAndRefundFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableLock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expirationDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "expireAndRefundFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "freeTrialLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_txSender",
          "type": "address"
        }
      ],
      "name": "getCancelAndRefundApprovalHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "approvalHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "getCancelAndRefundValueFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "getHasValidKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pageSize",
          "type": "uint256"
        }
      ],
      "name": "getOwnersByPage",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getTokenIdFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "getTransferFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_expirationTimestamps",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_keyManagers",
          "type": "address[]"
        }
      ],
      "name": "grantKeys",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextAvailableNonce",
          "type": "uint256"
        }
      ],
      "name": "invalidateOffchainApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isAlive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKeyGranter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "isKeyOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isLockManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "keyExpirationTimestampFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keyManagerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "keyManagerToNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxNumberOfKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onKeyCancelHook",
      "outputs": [
        {
          "internalType": "contract ILockKeyCancelHook",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onKeyPurchaseHook",
      "outputs": [
        {
          "internalType": "contract ILockKeyPurchaseHook",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "publicLockVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "purchasePriceFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minKeyPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "refundPenaltyBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceLockManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_granter",
          "type": "address"
        }
      ],
      "name": "revokeKeyGranter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_onKeyPurchaseHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onKeyCancelHook",
          "type": "address"
        }
      ],
      "name": "setEventHooks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_keyManager",
          "type": "address"
        }
      ],
      "name": "setKeyManagerOf",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeShared",
          "type": "uint256"
        }
      ],
      "name": "shareKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "unlockProtocol",
      "outputs": [
        {
          "internalType": "contract IUnlock",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "updateBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "updateKeyPricing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "updateLockName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_lockSymbol",
          "type": "string"
        }
      ],
      "name": "updateLockSymbol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_freeTrialLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refundPenaltyBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateRefundPenalty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_transferFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateTransferFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_lockCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sendTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"CancelKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Disable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_timeAdded\",\"type\":\"bool\"}],\"name\":\"ExpirationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ExpireKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KeyGranterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KeyGranterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"KeyManagerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"LockManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"LockManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"NewLockSymbol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keyManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextAvailableNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldKeyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"PricingChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"freeTrialLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundPenaltyBasisPoints\",\"type\":\"uint256\"}],\"name\":\"RefundPenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"RenewKeyPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transferFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"TransferFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKeyGranter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addLockManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAndRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyManager\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAndRefundFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expirationDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"expireAndRefundFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeTrialLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_txSender\",\"type\":\"address\"}],\"name\":\"getCancelAndRefundApprovalHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"approvalHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"getCancelAndRefundValueFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"getHasValidKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pageSize\",\"type\":\"uint256\"}],\"name\":\"getOwnersByPage\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenIdFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"getTransferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_expirationTimestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_keyManagers\",\"type\":\"address[]\"}],\"name\":\"grantKeys\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lockCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expirationDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxNumberOfKeys\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextAvailableNonce\",\"type\":\"uint256\"}],\"name\":\"invalidateOffchainApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAlive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKeyGranter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"isKeyOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isLockManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"keyExpirationTimestampFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keyManagerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"keyManagerToNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxNumberOfKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onKeyCancelHook\",\"outputs\":[{\"internalType\":\"contract ILockKeyCancelHook\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onKeyPurchaseHook\",\"outputs\":[{\"internalType\":\"contract ILockKeyPurchaseHook\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicLockVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"purchasePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minKeyPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refundPenaltyBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceLockManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_granter\",\"type\":\"address\"}],\"name\":\"revokeKeyGranter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onKeyPurchaseHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onKeyCancelHook\",\"type\":\"address\"}],\"name\":\"setEventHooks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_keyManager\",\"type\":\"address\"}],\"name\":\"setKeyManagerOf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeShared\",\"type\":\"uint256\"}],\"name\":\"shareKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockProtocol\",\"outputs\":[{\"internalType\":\"contract IUnlock\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"updateBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"updateKeyPricing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"}],\"name\":\"updateLockName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lockSymbol\",\"type\":\"string\"}],\"name\":\"updateLockSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_freeTrialLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refundPenaltyBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateRefundPenalty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transferFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateTransferFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Julien Genestoux (unlock-protocol.com)\",\"details\":\"ERC165 allows our contract to be queried to determine whether it implements a given interface. Every ERC-721 compliant contract must implement the ERC165 interface. https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"balanceOf(address)\":{\"return\":\"The number of NFTs owned by `_keyOwner`, either 0 or 1.\"},\"cancelAndRefund(uint256)\":{\"details\":\"Destroys the key and sends a refund based on the amount of time remaining.\",\"params\":{\"_tokenId\":\"The id of the key to cancel.\"}},\"cancelAndRefundFor(address,uint8,bytes32,bytes32,uint256)\":{\"details\":\"Cancels a key managed by a different user and sends the funds to the msg.sender.\",\"params\":{\"_keyManager\":\"the key managed by this user will be canceled\",\"_tokenId\":\"The key to cancel\",\"_v\":\"_r _s getCancelAndRefundApprovalHash signed by the _keyOwner\"}},\"disableLock()\":{\"details\":\"Used to disable lock before migrating keys and/or destroying contract\"},\"expireAndRefundFor(address,uint256)\":{\"details\":\"Invoked by the lock owner to destroy the user's ket and perform a refund and cancellation of the key\"},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"return\":\"The approved address for this NFT, or the zero address if there is none\"},\"getCancelAndRefundApprovalHash(address,address)\":{\"details\":\"this can be computed in JS instead of read from the contract.\",\"params\":{\"_keyManager\":\"The key manager's address (also the message signer)\",\"_txSender\":\"The address cancelling cancel on behalf of the keyOwner\"},\"return\":\"approvalHash The hash to sign\"},\"getCancelAndRefundValueFor(address)\":{\"details\":\"Determines how much of a refund a key owner would receive if they issued a cancelAndRefund block.timestamp. Note that due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call.\"},\"getOwnersByPage(uint256,uint256)\":{\"params\":{\"_page\":\"the page of key owners requested when faceted by page size\",\"_pageSize\":\"the number of Key Owners requested per page\"}},\"getTokenIdFor(address)\":{\"return\":\"The tokenId of the NFT, else returns 0\"},\"getTransferFee(address,uint256)\":{\"params\":{\"_keyOwner\":\"The owner of the key check the transfer fee for.\"}},\"invalidateOffchainApproval(uint256)\":{\"details\":\"This can be used to invalidate a previously signed message.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given keyManager\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"keyExpirationTimestampFor(address)\":{\"details\":\"Returns the key's ExpirationTimestamp field for a given owner.Returns 0 if the owner has never owned a key for this lock\",\"params\":{\"_keyOwner\":\"address of the user for whom we search the key\"}},\"purchase(uint256,address,address,bytes)\":{\"details\":\"Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).\",\"params\":{\"_data\":\"arbitrary data populated by the front-end which initiated the sale\",\"_recipient\":\"address of the recipient of the purchased key\",\"_referrer\":\"address of the user making the referral\",\"_value\":\"the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)\"}},\"purchasePriceFor(address,address,bytes)\":{\"details\":\"minKeyPrice considers any discount from Unlock or the OnKeyPurchase hook\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to ''\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_to\":\"operator address to set the approval\"}},\"setKeyManagerOf(uint256,address)\":{\"params\":{\"_keyManager\":\"The address with the manager's rights for the given key. Setting _keyManager to address(0) means the keyOwner is also the keyManager\",\"_tokenId\":\"The id of the key to assign rights for\"}},\"shareKey(address,uint256,uint256)\":{\"params\":{\"_timeShared\":\"The amount of time shared\",\"_to\":\"The recipient of the shared key\",\"_tokenId\":\"the key to share\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token name\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"return\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_keyOwner)` or if  `_keyOwner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_keyOwner)`\",\"_keyOwner\":\"An address where we are interested in NFTs owned by them\"},\"return\":\"The token identifier for the `_index`th NFT assigned to `_keyOwner`,   (sort order not specified)\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \\\"ERC721 Metadata JSON Schema\\\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\"},\"withdraw(address,uint256)\":{\"details\":\"Called by owner to withdraw all funds from the lock and send them to the `beneficiary`.\",\"params\":{\"_amount\":\"specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.   * TODO: consider allowing anybody to trigger this as long as it goes to owner anyway? -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases.\",\"_tokenAddress\":\"specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds.\"}}},\"title\":\"The Lock contract\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"This approves _approved to get ownership of _tokenId. Note: that since this is used for both purchase and transfer approvals the approved token may not exist.\"},\"balanceOf(address)\":{\"notice\":\"In the specific case of a Lock, each owner can own only at most 1 key.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"getBalance(address,address)\":{\"notice\":\"Gets the current balance of the account provided.\"},\"getCancelAndRefundApprovalHash(address,address)\":{\"notice\":\"returns the hash to sign in order to allow another user to cancel on your behalf.\"},\"getHasValidKey(address)\":{\"notice\":\"Checks if the user has a non-expired key.\"},\"getOwnersByPage(uint256,uint256)\":{\"notice\":\"A function which returns a subset of the keys for this Lock as an array\"},\"getTokenIdFor(address)\":{\"notice\":\"Find the tokenId for a given user\"},\"getTransferFee(address,uint256)\":{\"notice\":\"Determines how much of a fee a key owner would need to pay in order to transfer the key to another account.  This is pro-rated so the fee goes down overtime.\"},\"grantKeys(address[],uint256[],address[])\":{\"notice\":\"Allows the Lock owner to give a collection of users a key with no charge. Each key may be assigned a different expiration date.\"},\"invalidateOffchainApproval(uint256)\":{\"notice\":\"Sets the minimum nonce for a valid off-chain approval message from the senders account.\"},\"isKeyOwner(uint256,address)\":{\"notice\":\"Checks if the given address owns the given tokenId.\"},\"numberOfOwners()\":{\"notice\":\"Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply.\"},\"purchasePriceFor(address,address,bytes)\":{\"notice\":\"returns the minimum price paid for a purchase with these params.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address. When transfer is complete, this functions checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.\"},\"setBaseTokenURI(string)\":{\"notice\":\"Allows the Lock owner to update the baseTokenURI for this Lock.\"},\"setEventHooks(address,address)\":{\"notice\":\"Allows a lock manager to add or remove an event hook\"},\"setKeyManagerOf(uint256,address)\":{\"notice\":\"Update transfer and cancel rights for a given key\"},\"shareKey(address,uint256,uint256)\":{\"notice\":\"Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key).\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"updateBeneficiary(address)\":{\"notice\":\"A function which lets the owner of the lock update the beneficiary account, which receives funds on withdrawal.\"},\"updateKeyPricing(uint256,address)\":{\"notice\":\"A function which lets the owner of the lock change the pricing for future purchases. This consists of 2 parts: The token address and the price in the given token. In order to set the token to ETH, use 0 for the token Address.\"},\"updateLockName(string)\":{\"notice\":\"Allows the Lock owner to assign a descriptive name for this Lock.\"},\"updateLockSymbol(string)\":{\"notice\":\"Allows the Lock owner to assign a Symbol for this Lock.\"},\"updateRefundPenalty(uint256,uint256)\":{\"notice\":\"Allow the owner to change the refund penalty.\"},\"updateTransferFee(uint256)\":{\"notice\":\"Allow the Lock owner to change the transfer fee.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol\":\"PublicLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol\":{\"keccak256\":\"0xe1c66f95f83e7786f849e98d48e82e4214f31200197e8ca6b226a0e4846023f8\",\"urls\":[\"bzz-raw://8498ab29c113e58d446106302513980ea822fd30de197b9b048073ae52c86ed2\",\"dweb:/ipfs/QmdwNDyUMtxcFjFzoAT4nuGSmtHghSDejFmwBBzvSFQLyt\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/UnlockUtils.sol\":{\"keccak256\":\"0x19217cfe9d970bee4056ff900b9b2df1a9234862dda03fb43574f3e99d8aedcf\",\"urls\":[\"bzz-raw://d37d9caf4eb340e8ebf756353a1744f4306672730a9acbea921765605aebb586\",\"dweb:/ipfs/QmUusP4G4M3pRuyjeBmZ36JiprUzpamBye3nwPTDPn6MV2\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol\":{\"keccak256\":\"0x848c2fc74325167d41346153c7377f73f4598a3ece00103b61bdcc1a5af73792\",\"urls\":[\"bzz-raw://1e6ded7e1fcdce3a702a3f33067c9d5d72cea10a7c49e300ebcd99c68715bfe9\",\"dweb:/ipfs/QmZrZfBvUeDucxKRyFg7uBxkW1VuXL8mJsxTxsu1voCS8s\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IUnlock.sol\":{\"keccak256\":\"0x1ba1b35c34522a769d5f8f31ae1300249a34d609758e2a42344e0c61212c32af\",\"urls\":[\"bzz-raw://16ebc86e86a423ec452435301585c8d50e32968bfcd16848449422274e927b0c\",\"dweb:/ipfs/QmUzb3XgHrgYn45aZEEbHCs7UokcFXQwvxm85bQFGZ3ZCE\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/hooks/ILockKeyCancelHook.sol\":{\"keccak256\":\"0x695b7a70e8a0d700b27486d19cea652916eb0a42fbac29005ca1143e107ae73d\",\"urls\":[\"bzz-raw://73077c6d2d63b5fbda59f200df7038eb3610f59e3c1994a64e8abf9c71b29928\",\"dweb:/ipfs/QmWZ2BirHhRVscDMyx7HFUsp5SWLiMPcaN2qWhA2P5Mv7E\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/hooks/ILockKeyPurchaseHook.sol\":{\"keccak256\":\"0x2add34b02d4189b207f6ad34b2881d4145080e6f8b78dd642aff360c6ab4a0d1\",\"urls\":[\"bzz-raw://28367d2db92f3dde65ccb61606b33daa1d06c35996e08c2a473b441862f78100\",\"dweb:/ipfs/QmaCV7mxw1X8CYnyoMEo2sgQcM5eFJvWvJUF18YMvgwHeu\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol\":{\"keccak256\":\"0x5882eacb14af518250af10641c21be2867714dcf8d4b93bbda08330f36ab1027\",\"urls\":[\"bzz-raw://d391c7577b7c9031e183c68ea42f26dd72882dbf82dcdb5c1808dd29563b1054\",\"dweb:/ipfs/QmWgRfrwarTiNk9YXvxpYDywc1QhLNxtBHNFskG7xNPSaE\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisable.sol\":{\"keccak256\":\"0x6aa1d472077028d61f71005830950f1a8224e375ecd5a67c79ae753e02f3dbf9\",\"urls\":[\"bzz-raw://bb287ad24ba99324d1c520b7cf12b9f54d7e7a8d40b6f654990999e0f362240e\",\"dweb:/ipfs/QmTRJv6bmZt3SLDnxV3FHfL3eW1GnKgr4Vhdm1etGNSTQK\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol\":{\"keccak256\":\"0x3769b8d1355ef7616c441b2fd958e83e3a1b945e146860c52a07648509c04054\",\"urls\":[\"bzz-raw://b48bedf97707c80daceadf6d84f50e12ac86318d53e979a146aad2af458eed1f\",\"dweb:/ipfs/QmcEePmEr6pXRCWLCALj35jJJKrXf9Dv8pDfB7XvAfyjCJ\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol\":{\"keccak256\":\"0x123e8440584c0b7270bd818fafebec60f09ad41bd73ec277898966c323066633\",\"urls\":[\"bzz-raw://a8a0efd964f3241c9adfb1bcefc81bbcd74431a80681007603776e8f4d419007\",\"dweb:/ipfs/QmfXok7bapNk5iy17HWd9dVKtwHtvRSJgcGYAY9DtXoo7L\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol\":{\"keccak256\":\"0x820c8bde09b2cd453beb3e7583512a39381e011772eb79105b4fa752d091f366\",\"urls\":[\"bzz-raw://a323b042bcc953e5673c8e5d9e625d130b0b32ecbfe8f8226d7e43263b7ef6a4\",\"dweb:/ipfs/QmboW16sJaksqFNN1jGPYLbqkh1oPJG1qrQQxArgPe2d86\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeyGranterRole.sol\":{\"keccak256\":\"0xa1ef1a24e6d5bc1a815330cbd4eb95e4d8bc0e368801256c45f1982932609953\",\"urls\":[\"bzz-raw://1769aec41490a4d7fa9c37c6206dcd161ce408e39896bd2352a559f819fd40e0\",\"dweb:/ipfs/Qmbq2C6nEnj2gSfLFP2GEcaKURM4kpzHsVyXcqvDNBrE7t\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol\":{\"keccak256\":\"0x7a971dda440a87e3b24468fa62ec21bc6e8f7092cdaa94fbc5f957802f603e85\",\"urls\":[\"bzz-raw://13f6a1af47a20b8a8f28ee30c5e53c9308e2745e11790d865be51ef502547731\",\"dweb:/ipfs/QmaXXnGKtbgYvSzLEG97H4kUSV1pBntVnvPg8e2kQw6yu5\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol\":{\"keccak256\":\"0x4f8dcb24330814245e3d882511f0122615add216bd8f876823c422b4ea287ad3\",\"urls\":[\"bzz-raw://b8ebd5e3149500cab14376ae18979c097920da30db07a2c531e97ac7dc96bb3a\",\"dweb:/ipfs/QmSJdm876oF1xgZWF1XRXryRPijCpbCzotLswW9bs8hgtS\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol\":{\"keccak256\":\"0x386ee362b85a1a6da3c643d0bca8a5d73b55adb95651452e2c7d6bded4448dbc\",\"urls\":[\"bzz-raw://cc96ade9174baae0a0462b41e06e70dd52f65d1a7521a22a3dcc1ff101985a99\",\"dweb:/ipfs/QmT2p8DYDw984oHjTz8RiKvTaHHXUvT5yStnygiYSzstpM\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol\":{\"keccak256\":\"0x66a0f72c0595d323840d694753d33960c2a6cf24ae23c1c905dfcc2eb9307b30\",\"urls\":[\"bzz-raw://b70fe3cba6a48d8e17a774918b6bc9947c0d45b4714c252293187654d99900c2\",\"dweb:/ipfs/QmQVGuoGCRowYrBkeb7zgWdwfPcz5hfDu3RVok5H4VdbM9\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol\":{\"keccak256\":\"0xc61cbbfff689e17af270bb50caa94275014edf10051871d4a9c3600a8c0aaf9f\",\"urls\":[\"bzz-raw://20676aea291bea2b7577318c4c38525553a01822a75534d492bb1b59f8a7c4c0\",\"dweb:/ipfs/QmaN68ZX9TiwCUvoKk29SHg8WfEa21bwVGjLreLaowmWme\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol\":{\"keccak256\":\"0x11a5d34373882b4899a885a0a921f9009d6c6c37070cdf7bb372172ac9d7c3b3\",\"urls\":[\"bzz-raw://5442ed2c27b9536534b615d58b44260f7b53d08ec28e4e6f693622ec58b89812\",\"dweb:/ipfs/QmeaDpoRx7XWvf7oxE1gGYEdLJH1erjZzfAsLwGFM6NasU\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol\":{\"keccak256\":\"0xcd9010b7903cf80376ad4453ef3d39763eea22e988f6f480071d0cca3c647f82\",\"urls\":[\"bzz-raw://91eccdc877b6a2dbcbdef3e81f278fc399965ce7fcb69620b4846670edb3cee9\",\"dweb:/ipfs/QmXfVCMB6Qku1XKsXp8XMWNubd6hbGmwPZ9rspoxSN3sYb\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol\":{\"keccak256\":\"0x0f620a07175c43fcefb9c6e0478bda92d833f47196e502c2cdf9c389d354c8cc\",\"urls\":[\"bzz-raw://9423dbecc4d4edf3ddae55c88d5829db37fecd51297b014afd91c18fea0ef760\",\"dweb:/ipfs/QmYLxyF39SQyAyJsMSjtKyUe62RhuUSWkg9GsHBraJZWe2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615a8680620000216000396000f3fe6080604052600436106103fa5760003560e01c80636eadde4311610213578063aae4b8f711610123578063d2503485116100ab578063f0ba60401161007a578063f0ba60401461137d578063f12c6b6e14611392578063f3fef3a3146113d1578063fc42b58f1461140a578063fe72e4c114611443576103fa565b8063d2503485146112aa578063d32bfb6c146112dd578063d4fac45d14611307578063e985e9c514611342576103fa565b8063b2e0f6e7116100f2578063b2e0f6e714611137578063b88d4fde14611185578063c1c98d0314611256578063c87b56dd1461126b578063d1bbd49c14611295576103fa565b8063aae4b8f71461105d578063abdf82ce14611090578063ad0e0a4d146110c3578063b11d7ec1146110fe576103fa565b806393fd1844116101a6578063994a8a7111610175578063994a8a7114610f865780639d76ea5814610fbf578063a22cb46514610fd4578063a2e4cd2e1461100f578063a375cb0514611048576103fa565b806393fd184414610ef057806395d89b4114610f05578063970aaeb714610f1a57806397aa390a14610f4d576103fa565b80638129fc1c116101e25780638129fc1c14610d5b57806381a3c94314610d705780638577a6d514610e8b5780638d0361fc14610eb5576103fa565b80636eadde4314610bbc57806370a0823114610c9857806374b6c10614610ccb578063782a4ade14610ce0576103fa565b80632f745c591161030e5780634d025fed116102a1578063550ef3a811610270578063550ef3a814610a9c578063564aa99d14610b1757806356e0d51f14610b4a5780636352211e14610b5f5780636d8ea5b414610b89576103fa565b80634d025fed146109e25780634f6ccce714610a0c57806352b0f63814610a3657806352d6a8e414610a69576103fa565b806339f46986116102dd57806339f46986146108cc5780633f33133a146108fc5780634136aa351461098a57806342842e0e1461099f576103fa565b80632f745c59146107d957806330176e131461081257806335576ad01461088d57806338af3eed146108b7576103fa565b806310803b7211610391578063183767da11610360578063183767da14610724578063217751bc1461073957806323b872dd1461074e5780632af9162a146107915780632d33dd5b146107c4576103fa565b806310803b721461066557806310e56973146106e557806311a4c03a146106fa57806318160ddd1461070f576103fa565b8063095ea7b3116103cd578063095ea7b31461053e578063097ba333146105775780630aaffd2a1461061d5780630f15023b14610650576103fa565b806301ffc9a7146103fc578063025e7c271461044457806306fdde031461048a578063081812fc14610514575b005b34801561040857600080fd5b506104306004803603602081101561041f57600080fd5b50356001600160e01b031916611476565b604080519115158252519081900360200190f35b34801561045057600080fd5b5061046e6004803603602081101561046757600080fd5b5035611499565b604080516001600160a01b039092168252519081900360200190f35b34801561049657600080fd5b5061049f6114c0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104d95781810151838201526020016104c1565b50505050905090810190601f1680156105065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561052057600080fd5b5061046e6004803603602081101561053757600080fd5b503561154e565b34801561054a57600080fd5b506103fa6004803603604081101561056157600080fd5b506001600160a01b0381351690602001356115c4565b34801561058357600080fd5b5061060b6004803603606081101561059a57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156105cd57600080fd5b8201836020820111156105df57600080fd5b803590602001918460018302840111600160201b8311171561060057600080fd5b50909250905061174b565b60408051918252519081900360200190f35b34801561062957600080fd5b506103fa6004803603602081101561064057600080fd5b50356001600160a01b031661179a565b34801561065c57600080fd5b5061046e611877565b34801561067157600080fd5b506106956004803603604081101561068857600080fd5b5080359060200135611886565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106d15781810151838201526020016106b9565b505050509050019250505060405180910390f35b3480156106f157600080fd5b5061060b6119a0565b34801561070657600080fd5b5061060b6119a6565b34801561071b57600080fd5b5061060b6119ac565b34801561073057600080fd5b5061060b6119b3565b34801561074557600080fd5b5061046e6119b9565b34801561075a57600080fd5b506103fa6004803603606081101561077157600080fd5b506001600160a01b038135811691602081013590911690604001356119c8565b34801561079d57600080fd5b506103fa600480360360208110156107b457600080fd5b50356001600160a01b0316611ccd565b3480156107d057600080fd5b5061046e611d59565b3480156107e557600080fd5b5061060b600480360360408110156107fc57600080fd5b506001600160a01b038135169060200135611d68565b34801561081e57600080fd5b506103fa6004803603602081101561083557600080fd5b810190602081018135600160201b81111561084f57600080fd5b82018360208201111561086157600080fd5b803590602001918460018302840111600160201b8311171561088257600080fd5b509092509050611dc6565b34801561089957600080fd5b506103fa600480360360208110156108b057600080fd5b5035611e1b565b3480156108c357600080fd5b5061046e611ebd565b3480156108d857600080fd5b506103fa600480360360408110156108ef57600080fd5b5080359060200135611ecc565b6103fa6004803603608081101561091257600080fd5b8135916001600160a01b03602082013581169260408301359091169190810190608081016060820135600160201b81111561094c57600080fd5b82018360208201111561095e57600080fd5b803590602001918460018302840111600160201b8311171561097f57600080fd5b509092509050611f56565b34801561099657600080fd5b50610430612466565b3480156109ab57600080fd5b506103fa600480360360608110156109c257600080fd5b506001600160a01b03813581169160208101359091169060400135612476565b3480156109ee57600080fd5b5061046e60048036036020811015610a0557600080fd5b5035612491565b348015610a1857600080fd5b5061060b60048036036020811015610a2f57600080fd5b50356124ac565b348015610a4257600080fd5b5061043060048036036020811015610a5957600080fd5b50356001600160a01b03166124f7565b348015610a7557600080fd5b5061060b60048036036020811015610a8c57600080fd5b50356001600160a01b031661250a565b348015610aa857600080fd5b506103fa60048036036020811015610abf57600080fd5b810190602081018135600160201b811115610ad957600080fd5b820183602082011115610aeb57600080fd5b803590602001918460018302840111600160201b83111715610b0c57600080fd5b509092509050612515565b348015610b2357600080fd5b506103fa60048036036020811015610b3a57600080fd5b50356001600160a01b0316612565565b348015610b5657600080fd5b5061060b6125f1565b348015610b6b57600080fd5b5061046e60048036036020811015610b8257600080fd5b50356125f7565b348015610b9557600080fd5b5061043060048036036020811015610bac57600080fd5b50356001600160a01b031661266d565b348015610bc857600080fd5b506103fa600480360360c0811015610bdf57600080fd5b6001600160a01b03823581169260208101359260408201359092169160608201359160808101359181019060c0810160a0820135600160201b811115610c2457600080fd5b820183602082011115610c3657600080fd5b803590602001918460018302840111600160201b83111715610c5757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061268d945050505050565b348015610ca457600080fd5b5061060b60048036036020811015610cbb57600080fd5b50356001600160a01b031661278d565b348015610cd757600080fd5b5061060b6127fc565b348015610cec57600080fd5b506103fa60048036036020811015610d0357600080fd5b810190602081018135600160201b811115610d1d57600080fd5b820183602082011115610d2f57600080fd5b803590602001918460018302840111600160201b83111715610d5057600080fd5b509092509050612802565b348015610d6757600080fd5b506103fa6128b7565b348015610d7c57600080fd5b506103fa60048036036060811015610d9357600080fd5b810190602081018135600160201b811115610dad57600080fd5b820183602082011115610dbf57600080fd5b803590602001918460208302840111600160201b83111715610de057600080fd5b919390929091602081019035600160201b811115610dfd57600080fd5b820183602082011115610e0f57600080fd5b803590602001918460208302840111600160201b83111715610e3057600080fd5b919390929091602081019035600160201b811115610e4d57600080fd5b820183602082011115610e5f57600080fd5b803590602001918460208302840111600160201b83111715610e8057600080fd5b509092509050612969565b348015610e9757600080fd5b506103fa60048036036020811015610eae57600080fd5b5035612b8b565b348015610ec157600080fd5b5061060b60048036036040811015610ed857600080fd5b506001600160a01b0381358116916020013516612c07565b348015610efc57600080fd5b5061060b612c92565b348015610f1157600080fd5b5061049f612c98565b348015610f2657600080fd5b5061060b60048036036020811015610f3d57600080fd5b50356001600160a01b0316612e87565b348015610f5957600080fd5b506103fa60048036036040811015610f7057600080fd5b506001600160a01b038135169060200135612ea2565b348015610f9257600080fd5b5061043060048036036040811015610fa957600080fd5b50803590602001356001600160a01b0316612f3b565b348015610fcb57600080fd5b5061046e612f5c565b348015610fe057600080fd5b506103fa60048036036040811015610ff757600080fd5b506001600160a01b0381351690602001351515612f6b565b34801561101b57600080fd5b506103fa6004803603604081101561103257600080fd5b50803590602001356001600160a01b0316613076565b34801561105457600080fd5b5061060b613245565b34801561106957600080fd5b506104306004803603602081101561108057600080fd5b50356001600160a01b031661324b565b34801561109c57600080fd5b5061060b600480360360208110156110b357600080fd5b50356001600160a01b031661325e565b3480156110cf57600080fd5b506103fa600480360360408110156110e657600080fd5b506001600160a01b038135811691602001351661327c565b34801561110a57600080fd5b506103fa6004803603604081101561112157600080fd5b50803590602001356001600160a01b03166133d6565b34801561114357600080fd5b506103fa600480360360a081101561115a57600080fd5b506001600160a01b038135169060ff60208201351690604081013590606081013590608001356134f3565b34801561119157600080fd5b506103fa600480360360808110156111a857600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156111e257600080fd5b8201836020820111156111f457600080fd5b803590602001918460018302840111600160201b8311171561121557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613643945050505050565b34801561126257600080fd5b506103fa6136b1565b34801561127757600080fd5b5061049f6004803603602081101561128e57600080fd5b503561377d565b3480156112a157600080fd5b5061060b613a0a565b3480156112b657600080fd5b506103fa600480360360208110156112cd57600080fd5b50356001600160a01b0316613a0f565b3480156112e957600080fd5b506103fa6004803603602081101561130057600080fd5b5035613a9b565b34801561131357600080fd5b5061060b6004803603604081101561132a57600080fd5b506001600160a01b0381358116916020013516613b41565b34801561134e57600080fd5b506104306004803603604081101561136557600080fd5b506001600160a01b0381358116916020013516613beb565b34801561138957600080fd5b506103fa613c80565b34801561139e57600080fd5b506103fa600480360360608110156113b557600080fd5b506001600160a01b038135169060208101359060400135613cbe565b3480156113dd57600080fd5b506103fa600480360360408110156113f457600080fd5b506001600160a01b038135169060200135614042565b34801561141657600080fd5b5061060b6004803603604081101561142d57600080fd5b506001600160a01b038135169060200135614183565b34801561144f57600080fd5b5061060b6004803603602081101561146657600080fd5b50356001600160a01b031661422c565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b607481815481106114a657fe5b6000918252602090912001546001600160a01b0316905081565b6076805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156115465780601f1061151b57610100808354040283529160200191611546565b820191906000526020600020905b81548152906001019060200180831161152957829003601f168201915b505050505081565b60008181526073602052604081205482906001600160a01b03166115a7576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b50506000908152607960205260409020546001600160a01b031690565b606954600160a01b900460ff16611614576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b8061161f813361423e565b8061162f575061162f81336142a0565b806116575750600081815260736020526040902054611657906001600160a01b031633613beb565b611696576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b336001600160a01b03841614156116e3576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b600082815260796020908152604080832080546001600160a01b0319166001600160a01b038881169182179092556073909352818420549151869492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061178e858585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506142c192505050565b50909695505050505050565b606f546001600160a01b03163314806117b757506117b73361324b565b611808576040805162461bcd60e51b815260206004820152601f60248201527f4f4e4c595f42454e45464943494152595f4f525f4c4f434b4d414e4147455200604482015290519081900360640190fd5b6001600160a01b038116611855576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b606f80546001600160a01b0319166001600160a01b0392909216919091179055565b606a546001600160a01b031681565b6074546060906118d3576040805162461bcd60e51b81526020600482015260136024820152724e4f5f4f55545354414e44494e475f4b45595360681b604482015290519081900360640190fd5b60745482908482029060009082840111156118f6575060745481810392506118fb565b508082015b606083604051908082528060200260200182016040528015611927578160200160208202803883390190505b5090506000835b83811015611991576074818154811061194357fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061196d57fe5b6001600160a01b03909216602092830291909101909101526001918201910161192e565b50909450505050505b92915050565b606c5481565b606b5481565b606e545b90565b607b5481565b6071546001600160a01b031681565b606954600160a01b900460ff16611a18576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b82611a228161266d565b611a63576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b81611a6e813361423e565b80611a7e5750611a7e81336142a0565b80611aa65750600081815260736020526040902054611aa6906001600160a01b031633613beb565b611ae5576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b611aef8386612f3b565b611b40576040805162461bcd60e51b815260206004820152601c60248201527f5452414e534645525f46524f4d3a204e4f545f4b45595f4f574e455200000000604482015290519081900360640190fd5b612710607b5410611b91576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416611bde576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000611beb866000614183565b6001600160a01b03808816600090815260726020526040808220928916825281206001810154939450919290611c2490889086906144cd565b8154611c3757868255611c3788886145ef565b428111611c635760018084015490830155868255611c5487614677565b611c5e88886145ef565b611c80565b6001830154611c7a9042830363ffffffff6146dc16565b60018301555b42600184015560008355611c9387614736565b86886001600160a01b03168a6001600160a01b0316600080516020615a0883398151915260405160405180910390a4505050505050505050565b611cd63361324b565b611d115760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611d2260678263ffffffff61477116565b6040516001600160a01b038216907f766f6199fea59554b9ff688e413302b9200f85d74811c053c12d945ac6d8dd7a90600090a250565b6070546001600160a01b031681565b60008115611db6576040805162461bcd60e51b815260206004820152601660248201527527a7262cafa7a722afa5a2acafa822a92fa7aba722a960511b604482015290519081900360640190fd5b611dbf83612e87565b9392505050565b611dcf3361324b565b611e0a5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611e1660788383615771565b505050565b336000908152606860205260409020548111611e73576040805162461bcd60e51b81526020600482015260126024820152711393d390d157d053149150511657d554d15160721b604482015290519081900360640190fd5b33600081815260686020908152604091829020849055815184815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a250565b606f546001600160a01b031681565b611ed53361324b565b611f105760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b604080518381526020810183905281517fd6867bc538320e67d7bdc35860c27c08486eb490b4fd9b820fff18fb28381d3c929181900390910190a1607d91909155607c55565b606954600160a01b900460ff16611fa6576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b606e54606d5411611fee576040805162461bcd60e51b815260206004820152600d60248201526c1313d0d2d7d4d3d31117d3d555609a1b604482015290519081900360640190fd5b6001600160a01b03841661203b576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038416600090815260726020526040812080549091816120ab57612065836147d8565b8254915061207387836145ef565b50606b5442016001830181905560405182906001600160a01b03891690600090600080516020615a08833981519152908290a4612171565b428360010154111561211b57606b5460018401546120ce9163ffffffff6146dc16565b600184018190556040805182815290519192506001600160a01b038916917f872bd7c99ad5e7b6ed7f0a890f348839cb8e225c9deaa3909afedae54c93d17d9181900360200190a2612171565b50606b5442016001830181905561213182614677565b6040805182815290516001600160a01b038916917f872bd7c99ad5e7b6ed7f0a890f348839cb8e225c9deaa3909afedae54c93d17d919081900360200190a25b60008060006121b78a8a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506142c192505050565b91945092509050811561223157606a5460408051633652466360e01b8152600481018590526024810184905290516001600160a01b039092169163365246639160448082019260009290919082900301818387803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050505b606a546001600160a01b031663939d9f1f8461224c8c61266d565b612257576000612259565b8b5b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b1580156122a857600080fd5b505af11580156122bc573d6000803e3d6000fd5b5050606954600092506001600160a01b03161590506122fc57506069548b906001600160a01b03166122f68133308563ffffffff6147ed16565b506122ff565b50345b83811015612349576040805162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b604482015290519081900360640190fd5b6070546001600160a01b03161561245857607060009054906101000a90046001600160a01b03166001600160a01b03166398499657338d8d8d8d8a886040518863ffffffff1660e01b815260040180886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b15801561243f57600080fd5b505af1158015612453573d6000803e3d6000fd5b505050505b505050505050505050505050565b606954600160a01b900460ff1681565b611e1683838360405180602001604052806000815250613643565b6075602052600090815260409020546001600160a01b031681565b6000606e5482106124f3576040805162461bcd60e51b815260206004820152600c60248201526b4f55545f4f465f52414e474560a01b604482015290519081900360640190fd5b5090565b600061199a60678363ffffffff61484716565b600061199a826148ae565b61251e3361324b565b6125595760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611e1660768383615771565b61256e3361324b565b6125a95760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6125ba60678263ffffffff6149b516565b6040516001600160a01b038216907f684f8a71407db0c334454ebe9c9b288549317893a20b10dc779ec5c118dcd12190600090a250565b607c5481565b60008181526073602052604081205482906001600160a01b0316612650576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b50506000908152607360205260409020546001600160a01b031690565b6001600160a01b0316600090815260726020526040902060010154421090565b600054610100900460ff16806126a657506126a6614a36565b806126b4575060005460ff16155b6126ef5760405162461bcd60e51b815260040180806020018281038252602e8152602001806159da602e913960400191505060405180910390fd5b600054610100900460ff1615801561271a576000805460ff1961ff0019909116610100171660011790555b61272385614a3c565b61272b614b0b565b61273787878686614b20565b61274082614bb6565b612748614be2565b612750614bf4565b61275987614bfc565b61276287614c1a565b6127726380ac58cd60e01b614c38565b8015612784576000805461ff00191690555b50505050505050565b60006001600160a01b0382166127dc576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6127e58261266d565b6127f05760006127f3565b60015b60ff1692915050565b606d5481565b61280b3361324b565b6128465760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b61285260778383615771565b507f8868e22e84ebf32da89b2ebcb0ac642816304ea3863b257f240df9098719cb97828260405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b600054610100900460ff16806128d057506128d0614a36565b806128de575060005460ff16155b6129195760405162461bcd60e51b815260040180806020018281038252602e8152602001806159da602e913960400191505060405180910390fd5b600054610100900460ff16158015612944576000805460ff1961ff0019909116610100171660011790555b6129546301ffc9a760e01b614c38565b8015612966576000805461ff00191690555b50565b612972336124f7565b8061298157506129813361324b565b6129bc5760405162461bcd60e51b815260040180806020018281038252604881526020018061592e6048913960600191505060405180910390fd5b60005b858110156127845760008787838181106129d557fe5b905060200201356001600160a01b0316905060008686848181106129f557fe5b9050602002013590506000858585818110612a0c57fe5b905060200201356001600160a01b0316905060006001600160a01b0316836001600160a01b03161415612a78576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038316600090815260726020526040902060018101548311612adb576040805162461bcd60e51b815260206004820152601060248201526f414c52454144595f4f574e535f4b455960801b604482015290519081900360640190fd5b805480612af857612aeb826147d8565b508054612af885826145ef565b60008181526075602052604080822080546001600160a01b0319166001600160a01b0387169081179091559051909183917f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e39190a36001820184905560405181906001600160a01b03871690600090600080516020615a08833981519152908290a45050600190930192506129bf915050565b612b943361324b565b612bcf5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6040805182815290517f0496ed1e61eb69727f9659a8e859288db4758ffb1f744d1c1424634f90a257f49181900360200190a1607b55565b600030604051808061587460259139604080519182900360250182206001600160a01b03881660009081526068602081815291849020546bffffffffffffffffffffffff19606098891b811684880152603487019490945260548601529588901b90911660748401528151808403909501855260889092019052825192019190912091505092915050565b60745490565b60775460609060026000196101006001841615020190911604612df557606a60009054906101000a90046001600160a01b03166001600160a01b031663cec410526040518163ffffffff1660e01b815260040160006040518083038186803b158015612d0357600080fd5b505afa158015612d17573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612d4057600080fd5b8101908080516040519392919084600160201b821115612d5f57600080fd5b908301906020820185811115612d7457600080fd5b8251600160201b811182820188101715612d8d57600080fd5b82525081516020918201929091019080838360005b83811015612dba578181015183820152602001612da2565b50505050905090810190601f168015612de75780820380516001836020036101000a031916815260200191505b5060405250505090506119b0565b6077805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612e7b5780601f10612e5057610100808354040283529160200191612e7b565b820191906000526020600020905b815481529060010190602001808311612e5e57829003601f168201915b505050505090506119b0565b6001600160a01b031660009081526072602052604090205490565b612eab3361324b565b612ee65760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b81612ef08161266d565b612f31576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b611e168383614cbc565b600091825260736020526040909120546001600160a01b0391821691161490565b6069546001600160a01b031681565b606954600160a01b900460ff16612fbb576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6001600160a01b038216331415613008576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b336000818152607a602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61307f3361324b565b6130ba5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b606954600160a01b900460ff1661310a576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b606c546069546001600160a01b03908116908316158061318e57506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561316057600080fd5b505afa158015613174573d6000803e3d6000fd5b505050506040513d602081101561318a57600080fd5b5051115b6131cf576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b606c849055606980546001600160a01b0319166001600160a01b038581169190911791829055604080518581526020810188905284831681830152929091166060830152517f3615065ccf48367ac483ac86701248e2e5ff55bdd9be845007d34a3b68d719d4916080908290030190a150505050565b607d5481565b600061199a60668363ffffffff61484716565b6001600160a01b031660009081526072602052604090206001015490565b6132853361324b565b6132c05760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6001600160a01b03821615806132e357506132e3826001600160a01b0316614db7565b613334576040805162461bcd60e51b815260206004820152601860248201527f494e56414c49445f4f4e5f4b45595f534f4c445f484f4f4b0000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806133575750613357816001600160a01b0316614db7565b6133a8576040805162461bcd60e51b815260206004820152601a60248201527f494e56414c49445f4f4e5f4b45595f43414e43454c5f484f4f4b000000000000604482015290519081900360640190fd5b607080546001600160a01b039384166001600160a01b03199182161790915560718054929093169116179055565b60008281526073602052604090205482906001600160a01b031661342f576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b613439833361423e565b8061344857506134483361324b565b613499576040805162461bcd60e51b815260206004820152601f60248201527f554e415554484f52495a45445f4b45595f4d414e414745525f55504441544500604482015290519081900360640190fd5b60008381526075602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909185917f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e39190a3505050565b6134fd8533612c07565b85858585836001600160a01b0316600161351687614dee565b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613570573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146135c9576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6001600160a01b038416600081815260686020908152604091829020805460010190819055825190815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a2600061362a876125f7565b90506000613637826148ae565b90506124588282614cbc565b61364e8484846119c8565b61365a84848484614e3f565b6136ab576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b50505050565b6136ba3361324b565b6136f55760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b606954600160a01b900460ff16613745576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6040517f25a311358326fb18c62efc24bc28d3126acee8d2a67fd8b2145b757dc8bd1bc190600090a16069805460ff60a01b19169055565b60008181526073602052604090205460609082906001600160a01b03166137d9576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b6078546060906002600019610100600184161502019091160461393657606a60009054906101000a90046001600160a01b03166001600160a01b031663a998e9fb6040518163ffffffff1660e01b815260040160006040518083038186803b15801561384457600080fd5b505afa158015613858573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561388157600080fd5b8101908080516040519392919084600160201b8211156138a057600080fd5b9083019060208201858111156138b557600080fd5b8251600160201b8111828201881017156138ce57600080fd5b82525081516020918201929091019080838360005b838110156138fb5781810151838201526020016138e3565b50505050905090810190601f1680156139285780820380516001836020036101000a031916815260200191505b5060405250505090506139c4565b6078805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156139bc5780601f10613991576101008083540402835291602001916139bc565b820191906000526020600020905b81548152906001019060200180831161399f57829003601f168201915b505050505090505b613a026139d030614f72565b604051806040016040528060018152602001602f60f81b8152506139f3876150ee565b8492919063ffffffff6151b216565b949350505050565b600790565b613a183361324b565b613a535760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b613a6460668263ffffffff6149b516565b6040516001600160a01b038216907f91d5c045d5bd98bf59a379b259ebca05b93bf79af1845fdf87e3172385d4c7f790600090a250565b80613aa6813361423e565b80613ab65750613ab681336142a0565b80613ade5750600081815260736020526040902054613ade906001600160a01b031633613beb565b613b1d576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b6000613b28836125f7565b90506000613b35826148ae565b90506136ab8282614cbc565b60006001600160a01b038316613b6257506001600160a01b0381163161199a565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015613bb857600080fd5b505afa158015613bcc573d6000803e3d6000fd5b505050506040513d6020811015613be257600080fd5b5051905061199a565b6001600160a01b038083166000908152607260209081526040808320548084526075909252822054919290911680613c4e575050506001600160a01b038083166000908152607a602090815260408083209385168352929052205460ff1661199a565b6001600160a01b039081166000908152607a602090815260408083209387168352929052205460ff16915061199a9050565b613c9160663363ffffffff61477116565b60405133907f42885193b8178d25fca25a38e6fcc93918501e91be06d85e0c8afb3bad95238090600090a2565b606954600160a01b900460ff16613d0e576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b81613d19813361423e565b80613d295750613d2981336142a0565b80613d515750600081815260736020526040902054613d51906001600160a01b031633613beb565b613d90576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b612710607b5410613de1576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416613e2e576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000838152607360205260409020546001600160a01b0316613e4f8161266d565b613e90576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b0380821660009081526072602052604080822092881682528120805460018401549192909142900381613eca878a614183565b90506000613ede8a8363ffffffff6146dc16565b905082811015613efc57899350613ef78b8260006144cd565b613f40565b613f068884614183565b42600189015560405181850395509092508b907f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79590600090a25b84613f8757613f4e866147d8565b85549450613f5c8c866145ef565b60405185906001600160a01b038e1690600090600080516020615a08833981519152908290a4613f9b565b42866001015411613f9b57613f9b85614677565b613fa7858560016144cd565b848c6001600160a01b0316896001600160a01b0316600080516020615a0883398151915260405160405180910390a4613ff1888d8d60405180602001604052806000815250614e3f565b612458576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b61404b3361324b565b806140605750606f546001600160a01b031633145b6140b1576040805162461bcd60e51b815260206004820181905260248201527f4f4e4c595f4c4f434b5f4d414e414745525f4f525f42454e4546494349415259604482015290519081900360640190fd5b60006140bd8330613b41565b905060008215806140cd57508183115b15614121576000821161411a576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b5080614124565b50815b606f546040805183815290516001600160a01b039283169287169133917f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e9181900360200190a4606f546136ab9085906001600160a01b031683615303565b60008261418f8161266d565b6141d0576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03841660009081526072602052604081209080856141fd57428360010154039150614201565b8591505b612710614219607b548461535090919063ffffffff16565b8161422057fe5b04979650505050505050565b60686020526000908152604090205481565b6000828152607560205260408120546001600160a01b038381169116148061428b57506000838152607560205260409020546001600160a01b031615801561428b575061428b8383612f3b565b156142985750600161199a565b50600061199a565b600091825260796020526040909120546001600160a01b0391821691161490565b607054600090819081906001600160a01b0316156143d55760705460405163221c1fd160e01b815233600482018181526001600160a01b038a811660248501528981166044850152608060648501908152895160848601528951919095169463221c1fd1948c938c938c93919260a40190602085019080838360005b8381101561435557818101518382015260200161433d565b50505050905090810190601f1680156143825780820380516001836020036101000a031916815260200191505b509550505050505060206040518083038186803b1580156143a257600080fd5b505afa1580156143b6573d6000803e3d6000fd5b505050506040513d60208110156143cc57600080fd5b505192506143db565b606c5492505b82156144c457606a5460408051630cb175e360e01b81526001600160a01b038981166004830152602482018790528251931692630cb175e392604480840193919291829003018186803b15801561443157600080fd5b505afa158015614445573d6000803e3d6000fd5b505050506040513d604081101561445b57600080fd5b5080516020909101519092509050828211156144be576040805162461bcd60e51b815260206004820152601c60248201527f494e56414c49445f444953434f554e545f46524f4d5f554e4c4f434b00000000604482015290519081900360640190fd5b81830392505b93509350939050565b6000838152607360205260409020546001600160a01b03168061452a576040805162461bcd60e51b815260206004820152601060248201526f4e4f4e5f4558495354454e545f4b455960801b604482015290519081900360640190fd5b6001600160a01b0381166000908152607260205260408120600181015490916145528461266d565b9050841561459557801561457a57614570828763ffffffff6146dc16565b6001840155614590565b61458a428763ffffffff6146dc16565b60018401555b6145ab565b6145a5828763ffffffff6153a916565b60018401555b604080518781528615156020820152815189927fe9408df99703ae33a9d01185bcad328ea8683fb1f920da9c30959c192f21b5b3928290030190a250505050505050565b6000818152607360205260409020546001600160a01b038381169116146146735760748054600181019091557f19a0b39aa25ac793b5f6e9a0534364cc0b3fd1ea9b651e79c7f50a59d48ef8130180546001600160a01b0384166001600160a01b031991821681179092556000838152607360205260409020805490911690911790555b5050565b6000818152607560205260409020546001600160a01b0316156129665760008181526075602052604080822080546001600160a01b03191690555182907f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e3908390a350565b600082820183811015611dbf576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818152607960205260409020546001600160a01b03161561296657600090815260796020526040902080546001600160a01b0319169055565b61477b8282614847565b6147b65760405162461bcd60e51b81526004018080602001828103825260218152602001806159766021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b805461296657606e8054600101908190559055565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526136ab9085906153eb565b60006001600160a01b03821661488e5760405162461bcd60e51b81526004018080602001828103825260228152602001806159b86022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000816148ba8161266d565b6148fb576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03831660009081526072602052604090206001810154606b54607d54429092039182011061493457606c549350614955565b606b54606c5461494a908363ffffffff61535016565b8161495157fe5b0493505b607d5415806149695750606b54607d548201105b156149ad57600061271061498a607c54606c5461535090919063ffffffff16565b8161499157fe5b049050808511156149a65780850394506149ab565b600094505b505b505050919050565b6149bf8282614847565b15614a11576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b303b1590565b606980546001600160a01b0319166001600160a01b0383169081179091551580614aca57506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614a9c57600080fd5b505afa158015614ab0573d6000803e3d6000fd5b505050506040513d6020811015614ac657600080fd5b5051115b612966576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b6069805460ff60a01b1916600160a01b179055565b63bbf81e00831115614b79576040805162461bcd60e51b815260206004820152601860248201527f4d41585f45585049524154494f4e5f3130305f59454152530000000000000000604482015290519081900360640190fd5b606a8054336001600160a01b031991821617909155606f80549091166001600160a01b039590951694909417909355606b91909155606c55606d55565b614bbe6128b7565b8051614bd19060769060208401906157eb565b50612966635b5e139f60e01b614c38565b614bf263780e9d6360e01b614c38565b565b6103e8607c55565b614c058161324b565b6129665761296660668263ffffffff6149b516565b614c23816124f7565b6129665761296660678263ffffffff6149b516565b6001600160e01b03198082161415614c97576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b6001600160a01b03821660008181526072602090815260409182902080548351868152935191943394909391927f0a7068a9989857441c039a14a42b67ed71dd1fcfe5a9b17cc87b252e47bce528929181900390910190a44260018201558115614d3757606954614d37906001600160a01b03168484615303565b6071546001600160a01b031615611e16576071546040805163b499b6c560e01b81523360048201526001600160a01b038681166024830152604482018690529151919092169163b499b6c591606480830192600092919082900301818387803b158015614da357600080fd5b505af1158015612784573d6000803e3d6000fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590613a025750141592915050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6000614e53846001600160a01b0316614db7565b614e5f57506001613a02565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015614ed9578181015183820152602001614ec1565b50505050905090810190601f168015614f065780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015614f2857600080fd5b505af1158015614f3c573d6000803e3d6000fd5b505050506040513d6020811015614f5257600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b03851692918491602082018180388339019050509050600360fc1b81600081518110614fd657fe5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614fff57fe5b60200101906001600160f81b031916908160001a90535060005b60148110156150e5578260048583600c016020811061503457fe5b1a60f81b6001600160f81b031916901c60f81c60ff168151811061505457fe5b602001015160f81c60f81b82826002026002018151811061507157fe5b60200101906001600160f81b031916908160001a905350828482600c016020811061509857fe5b825191901a600f169081106150a957fe5b602001015160f81c60f81b8282600202600301815181106150c657fe5b60200101906001600160f81b031916908160001a905350600101615019565b50949350505050565b606081806151155750506040805180820190915260018152600360fc1b6020820152611494565b8260005b811561512d57600101600a82049150615119565b6060816040519080825280601f01601f19166020018201604052801561515a576020820181803883390190505b50905060001982015b84156151a857600a850660300160f81b8282806001900393508151811061518657fe5b60200101906001600160f81b031916908160001a905350600a85049450615163565b5095945050505050565b6060848484846040516020018085805190602001908083835b602083106151ea5780518252601f1990920191602091820191016151cb565b51815160209384036101000a600019018019909216911617905287519190930192870191508083835b602083106152325780518252601f199092019160209182019101615213565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b6020831061527a5780518252601f19909201916020918201910161525b565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106152c25780518252601f1990920191602091820191016152a3565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040529050949350505050565b8015611e16576001600160a01b038316615335576153306001600160a01b0383168263ffffffff6155a316565b611e16565b826136ab6001600160a01b038216848463ffffffff61568816565b60008261535f5750600061199a565b8282028284828161536c57fe5b0414611dbf5760405162461bcd60e51b81526004018080602001828103825260218152602001806159976021913960400191505060405180910390fd5b6000611dbf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506156da565b6153fd826001600160a01b0316614db7565b61544e576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061548c5780518252601f19909201916020918201910161546d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146154ee576040519150601f19603f3d011682016040523d82523d6000602084013e6154f3565b606091505b50915091508161554a576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156136ab5780806020019051602081101561556657600080fd5b50516136ab5760405162461bcd60e51b815260040180806020018281038252602a815260200180615a28602a913960400191505060405180910390fd5b804710156155f8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114615643576040519150601f19603f3d011682016040523d82523d6000602084013e615648565b606091505b5050905080611e165760405162461bcd60e51b815260040180806020018281038252603a8152602001806158d4603a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e169084906153eb565b600081848411156157695760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561572e578181015183820152602001615716565b50505050905090810190601f16801561575b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157b25782800160ff198235161785556157df565b828001600101855582156157df579182015b828111156157df5782358255916020019190600101906157c4565b506124f3929150615859565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061582c57805160ff19168380011785556157df565b828001600101855582156157df579182015b828111156157df57825182559160200191906001019061583e565b6119b091905b808211156124f3576000815560010161585f56fe63616e63656c416e64526566756e64466f722861646472657373205f6b65794f776e6572294d6978696e4c6f636b4d616e616765723a2063616c6c657220646f6573206e6f74206861766520746865204c6f636b4d616e6167657220726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644f4e4c595f4b45595f4d414e414745525f4f525f415050524f564544000000004d6978696e4b65794772616e7465723a2063616c6c657220646f6573206e6f74206861766520746865204b65794772616e746572206f72204c6f636b4d616e6167657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582026f764166712e1e3c2d6574050ce91467e6e80eb5c97710a8cd8e5cf0e58cafa64736f6c63430005110032",
  "deployedBytecode": "0x6080604052600436106103fa5760003560e01c80636eadde4311610213578063aae4b8f711610123578063d2503485116100ab578063f0ba60401161007a578063f0ba60401461137d578063f12c6b6e14611392578063f3fef3a3146113d1578063fc42b58f1461140a578063fe72e4c114611443576103fa565b8063d2503485146112aa578063d32bfb6c146112dd578063d4fac45d14611307578063e985e9c514611342576103fa565b8063b2e0f6e7116100f2578063b2e0f6e714611137578063b88d4fde14611185578063c1c98d0314611256578063c87b56dd1461126b578063d1bbd49c14611295576103fa565b8063aae4b8f71461105d578063abdf82ce14611090578063ad0e0a4d146110c3578063b11d7ec1146110fe576103fa565b806393fd1844116101a6578063994a8a7111610175578063994a8a7114610f865780639d76ea5814610fbf578063a22cb46514610fd4578063a2e4cd2e1461100f578063a375cb0514611048576103fa565b806393fd184414610ef057806395d89b4114610f05578063970aaeb714610f1a57806397aa390a14610f4d576103fa565b80638129fc1c116101e25780638129fc1c14610d5b57806381a3c94314610d705780638577a6d514610e8b5780638d0361fc14610eb5576103fa565b80636eadde4314610bbc57806370a0823114610c9857806374b6c10614610ccb578063782a4ade14610ce0576103fa565b80632f745c591161030e5780634d025fed116102a1578063550ef3a811610270578063550ef3a814610a9c578063564aa99d14610b1757806356e0d51f14610b4a5780636352211e14610b5f5780636d8ea5b414610b89576103fa565b80634d025fed146109e25780634f6ccce714610a0c57806352b0f63814610a3657806352d6a8e414610a69576103fa565b806339f46986116102dd57806339f46986146108cc5780633f33133a146108fc5780634136aa351461098a57806342842e0e1461099f576103fa565b80632f745c59146107d957806330176e131461081257806335576ad01461088d57806338af3eed146108b7576103fa565b806310803b7211610391578063183767da11610360578063183767da14610724578063217751bc1461073957806323b872dd1461074e5780632af9162a146107915780632d33dd5b146107c4576103fa565b806310803b721461066557806310e56973146106e557806311a4c03a146106fa57806318160ddd1461070f576103fa565b8063095ea7b3116103cd578063095ea7b31461053e578063097ba333146105775780630aaffd2a1461061d5780630f15023b14610650576103fa565b806301ffc9a7146103fc578063025e7c271461044457806306fdde031461048a578063081812fc14610514575b005b34801561040857600080fd5b506104306004803603602081101561041f57600080fd5b50356001600160e01b031916611476565b604080519115158252519081900360200190f35b34801561045057600080fd5b5061046e6004803603602081101561046757600080fd5b5035611499565b604080516001600160a01b039092168252519081900360200190f35b34801561049657600080fd5b5061049f6114c0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104d95781810151838201526020016104c1565b50505050905090810190601f1680156105065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561052057600080fd5b5061046e6004803603602081101561053757600080fd5b503561154e565b34801561054a57600080fd5b506103fa6004803603604081101561056157600080fd5b506001600160a01b0381351690602001356115c4565b34801561058357600080fd5b5061060b6004803603606081101561059a57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156105cd57600080fd5b8201836020820111156105df57600080fd5b803590602001918460018302840111600160201b8311171561060057600080fd5b50909250905061174b565b60408051918252519081900360200190f35b34801561062957600080fd5b506103fa6004803603602081101561064057600080fd5b50356001600160a01b031661179a565b34801561065c57600080fd5b5061046e611877565b34801561067157600080fd5b506106956004803603604081101561068857600080fd5b5080359060200135611886565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106d15781810151838201526020016106b9565b505050509050019250505060405180910390f35b3480156106f157600080fd5b5061060b6119a0565b34801561070657600080fd5b5061060b6119a6565b34801561071b57600080fd5b5061060b6119ac565b34801561073057600080fd5b5061060b6119b3565b34801561074557600080fd5b5061046e6119b9565b34801561075a57600080fd5b506103fa6004803603606081101561077157600080fd5b506001600160a01b038135811691602081013590911690604001356119c8565b34801561079d57600080fd5b506103fa600480360360208110156107b457600080fd5b50356001600160a01b0316611ccd565b3480156107d057600080fd5b5061046e611d59565b3480156107e557600080fd5b5061060b600480360360408110156107fc57600080fd5b506001600160a01b038135169060200135611d68565b34801561081e57600080fd5b506103fa6004803603602081101561083557600080fd5b810190602081018135600160201b81111561084f57600080fd5b82018360208201111561086157600080fd5b803590602001918460018302840111600160201b8311171561088257600080fd5b509092509050611dc6565b34801561089957600080fd5b506103fa600480360360208110156108b057600080fd5b5035611e1b565b3480156108c357600080fd5b5061046e611ebd565b3480156108d857600080fd5b506103fa600480360360408110156108ef57600080fd5b5080359060200135611ecc565b6103fa6004803603608081101561091257600080fd5b8135916001600160a01b03602082013581169260408301359091169190810190608081016060820135600160201b81111561094c57600080fd5b82018360208201111561095e57600080fd5b803590602001918460018302840111600160201b8311171561097f57600080fd5b509092509050611f56565b34801561099657600080fd5b50610430612466565b3480156109ab57600080fd5b506103fa600480360360608110156109c257600080fd5b506001600160a01b03813581169160208101359091169060400135612476565b3480156109ee57600080fd5b5061046e60048036036020811015610a0557600080fd5b5035612491565b348015610a1857600080fd5b5061060b60048036036020811015610a2f57600080fd5b50356124ac565b348015610a4257600080fd5b5061043060048036036020811015610a5957600080fd5b50356001600160a01b03166124f7565b348015610a7557600080fd5b5061060b60048036036020811015610a8c57600080fd5b50356001600160a01b031661250a565b348015610aa857600080fd5b506103fa60048036036020811015610abf57600080fd5b810190602081018135600160201b811115610ad957600080fd5b820183602082011115610aeb57600080fd5b803590602001918460018302840111600160201b83111715610b0c57600080fd5b509092509050612515565b348015610b2357600080fd5b506103fa60048036036020811015610b3a57600080fd5b50356001600160a01b0316612565565b348015610b5657600080fd5b5061060b6125f1565b348015610b6b57600080fd5b5061046e60048036036020811015610b8257600080fd5b50356125f7565b348015610b9557600080fd5b5061043060048036036020811015610bac57600080fd5b50356001600160a01b031661266d565b348015610bc857600080fd5b506103fa600480360360c0811015610bdf57600080fd5b6001600160a01b03823581169260208101359260408201359092169160608201359160808101359181019060c0810160a0820135600160201b811115610c2457600080fd5b820183602082011115610c3657600080fd5b803590602001918460018302840111600160201b83111715610c5757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061268d945050505050565b348015610ca457600080fd5b5061060b60048036036020811015610cbb57600080fd5b50356001600160a01b031661278d565b348015610cd757600080fd5b5061060b6127fc565b348015610cec57600080fd5b506103fa60048036036020811015610d0357600080fd5b810190602081018135600160201b811115610d1d57600080fd5b820183602082011115610d2f57600080fd5b803590602001918460018302840111600160201b83111715610d5057600080fd5b509092509050612802565b348015610d6757600080fd5b506103fa6128b7565b348015610d7c57600080fd5b506103fa60048036036060811015610d9357600080fd5b810190602081018135600160201b811115610dad57600080fd5b820183602082011115610dbf57600080fd5b803590602001918460208302840111600160201b83111715610de057600080fd5b919390929091602081019035600160201b811115610dfd57600080fd5b820183602082011115610e0f57600080fd5b803590602001918460208302840111600160201b83111715610e3057600080fd5b919390929091602081019035600160201b811115610e4d57600080fd5b820183602082011115610e5f57600080fd5b803590602001918460208302840111600160201b83111715610e8057600080fd5b509092509050612969565b348015610e9757600080fd5b506103fa60048036036020811015610eae57600080fd5b5035612b8b565b348015610ec157600080fd5b5061060b60048036036040811015610ed857600080fd5b506001600160a01b0381358116916020013516612c07565b348015610efc57600080fd5b5061060b612c92565b348015610f1157600080fd5b5061049f612c98565b348015610f2657600080fd5b5061060b60048036036020811015610f3d57600080fd5b50356001600160a01b0316612e87565b348015610f5957600080fd5b506103fa60048036036040811015610f7057600080fd5b506001600160a01b038135169060200135612ea2565b348015610f9257600080fd5b5061043060048036036040811015610fa957600080fd5b50803590602001356001600160a01b0316612f3b565b348015610fcb57600080fd5b5061046e612f5c565b348015610fe057600080fd5b506103fa60048036036040811015610ff757600080fd5b506001600160a01b0381351690602001351515612f6b565b34801561101b57600080fd5b506103fa6004803603604081101561103257600080fd5b50803590602001356001600160a01b0316613076565b34801561105457600080fd5b5061060b613245565b34801561106957600080fd5b506104306004803603602081101561108057600080fd5b50356001600160a01b031661324b565b34801561109c57600080fd5b5061060b600480360360208110156110b357600080fd5b50356001600160a01b031661325e565b3480156110cf57600080fd5b506103fa600480360360408110156110e657600080fd5b506001600160a01b038135811691602001351661327c565b34801561110a57600080fd5b506103fa6004803603604081101561112157600080fd5b50803590602001356001600160a01b03166133d6565b34801561114357600080fd5b506103fa600480360360a081101561115a57600080fd5b506001600160a01b038135169060ff60208201351690604081013590606081013590608001356134f3565b34801561119157600080fd5b506103fa600480360360808110156111a857600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156111e257600080fd5b8201836020820111156111f457600080fd5b803590602001918460018302840111600160201b8311171561121557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613643945050505050565b34801561126257600080fd5b506103fa6136b1565b34801561127757600080fd5b5061049f6004803603602081101561128e57600080fd5b503561377d565b3480156112a157600080fd5b5061060b613a0a565b3480156112b657600080fd5b506103fa600480360360208110156112cd57600080fd5b50356001600160a01b0316613a0f565b3480156112e957600080fd5b506103fa6004803603602081101561130057600080fd5b5035613a9b565b34801561131357600080fd5b5061060b6004803603604081101561132a57600080fd5b506001600160a01b0381358116916020013516613b41565b34801561134e57600080fd5b506104306004803603604081101561136557600080fd5b506001600160a01b0381358116916020013516613beb565b34801561138957600080fd5b506103fa613c80565b34801561139e57600080fd5b506103fa600480360360608110156113b557600080fd5b506001600160a01b038135169060208101359060400135613cbe565b3480156113dd57600080fd5b506103fa600480360360408110156113f457600080fd5b506001600160a01b038135169060200135614042565b34801561141657600080fd5b5061060b6004803603604081101561142d57600080fd5b506001600160a01b038135169060200135614183565b34801561144f57600080fd5b5061060b6004803603602081101561146657600080fd5b50356001600160a01b031661422c565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b607481815481106114a657fe5b6000918252602090912001546001600160a01b0316905081565b6076805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156115465780601f1061151b57610100808354040283529160200191611546565b820191906000526020600020905b81548152906001019060200180831161152957829003601f168201915b505050505081565b60008181526073602052604081205482906001600160a01b03166115a7576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b50506000908152607960205260409020546001600160a01b031690565b606954600160a01b900460ff16611614576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b8061161f813361423e565b8061162f575061162f81336142a0565b806116575750600081815260736020526040902054611657906001600160a01b031633613beb565b611696576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b336001600160a01b03841614156116e3576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b600082815260796020908152604080832080546001600160a01b0319166001600160a01b038881169182179092556073909352818420549151869492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061178e858585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506142c192505050565b50909695505050505050565b606f546001600160a01b03163314806117b757506117b73361324b565b611808576040805162461bcd60e51b815260206004820152601f60248201527f4f4e4c595f42454e45464943494152595f4f525f4c4f434b4d414e4147455200604482015290519081900360640190fd5b6001600160a01b038116611855576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b606f80546001600160a01b0319166001600160a01b0392909216919091179055565b606a546001600160a01b031681565b6074546060906118d3576040805162461bcd60e51b81526020600482015260136024820152724e4f5f4f55545354414e44494e475f4b45595360681b604482015290519081900360640190fd5b60745482908482029060009082840111156118f6575060745481810392506118fb565b508082015b606083604051908082528060200260200182016040528015611927578160200160208202803883390190505b5090506000835b83811015611991576074818154811061194357fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061196d57fe5b6001600160a01b03909216602092830291909101909101526001918201910161192e565b50909450505050505b92915050565b606c5481565b606b5481565b606e545b90565b607b5481565b6071546001600160a01b031681565b606954600160a01b900460ff16611a18576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b82611a228161266d565b611a63576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b81611a6e813361423e565b80611a7e5750611a7e81336142a0565b80611aa65750600081815260736020526040902054611aa6906001600160a01b031633613beb565b611ae5576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b611aef8386612f3b565b611b40576040805162461bcd60e51b815260206004820152601c60248201527f5452414e534645525f46524f4d3a204e4f545f4b45595f4f574e455200000000604482015290519081900360640190fd5b612710607b5410611b91576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416611bde576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000611beb866000614183565b6001600160a01b03808816600090815260726020526040808220928916825281206001810154939450919290611c2490889086906144cd565b8154611c3757868255611c3788886145ef565b428111611c635760018084015490830155868255611c5487614677565b611c5e88886145ef565b611c80565b6001830154611c7a9042830363ffffffff6146dc16565b60018301555b42600184015560008355611c9387614736565b86886001600160a01b03168a6001600160a01b0316600080516020615a0883398151915260405160405180910390a4505050505050505050565b611cd63361324b565b611d115760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611d2260678263ffffffff61477116565b6040516001600160a01b038216907f766f6199fea59554b9ff688e413302b9200f85d74811c053c12d945ac6d8dd7a90600090a250565b6070546001600160a01b031681565b60008115611db6576040805162461bcd60e51b815260206004820152601660248201527527a7262cafa7a722afa5a2acafa822a92fa7aba722a960511b604482015290519081900360640190fd5b611dbf83612e87565b9392505050565b611dcf3361324b565b611e0a5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611e1660788383615771565b505050565b336000908152606860205260409020548111611e73576040805162461bcd60e51b81526020600482015260126024820152711393d390d157d053149150511657d554d15160721b604482015290519081900360640190fd5b33600081815260686020908152604091829020849055815184815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a250565b606f546001600160a01b031681565b611ed53361324b565b611f105760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b604080518381526020810183905281517fd6867bc538320e67d7bdc35860c27c08486eb490b4fd9b820fff18fb28381d3c929181900390910190a1607d91909155607c55565b606954600160a01b900460ff16611fa6576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b606e54606d5411611fee576040805162461bcd60e51b815260206004820152600d60248201526c1313d0d2d7d4d3d31117d3d555609a1b604482015290519081900360640190fd5b6001600160a01b03841661203b576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038416600090815260726020526040812080549091816120ab57612065836147d8565b8254915061207387836145ef565b50606b5442016001830181905560405182906001600160a01b03891690600090600080516020615a08833981519152908290a4612171565b428360010154111561211b57606b5460018401546120ce9163ffffffff6146dc16565b600184018190556040805182815290519192506001600160a01b038916917f872bd7c99ad5e7b6ed7f0a890f348839cb8e225c9deaa3909afedae54c93d17d9181900360200190a2612171565b50606b5442016001830181905561213182614677565b6040805182815290516001600160a01b038916917f872bd7c99ad5e7b6ed7f0a890f348839cb8e225c9deaa3909afedae54c93d17d919081900360200190a25b60008060006121b78a8a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506142c192505050565b91945092509050811561223157606a5460408051633652466360e01b8152600481018590526024810184905290516001600160a01b039092169163365246639160448082019260009290919082900301818387803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050505b606a546001600160a01b031663939d9f1f8461224c8c61266d565b612257576000612259565b8b5b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b1580156122a857600080fd5b505af11580156122bc573d6000803e3d6000fd5b5050606954600092506001600160a01b03161590506122fc57506069548b906001600160a01b03166122f68133308563ffffffff6147ed16565b506122ff565b50345b83811015612349576040805162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b604482015290519081900360640190fd5b6070546001600160a01b03161561245857607060009054906101000a90046001600160a01b03166001600160a01b03166398499657338d8d8d8d8a886040518863ffffffff1660e01b815260040180886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b15801561243f57600080fd5b505af1158015612453573d6000803e3d6000fd5b505050505b505050505050505050505050565b606954600160a01b900460ff1681565b611e1683838360405180602001604052806000815250613643565b6075602052600090815260409020546001600160a01b031681565b6000606e5482106124f3576040805162461bcd60e51b815260206004820152600c60248201526b4f55545f4f465f52414e474560a01b604482015290519081900360640190fd5b5090565b600061199a60678363ffffffff61484716565b600061199a826148ae565b61251e3361324b565b6125595760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b611e1660768383615771565b61256e3361324b565b6125a95760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6125ba60678263ffffffff6149b516565b6040516001600160a01b038216907f684f8a71407db0c334454ebe9c9b288549317893a20b10dc779ec5c118dcd12190600090a250565b607c5481565b60008181526073602052604081205482906001600160a01b0316612650576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b50506000908152607360205260409020546001600160a01b031690565b6001600160a01b0316600090815260726020526040902060010154421090565b600054610100900460ff16806126a657506126a6614a36565b806126b4575060005460ff16155b6126ef5760405162461bcd60e51b815260040180806020018281038252602e8152602001806159da602e913960400191505060405180910390fd5b600054610100900460ff1615801561271a576000805460ff1961ff0019909116610100171660011790555b61272385614a3c565b61272b614b0b565b61273787878686614b20565b61274082614bb6565b612748614be2565b612750614bf4565b61275987614bfc565b61276287614c1a565b6127726380ac58cd60e01b614c38565b8015612784576000805461ff00191690555b50505050505050565b60006001600160a01b0382166127dc576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6127e58261266d565b6127f05760006127f3565b60015b60ff1692915050565b606d5481565b61280b3361324b565b6128465760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b61285260778383615771565b507f8868e22e84ebf32da89b2ebcb0ac642816304ea3863b257f240df9098719cb97828260405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b600054610100900460ff16806128d057506128d0614a36565b806128de575060005460ff16155b6129195760405162461bcd60e51b815260040180806020018281038252602e8152602001806159da602e913960400191505060405180910390fd5b600054610100900460ff16158015612944576000805460ff1961ff0019909116610100171660011790555b6129546301ffc9a760e01b614c38565b8015612966576000805461ff00191690555b50565b612972336124f7565b8061298157506129813361324b565b6129bc5760405162461bcd60e51b815260040180806020018281038252604881526020018061592e6048913960600191505060405180910390fd5b60005b858110156127845760008787838181106129d557fe5b905060200201356001600160a01b0316905060008686848181106129f557fe5b9050602002013590506000858585818110612a0c57fe5b905060200201356001600160a01b0316905060006001600160a01b0316836001600160a01b03161415612a78576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038316600090815260726020526040902060018101548311612adb576040805162461bcd60e51b815260206004820152601060248201526f414c52454144595f4f574e535f4b455960801b604482015290519081900360640190fd5b805480612af857612aeb826147d8565b508054612af885826145ef565b60008181526075602052604080822080546001600160a01b0319166001600160a01b0387169081179091559051909183917f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e39190a36001820184905560405181906001600160a01b03871690600090600080516020615a08833981519152908290a45050600190930192506129bf915050565b612b943361324b565b612bcf5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6040805182815290517f0496ed1e61eb69727f9659a8e859288db4758ffb1f744d1c1424634f90a257f49181900360200190a1607b55565b600030604051808061587460259139604080519182900360250182206001600160a01b03881660009081526068602081815291849020546bffffffffffffffffffffffff19606098891b811684880152603487019490945260548601529588901b90911660748401528151808403909501855260889092019052825192019190912091505092915050565b60745490565b60775460609060026000196101006001841615020190911604612df557606a60009054906101000a90046001600160a01b03166001600160a01b031663cec410526040518163ffffffff1660e01b815260040160006040518083038186803b158015612d0357600080fd5b505afa158015612d17573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612d4057600080fd5b8101908080516040519392919084600160201b821115612d5f57600080fd5b908301906020820185811115612d7457600080fd5b8251600160201b811182820188101715612d8d57600080fd5b82525081516020918201929091019080838360005b83811015612dba578181015183820152602001612da2565b50505050905090810190601f168015612de75780820380516001836020036101000a031916815260200191505b5060405250505090506119b0565b6077805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612e7b5780601f10612e5057610100808354040283529160200191612e7b565b820191906000526020600020905b815481529060010190602001808311612e5e57829003601f168201915b505050505090506119b0565b6001600160a01b031660009081526072602052604090205490565b612eab3361324b565b612ee65760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b81612ef08161266d565b612f31576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b611e168383614cbc565b600091825260736020526040909120546001600160a01b0391821691161490565b6069546001600160a01b031681565b606954600160a01b900460ff16612fbb576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6001600160a01b038216331415613008576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b336000818152607a602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61307f3361324b565b6130ba5760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b606954600160a01b900460ff1661310a576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b606c546069546001600160a01b03908116908316158061318e57506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561316057600080fd5b505afa158015613174573d6000803e3d6000fd5b505050506040513d602081101561318a57600080fd5b5051115b6131cf576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b606c849055606980546001600160a01b0319166001600160a01b038581169190911791829055604080518581526020810188905284831681830152929091166060830152517f3615065ccf48367ac483ac86701248e2e5ff55bdd9be845007d34a3b68d719d4916080908290030190a150505050565b607d5481565b600061199a60668363ffffffff61484716565b6001600160a01b031660009081526072602052604090206001015490565b6132853361324b565b6132c05760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b6001600160a01b03821615806132e357506132e3826001600160a01b0316614db7565b613334576040805162461bcd60e51b815260206004820152601860248201527f494e56414c49445f4f4e5f4b45595f534f4c445f484f4f4b0000000000000000604482015290519081900360640190fd5b6001600160a01b03811615806133575750613357816001600160a01b0316614db7565b6133a8576040805162461bcd60e51b815260206004820152601a60248201527f494e56414c49445f4f4e5f4b45595f43414e43454c5f484f4f4b000000000000604482015290519081900360640190fd5b607080546001600160a01b039384166001600160a01b03199182161790915560718054929093169116179055565b60008281526073602052604090205482906001600160a01b031661342f576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b613439833361423e565b8061344857506134483361324b565b613499576040805162461bcd60e51b815260206004820152601f60248201527f554e415554484f52495a45445f4b45595f4d414e414745525f55504441544500604482015290519081900360640190fd5b60008381526075602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909185917f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e39190a3505050565b6134fd8533612c07565b85858585836001600160a01b0316600161351687614dee565b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613570573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146135c9576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6001600160a01b038416600081815260686020908152604091829020805460010190819055825190815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a2600061362a876125f7565b90506000613637826148ae565b90506124588282614cbc565b61364e8484846119c8565b61365a84848484614e3f565b6136ab576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b50505050565b6136ba3361324b565b6136f55760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b606954600160a01b900460ff16613745576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6040517f25a311358326fb18c62efc24bc28d3126acee8d2a67fd8b2145b757dc8bd1bc190600090a16069805460ff60a01b19169055565b60008181526073602052604090205460609082906001600160a01b03166137d9576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b6078546060906002600019610100600184161502019091160461393657606a60009054906101000a90046001600160a01b03166001600160a01b031663a998e9fb6040518163ffffffff1660e01b815260040160006040518083038186803b15801561384457600080fd5b505afa158015613858573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561388157600080fd5b8101908080516040519392919084600160201b8211156138a057600080fd5b9083019060208201858111156138b557600080fd5b8251600160201b8111828201881017156138ce57600080fd5b82525081516020918201929091019080838360005b838110156138fb5781810151838201526020016138e3565b50505050905090810190601f1680156139285780820380516001836020036101000a031916815260200191505b5060405250505090506139c4565b6078805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156139bc5780601f10613991576101008083540402835291602001916139bc565b820191906000526020600020905b81548152906001019060200180831161399f57829003601f168201915b505050505090505b613a026139d030614f72565b604051806040016040528060018152602001602f60f81b8152506139f3876150ee565b8492919063ffffffff6151b216565b949350505050565b600790565b613a183361324b565b613a535760405162461bcd60e51b815260040180806020018281038252603b815260200180615899603b913960400191505060405180910390fd5b613a6460668263ffffffff6149b516565b6040516001600160a01b038216907f91d5c045d5bd98bf59a379b259ebca05b93bf79af1845fdf87e3172385d4c7f790600090a250565b80613aa6813361423e565b80613ab65750613ab681336142a0565b80613ade5750600081815260736020526040902054613ade906001600160a01b031633613beb565b613b1d576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b6000613b28836125f7565b90506000613b35826148ae565b90506136ab8282614cbc565b60006001600160a01b038316613b6257506001600160a01b0381163161199a565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015613bb857600080fd5b505afa158015613bcc573d6000803e3d6000fd5b505050506040513d6020811015613be257600080fd5b5051905061199a565b6001600160a01b038083166000908152607260209081526040808320548084526075909252822054919290911680613c4e575050506001600160a01b038083166000908152607a602090815260408083209385168352929052205460ff1661199a565b6001600160a01b039081166000908152607a602090815260408083209387168352929052205460ff16915061199a9050565b613c9160663363ffffffff61477116565b60405133907f42885193b8178d25fca25a38e6fcc93918501e91be06d85e0c8afb3bad95238090600090a2565b606954600160a01b900460ff16613d0e576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b81613d19813361423e565b80613d295750613d2981336142a0565b80613d515750600081815260736020526040902054613d51906001600160a01b031633613beb565b613d90576040805162461bcd60e51b815260206004820152601c602482015260008051602061590e833981519152604482015290519081900360640190fd5b612710607b5410613de1576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416613e2e576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000838152607360205260409020546001600160a01b0316613e4f8161266d565b613e90576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b0380821660009081526072602052604080822092881682528120805460018401549192909142900381613eca878a614183565b90506000613ede8a8363ffffffff6146dc16565b905082811015613efc57899350613ef78b8260006144cd565b613f40565b613f068884614183565b42600189015560405181850395509092508b907f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79590600090a25b84613f8757613f4e866147d8565b85549450613f5c8c866145ef565b60405185906001600160a01b038e1690600090600080516020615a08833981519152908290a4613f9b565b42866001015411613f9b57613f9b85614677565b613fa7858560016144cd565b848c6001600160a01b0316896001600160a01b0316600080516020615a0883398151915260405160405180910390a4613ff1888d8d60405180602001604052806000815250614e3f565b612458576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b61404b3361324b565b806140605750606f546001600160a01b031633145b6140b1576040805162461bcd60e51b815260206004820181905260248201527f4f4e4c595f4c4f434b5f4d414e414745525f4f525f42454e4546494349415259604482015290519081900360640190fd5b60006140bd8330613b41565b905060008215806140cd57508183115b15614121576000821161411a576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b5080614124565b50815b606f546040805183815290516001600160a01b039283169287169133917f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e9181900360200190a4606f546136ab9085906001600160a01b031683615303565b60008261418f8161266d565b6141d0576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03841660009081526072602052604081209080856141fd57428360010154039150614201565b8591505b612710614219607b548461535090919063ffffffff16565b8161422057fe5b04979650505050505050565b60686020526000908152604090205481565b6000828152607560205260408120546001600160a01b038381169116148061428b57506000838152607560205260409020546001600160a01b031615801561428b575061428b8383612f3b565b156142985750600161199a565b50600061199a565b600091825260796020526040909120546001600160a01b0391821691161490565b607054600090819081906001600160a01b0316156143d55760705460405163221c1fd160e01b815233600482018181526001600160a01b038a811660248501528981166044850152608060648501908152895160848601528951919095169463221c1fd1948c938c938c93919260a40190602085019080838360005b8381101561435557818101518382015260200161433d565b50505050905090810190601f1680156143825780820380516001836020036101000a031916815260200191505b509550505050505060206040518083038186803b1580156143a257600080fd5b505afa1580156143b6573d6000803e3d6000fd5b505050506040513d60208110156143cc57600080fd5b505192506143db565b606c5492505b82156144c457606a5460408051630cb175e360e01b81526001600160a01b038981166004830152602482018790528251931692630cb175e392604480840193919291829003018186803b15801561443157600080fd5b505afa158015614445573d6000803e3d6000fd5b505050506040513d604081101561445b57600080fd5b5080516020909101519092509050828211156144be576040805162461bcd60e51b815260206004820152601c60248201527f494e56414c49445f444953434f554e545f46524f4d5f554e4c4f434b00000000604482015290519081900360640190fd5b81830392505b93509350939050565b6000838152607360205260409020546001600160a01b03168061452a576040805162461bcd60e51b815260206004820152601060248201526f4e4f4e5f4558495354454e545f4b455960801b604482015290519081900360640190fd5b6001600160a01b0381166000908152607260205260408120600181015490916145528461266d565b9050841561459557801561457a57614570828763ffffffff6146dc16565b6001840155614590565b61458a428763ffffffff6146dc16565b60018401555b6145ab565b6145a5828763ffffffff6153a916565b60018401555b604080518781528615156020820152815189927fe9408df99703ae33a9d01185bcad328ea8683fb1f920da9c30959c192f21b5b3928290030190a250505050505050565b6000818152607360205260409020546001600160a01b038381169116146146735760748054600181019091557f19a0b39aa25ac793b5f6e9a0534364cc0b3fd1ea9b651e79c7f50a59d48ef8130180546001600160a01b0384166001600160a01b031991821681179092556000838152607360205260409020805490911690911790555b5050565b6000818152607560205260409020546001600160a01b0316156129665760008181526075602052604080822080546001600160a01b03191690555182907f9d2895c45a420624de863a2f437b022d879f457bf7a829044055a10c5a6fd5e3908390a350565b600082820183811015611dbf576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818152607960205260409020546001600160a01b03161561296657600090815260796020526040902080546001600160a01b0319169055565b61477b8282614847565b6147b65760405162461bcd60e51b81526004018080602001828103825260218152602001806159766021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b805461296657606e8054600101908190559055565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526136ab9085906153eb565b60006001600160a01b03821661488e5760405162461bcd60e51b81526004018080602001828103825260228152602001806159b86022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000816148ba8161266d565b6148fb576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03831660009081526072602052604090206001810154606b54607d54429092039182011061493457606c549350614955565b606b54606c5461494a908363ffffffff61535016565b8161495157fe5b0493505b607d5415806149695750606b54607d548201105b156149ad57600061271061498a607c54606c5461535090919063ffffffff16565b8161499157fe5b049050808511156149a65780850394506149ab565b600094505b505b505050919050565b6149bf8282614847565b15614a11576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b303b1590565b606980546001600160a01b0319166001600160a01b0383169081179091551580614aca57506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015614a9c57600080fd5b505afa158015614ab0573d6000803e3d6000fd5b505050506040513d6020811015614ac657600080fd5b5051115b612966576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b6069805460ff60a01b1916600160a01b179055565b63bbf81e00831115614b79576040805162461bcd60e51b815260206004820152601860248201527f4d41585f45585049524154494f4e5f3130305f59454152530000000000000000604482015290519081900360640190fd5b606a8054336001600160a01b031991821617909155606f80549091166001600160a01b039590951694909417909355606b91909155606c55606d55565b614bbe6128b7565b8051614bd19060769060208401906157eb565b50612966635b5e139f60e01b614c38565b614bf263780e9d6360e01b614c38565b565b6103e8607c55565b614c058161324b565b6129665761296660668263ffffffff6149b516565b614c23816124f7565b6129665761296660678263ffffffff6149b516565b6001600160e01b03198082161415614c97576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b6001600160a01b03821660008181526072602090815260409182902080548351868152935191943394909391927f0a7068a9989857441c039a14a42b67ed71dd1fcfe5a9b17cc87b252e47bce528929181900390910190a44260018201558115614d3757606954614d37906001600160a01b03168484615303565b6071546001600160a01b031615611e16576071546040805163b499b6c560e01b81523360048201526001600160a01b038681166024830152604482018690529151919092169163b499b6c591606480830192600092919082900301818387803b158015614da357600080fd5b505af1158015612784573d6000803e3d6000fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590613a025750141592915050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6000614e53846001600160a01b0316614db7565b614e5f57506001613a02565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015614ed9578181015183820152602001614ec1565b50505050905090810190601f168015614f065780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015614f2857600080fd5b505af1158015614f3c573d6000803e3d6000fd5b505050506040513d6020811015614f5257600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b03851692918491602082018180388339019050509050600360fc1b81600081518110614fd657fe5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614fff57fe5b60200101906001600160f81b031916908160001a90535060005b60148110156150e5578260048583600c016020811061503457fe5b1a60f81b6001600160f81b031916901c60f81c60ff168151811061505457fe5b602001015160f81c60f81b82826002026002018151811061507157fe5b60200101906001600160f81b031916908160001a905350828482600c016020811061509857fe5b825191901a600f169081106150a957fe5b602001015160f81c60f81b8282600202600301815181106150c657fe5b60200101906001600160f81b031916908160001a905350600101615019565b50949350505050565b606081806151155750506040805180820190915260018152600360fc1b6020820152611494565b8260005b811561512d57600101600a82049150615119565b6060816040519080825280601f01601f19166020018201604052801561515a576020820181803883390190505b50905060001982015b84156151a857600a850660300160f81b8282806001900393508151811061518657fe5b60200101906001600160f81b031916908160001a905350600a85049450615163565b5095945050505050565b6060848484846040516020018085805190602001908083835b602083106151ea5780518252601f1990920191602091820191016151cb565b51815160209384036101000a600019018019909216911617905287519190930192870191508083835b602083106152325780518252601f199092019160209182019101615213565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b6020831061527a5780518252601f19909201916020918201910161525b565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106152c25780518252601f1990920191602091820191016152a3565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040529050949350505050565b8015611e16576001600160a01b038316615335576153306001600160a01b0383168263ffffffff6155a316565b611e16565b826136ab6001600160a01b038216848463ffffffff61568816565b60008261535f5750600061199a565b8282028284828161536c57fe5b0414611dbf5760405162461bcd60e51b81526004018080602001828103825260218152602001806159976021913960400191505060405180910390fd5b6000611dbf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506156da565b6153fd826001600160a01b0316614db7565b61544e576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061548c5780518252601f19909201916020918201910161546d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146154ee576040519150601f19603f3d011682016040523d82523d6000602084013e6154f3565b606091505b50915091508161554a576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156136ab5780806020019051602081101561556657600080fd5b50516136ab5760405162461bcd60e51b815260040180806020018281038252602a815260200180615a28602a913960400191505060405180910390fd5b804710156155f8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114615643576040519150601f19603f3d011682016040523d82523d6000602084013e615648565b606091505b5050905080611e165760405162461bcd60e51b815260040180806020018281038252603a8152602001806158d4603a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e169084906153eb565b600081848411156157695760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561572e578181015183820152602001615716565b50505050905090810190601f16801561575b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157b25782800160ff198235161785556157df565b828001600101855582156157df579182015b828111156157df5782358255916020019190600101906157c4565b506124f3929150615859565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061582c57805160ff19168380011785556157df565b828001600101855582156157df579182015b828111156157df57825182559160200191906001019061583e565b6119b091905b808211156124f3576000815560010161585f56fe63616e63656c416e64526566756e64466f722861646472657373205f6b65794f776e6572294d6978696e4c6f636b4d616e616765723a2063616c6c657220646f6573206e6f74206861766520746865204c6f636b4d616e6167657220726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644f4e4c595f4b45595f4d414e414745525f4f525f415050524f564544000000004d6978696e4b65794772616e7465723a2063616c6c657220646f6573206e6f74206861766520746865204b65794772616e746572206f72204c6f636b4d616e6167657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582026f764166712e1e3c2d6574050ce91467e6e80eb5c97710a8cd8e5cf0e58cafa64736f6c63430005110032",
  "sourceMap": "1055:1445:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:1445:1;;;;;;;",
  "deployedSourceMapi;:::-;;;;;;;;;;;;;;;;;;1515:23:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1515:23:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1515:23:15;;:::i;:::-;;;;-1:-1:-1;;;;;1515:23:15;;;;;;;;;;;;;;888:18:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;888:18:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;888:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:187:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2836:187:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2836:187:9;;:::i;1741:287::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1741:287:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1741:287:9;;;;;;;;:::i;3986:228:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3986:228:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3986:228:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3986:228:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3986:228:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3986:228:19;;-1:-1:-1;3986:228:19;-1:-1:-1;3986:228:19;:::i;:::-;;;;;;;;;;;;;;;;5077:269:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5077:269:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5077:269:16;-1:-1:-1;;;;;5077:269:16;;:::i;1135:29::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1135:29:16;;;:::i;3556:851:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3556:851:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3556:851:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3556:851:15;;;;;;;;;;;;;;;;;1501:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1501:20:16;;;:::i;1347:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:30:16;;;:::i;5903:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5903:92:16;;;:::i;1309:34:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1309:34:22;;;:::i;1971:41:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1971:41:16;;;:::i;3606:2004:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3606:2004:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3606:2004:22;;;;;;;;;;;;;;;;;:::i;1098:144:14:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:144:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1098:144:14;-1:-1:-1;;;;;1098:144:14;;:::i;1922:45:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1922:45:16;;;:::i;1681:206:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1681:206:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1681:206:11;;;;;;;;:::i;2391:134:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2391:134:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2391:134:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2391:134:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2391:134:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2391:134:18;;-1:-1:-1;2391:134:18;-1:-1:-1;2391:134:18;:::i;1127:287:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1127:287:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1127:287:21;;:::i;1770:26:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1770:26:16;;;:::i;2719:325:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2719:325:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2719:325:20;;;;;;;:::i;1313:2496:19:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1313:2496:19;;;-1:-1:-1;;;;;1313:2496:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1313:2496:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1313:2496:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1313:2496:19;;-1:-1:-1;1313:2496:19;-1:-1:-1;1313:2496:19;:::i;505:19:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:19:10;;;:::i;5953:151:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5953:151:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5953:151:22;;;;;;;;;;;;;;;;;:::i;1710:45:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1710:45:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1710:45:15;;:::i;1079:158:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1079:158:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1079:158:11;;:::i;849:108:14:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;849:108:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;849:108:14;-1:-1:-1;;;;;849:108:14;;:::i;3322:162:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3322:162:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3322:162:20;-1:-1:-1;;;;;3322:162:20;;:::i;1644:117:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1644:117:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1644:117:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1644:117:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1644:117:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1644:117:18;;-1:-1:-1;1644:117:18;-1:-1:-1;1644:117:18;:::i;961:133:14:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:133:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;961:133:14;-1:-1:-1;;;;;961:133:14;;:::i;622:36:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;622:36:20;;;:::i;5302:131:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5302:131:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5302:131:15;;:::i;2914:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2914:169:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2914:169:15;-1:-1:-1;;;;;2914:169:15;;:::i;1380:913:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1380:913:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1380:913:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1380:913:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1380:913:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1380:913:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1380:913:1;;-1:-1:-1;1380:913:1;;-1:-1:-1;;;;;1380:913:1:i;2656:195:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2656:195:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2656:195:15;-1:-1:-1;;;;;2656:195:15;;:::i;1592:27:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1592:27:16;;;:::i;1838:166:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1838:166:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1838:166:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1838:166:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1838:166:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1838:166:18;;-1:-1:-1;1838:166:18;-1:-1:-1;1838:166:18;:::i;624:234:35:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:234:35;;;:::i;548:1047:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:1047:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;548:1047:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;548:1047:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;548:1047:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;548:1047:13;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;548:1047:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;548:1047:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;548:1047:13;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;548:1047:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;548:1047:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;548:1047:13;;-1:-1:-1;548:1047:13;-1:-1:-1;548:1047:13;:::i;7000:225:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7000:225:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7000:225:22;;:::i;3864:528:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3864:528:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3864:528:20;;;;;;;;;;:::i;5159:98:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5159:98:15;;;:::i;2103:203:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2103:203:18;;;:::i;3197:128:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3197:128:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3197:128:15;-1:-1:-1;;;;;3197:128:15;;:::i;1377:176:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:176:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1377:176:20;;;;;;;;:::i;4480:148:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4480:148:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4480:148:15;;;;;;-1:-1:-1;;;;;4480:148:15;;:::i;609:27:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:27:12;;;:::i;2308:259:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2308:259:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2308:259:9;;;;;;;;;;:::i;4470:469:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4470:469:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4470:469:16;;;;;;-1:-1:-1;;;;;4470:469:16;;:::i;663:27:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;663:27:20;;;:::i;746:110:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:110:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;746:110:17;-1:-1:-1;;;;;746:110:17;;:::i;4851:154:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4851:154:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4851:154:15;-1:-1:-1;;;;;4851:154:15;;:::i;5428:471:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5428:471:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5428:471:16;;;;;;;;;;:::i;5730:338:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5730:338:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5730:338:15;;;;;;-1:-1:-1;;;;;5730:338:15;;:::i;2232:420:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2232:420:20;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2232:420:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6663:267:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6663:267:22;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6663:267:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6663:267:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6663:267:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6663:267:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6663:267:22;;-1:-1:-1;6663:267:22;;-1:-1:-1;;;;;6663:267:22:i;843:120:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;843:120:10;;;:::i;2858:381:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2858:381:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2858:381:18;;:::i;2915:84:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2915:84:16;;;:::i;860:136:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;860:136:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;860:136:17;-1:-1:-1;;;;;860:136:17;;:::i;1704:236:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1704:236:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1704:236:20;;:::i;944:255:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;944:255:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;944:255:12;;;;;;;;;;:::i;3337:382:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:382:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3337:382:9;;;;;;;;;;:::i;1000:121:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:121:17;;;:::i;1642:1960:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:1960:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1642:1960:22;;;;;;;;;;;;;:::i;3638:575:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3638:575:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3638:575:16;;;;;;;;:::i;7485:580:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7485:580:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7485:580:22;;;;;;;;:::i;360:49:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:49:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;360:49:21;-1:-1:-1;;;;;360:49:21;;:::i;1008:131:35:-;-1:-1:-1;;;;;;1099:33:35;;1076:4;1099:33;;;:20;:33;;;;;;;;1008:131;;;;:::o;1515:23:15:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1515:23:15;;-1:-1:-1;1515:23:15;:::o;888:18:18:-;;;;;;;;;;;;;;;-1:-1:-1;;888:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2836:187:9:-;2925:7;2252:18:15;;;:8;:18;;;;;;2902:8:9;;-1:-1:-1;;;;;2252:18:15;2237:68;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;;;;-1:-1:-1;;2942:25:9;2970:18;;;:8;:18;;;;;;-1:-1:-1;;;;;2970:18:9;;2836:187::o;1741:287::-;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;1860:8:9;1359:35;1373:8;1383:10;1359:13;:35::i;:::-;:78;;;;1404:33;1416:8;1426:10;1404:11;:33::i;:::-;1359:136;;;-1:-1:-1;1464:18:9;;;;:8;:18;;;;;;1447:48;;-1:-1:-1;;;;;1464:18:9;1484:10;1447:16;:48::i;:::-;1344:195;;;;;-1:-1:-1;;;1344:195:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1344:195:9;;;;;;;;;;;;;;;1886:10;-1:-1:-1;;;;;1886:23:9;;;;1878:48;;;;;-1:-1:-1;;;1878:48:9;;;;;;;;;;;;-1:-1:-1;;;1878:48:9;;;;;;;;;;;;;;;1933:18;;;;:8;:18;;;;;;;;:30;;-1:-1:-1;;;;;;1933:30:9;-1:-1:-1;;;;;1933:30:9;;;;;;;;;1983:8;:18;;;;;;;1974:49;;1933:18;;1983;;;;;1974:49;;;742:1:10;1741:287:9;;:::o;3986:228:19:-;4116:16;4162:47;4180:10;4192:9;4203:5;;4162:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4162:17:19;;-1:-1:-1;;;4162:47:19:i;:::-;-1:-1:-1;4142:67:19;;3986:228;-1:-1:-1;;;;;;3986:228:19:o;5077:269:16:-;5173:11;;-1:-1:-1;;;;;5173:11:16;5159:10;:25;;:54;;;5188:25;5202:10;5188:13;:25::i;:::-;5151:98;;;;;-1:-1:-1;;;5151:98:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5263:26:16;;5255:54;;;;;-1:-1:-1;;;5255:54:16;;;;;;;;;;;;-1:-1:-1;;;5255:54:16;;;;;;;;;;;;;;;5315:11;:26;;-1:-1:-1;;;;;;5315:26:16;-1:-1:-1;;;;;5315:26:16;;;;;;;;;;5077:269::o;1135:29::-;;;-1:-1:-1;;;;;1135:29:16;;:::o;3556:851:15:-;3676:6;:13;3642:16;;3668:49;;;;;-1:-1:-1;;;3668:49:15;;;;;;;;;;;;-1:-1:-1;;;3668:49:15;;;;;;;;;;;;;;;3850:6;:13;3739:9;;3773:16;;;;3723:13;;3825:22;;;:38;3821:197;;;-1:-1:-1;3890:6:15;:13;3922:27;;;;-1:-1:-1;3821:197:15;;;-1:-1:-1;3988:22:15;;;3821:197;4101:29;4147:8;4133:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4133:23:15;-1:-1:-1;4101:55:15;-1:-1:-1;4162:14:15;4270:11;4256:121;4287:14;4283:1;:18;4256:121;;;4342:6;4349:1;4342:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4342:9:15;4316:12;4329:9;4316:23;;;;;;;;-1:-1:-1;;;;;4316:35:15;;;:23;;;;;;;;;;;:35;4359:11;;;;;4303:3;4256:121;;;-1:-1:-1;4390:12:15;;-1:-1:-1;;;;;3556:851:15;;;;;:::o;1501:20:16:-;;;;:::o;1347:30::-;;;;:::o;5903:92::-;5978:12;;5903:92;;:::o;1309:34:22:-;;;;:::o;1971:41:16:-;;;-1:-1:-1;;;;;1971:41:16;;:::o;3606:2004:22:-;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;3737:5:22;2096:21:15;2111:5;2096:14;:21::i;:::-;2081:59;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;;;;3773:8:22;1359:35:9;1373:8;1383:10;1359:13;:35::i;:::-;:78;;;;1404:33;1416:8;1426:10;1404:11;:33::i;:::-;1359:136;;;-1:-1:-1;1464:18:9;;;;:8;:18;;;;;;1447:48;;-1:-1:-1;;;;;1464:18:9;1484:10;1447:16;:48::i;:::-;1344:195;;;;;-1:-1:-1;;;1344:195:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1344:195:9;;;;;;;;;;;;;;;3799:27:22;3810:8;3820:5;3799:10;:27::i;:::-;3791:68;;;;;-1:-1:-1;;;3791:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:5:16;3873:22:22;;:41;3865:76;;;;;-1:-1:-1;;;3865:76:22;;;;;;;;;;;;-1:-1:-1;;;3865:76:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;3955:24:22;;3947:52;;;;;-1:-1:-1;;;3947:52:22;;;;;;;;;;;;-1:-1:-1;;;3947:52:22;;;;;;;;;;;;;;;4005:8;4016:24;4031:5;4038:1;4016:14;:24::i;:::-;-1:-1:-1;;;;;4069:17:22;;;4047:19;4069:17;;;:10;:17;;;;;;4112:22;;;;;;;4167:25;;;;4005:35;;-1:-1:-1;4069:17:22;;4167:25;4263:34;;4276:8;;4005:35;;4263:12;:34::i;:::-;4308:13;;4304:105;;4336:24;;;4368:34;4381:10;4352:8;4368:12;:34::i;:::-;4441:15;4419:18;:37;4415:822;;4709:27;;;;;4681:25;;;:55;4744:24;;;4825:28;4760:8;4825:18;:28::i;:::-;4862:34;4875:10;4887:8;4862:12;:34::i;:::-;4415:822;;;5152:36;;;;:78;;5214:15;5193:36;;5152:78;:40;:78;:::i;:::-;5124:25;;;:106;4415:822;5332:15;5302:27;;;:45;5443:1;5425:19;;5487:24;5502:8;5487:14;:24::i;:::-;5591:8;5573:10;-1:-1:-1;;;;;5544:61:22;5560:5;-1:-1:-1;;;;;5544:61:22;-1:-1:-1;;;;;;;;;;;5544:61:22;;;;;;;;;1545:1:9;;;;2146::15;742::10;3606:2004:22;;;:::o;1098:144:14:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:28:14;:11;1190:8;1171:28;:18;:28;:::i;:::-;1210:27;;-1:-1:-1;;;;;1210:27:14;;;;;;;;1098:144;:::o;1922:45:16:-;;;-1:-1:-1;;;;;1922:45:16;;:::o;1681:206:11:-;1782:7;1807:11;;1799:46;;;;;-1:-1:-1;;;1799:46:11;;;;;;;;;;;;-1:-1:-1;;;1799:46:11;;;;;;;;;;;;;;;1858:24;1872:9;1858:13;:24::i;:::-;1851:31;1681:206;-1:-1:-1;;;1681:206:11:o;2391:134:18:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:28:18;:12;2507:13;;2492:28;:::i;:::-;;2391:134;;:::o;1127:287:21:-;1262:10;1244:29;;;;:17;:29;;;;;;1222:51;;1214:82;;;;;-1:-1:-1;;;1214:82:21;;;;;;;;;;;;-1:-1:-1;;;1214:82:21;;;;;;;;;;;;;;;1320:10;1302:29;;;;:17;:29;;;;;;;;;:51;;;1364:45;;;;;;;;;;;;;;;;;1127:287;:::o;1770:26:16:-;;;-1:-1:-1;;;;;1770:26:16;;:::o;2719:325:20:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:83:20;;;;;;;;;;;;;;;;;;;;;;;;;2947:15;:34;;;;2987:24;:52;2719:325::o;1313:2496:19:-;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;2127:12:16;;2109:15;;:30;2101:56;;;;;-1:-1:-1;;;2101:56:16;;;;;;;;;;;;-1:-1:-1;;;2101:56:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;1492:24:19;;1484:52;;;;;-1:-1:-1;;;1484:52:19;;;;;;;;;;;;-1:-1:-1;;;1484:52:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;1585:22:19;;1565:17;1585:22;;;:10;:22;;;;;1625:13;;1585:22;;1672:9;1668:1211;;1764:24;1782:5;1764:17;:24::i;:::-;1837:13;;;-1:-1:-1;1858:30:19;1871:10;1837:13;1858:12;:30::i;:::-;-1:-1:-1;1929:18:19;;1911:15;:36;1955:25;;;:40;;;2032:93;;2113:4;;-1:-1:-1;;;;;2032:93:19;;;2058:1;;-1:-1:-1;;;;;;;;;;;2032:93:19;2058:1;;2032:93;1668:1211;;;2170:15;2142:5;:25;;;:43;2138:741;;;2302:18;;2272:25;;;;:49;;;:29;:49;:::i;:::-;2329:25;;;:40;;;2382:42;;;;;;;;2257:64;;-1:-1:-1;;;;;;2382:42:19;;;;;;;;;;;;2138:741;;;-1:-1:-1;2678:18:19;;2660:15;:36;2704:25;;;:40;;;2792:24;2811:4;2792:18;:24::i;:::-;2830:42;;;;;;;;-1:-1:-1;;;;;2830:42:19;;;;;;;;;;;;;2138:741;2886:21;2909:13;2924:11;2939:47;2957:10;2969:9;2980:5;;2939:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2939:17:19;;-1:-1:-1;;;2939:47:19:i;:::-;2885:101;;-1:-1:-1;2885:101:19;-1:-1:-1;2885:101:19;-1:-1:-1;2996:12:19;;2992:92;;3022:14;;:55;;;-1:-1:-1;;;3022:55:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3022:14:19;;;;:37;;:55;;;;;:14;;:55;;;;;;;;:14;;:55;;;5:2:-1;;;;30:1;27;20:12;5:2;3022:55:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3022:55:19;;;;2992:92;3127:14;;-1:-1:-1;;;;;3127:14:19;:32;3160:16;3178:25;3193:9;3178:14;:25::i;:::-;:50;;3226:1;3178:50;;;3206:9;3178:50;3127:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3127:102:19;-1:-1:-1;;;;;3127:102:19;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3127:102:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3344:12:19;;3321:14;;-1:-1:-1;;;;;;3344:12:19;:26;;-1:-1:-1;3341:226:19;;-1:-1:-1;3432:12:19;;3396:6;;-1:-1:-1;;;;;3432:12:19;3453:57;3432:12;3476:10;3496:4;3396:6;3453:57;:22;:57;:::i;:::-;3341:226;;;;-1:-1:-1;3551:9:19;3341:226;3593:16;3580:9;:29;;3572:60;;;;;-1:-1:-1;;;3572:60:19;;;;;;;;;;;;-1:-1:-1;;;3572:60:19;;;;;;;;;;;;;;;3650:17;;-1:-1:-1;;;;;3650:17:19;3642:40;3639:166;;3696:17;;;;;;;;;-1:-1:-1;;;;;3696:17:19;-1:-1:-1;;;;;3696:31:19;;3728:10;3740;3752:9;3763:5;;3770:16;3788:9;3696:102;;;;;;;;;;;;;-1:-1:-1;;;;;3696:102:19;-1:-1:-1;;;;;3696:102:19;;;;;;-1:-1:-1;;;;;3696:102:19;-1:-1:-1;;;;;3696:102:19;;;;;;-1:-1:-1;;;;;3696:102:19;-1:-1:-1;;;;;3696:102:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3696:102:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3696:102:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3696:102:19;;;;3639:166;2163:1:16;;;;;;;1313:2496:19;;;;;:::o;505:19:10:-;;;-1:-1:-1;;;505:19:10;;;;;:::o;5953:151:22:-;6057:42;6074:5;6081:3;6086:8;6057:42;;;;;;;;;;;;:16;:42::i;1710:45:15:-;;;;;;;;;;;;-1:-1:-1;;;;;1710:45:15;;:::o;1079:158:11:-;1150:7;1184:12;;1175:6;:21;1167:46;;;;;-1:-1:-1;;;1167:46:11;;;;;;;;;;;;-1:-1:-1;;;1167:46:11;;;;;;;;;;;;;;;-1:-1:-1;1226:6:11;1079:158::o;849:108:14:-;909:4;928:24;:11;944:7;928:24;:15;:24;:::i;3322:162:20:-;3416:11;3444:35;3469:9;3444:24;:35::i;1644:117:18:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:16:18;:4;1747:9;;1740:16;:::i;961:133:14:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:24:14;:11;1046:7;1030:24;:15;:24;:::i;:::-;1065;;-1:-1:-1;;;;;1065:24:14;;;;;;;;961:133;:::o;622:36:20:-;;;;:::o;5302:131:15:-;5386:7;2252:18;;;:8;:18;;;;;;5364:8;;-1:-1:-1;;;;;2252:18:15;2237:68;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;;;;-1:-1:-1;;5410:18:15;;;;:8;:18;;;;;;-1:-1:-1;;;;;5410:18:15;;5302:131::o;2914:169::-;-1:-1:-1;;;;;3019:21:15;2998:4;3019:21;;;:10;:21;;;;;:41;;;3063:15;-1:-1:-1;;2914:169:15:o;1380:913:1:-;1024:12:50;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:50;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:50;;;;;1225:18;1213:4;1225:18;;;1170:80;1596:47:1;1629:13;1596:32;:47::i;:::-;1649:38;:36;:38::i;:::-;1693:102;1732:12;1746:19;1767:9;1778:16;1693:38;:102::i;:::-;1801:57;1848:9;1801:46;:57::i;:::-;1864:56;:54;:56::i;:::-;1926:38;:36;:38::i;:::-;1970:66;2023:12;1970:52;:66::i;:::-;2042:64;2093:12;2042:50;:64::i;:::-;2258:30;-1:-1:-1;;;2258:18:1;:30::i;:::-;1268:14:50;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:50;;;1264:55;1380:913:1;;;;;;;:::o;2656:195:15:-;2735:4;-1:-1:-1;;;;;2757:23:15;;2749:51;;;;;-1:-1:-1;;;2749:51:15;;;;;;;;;;;;-1:-1:-1;;;2749:51:15;;;;;;;;;;;;;;;2813:25;2828:9;2813:14;:25::i;:::-;:33;;2845:1;2813:33;;;2841:1;2813:33;2806:40;;;2656:195;-1:-1:-1;;2656:195:15:o;1592:27:16:-;;;;:::o;1838:166:18:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:24:18;:10;1951:11;;1938:24;:::i;:::-;;1973:26;1987:11;;1973:26;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;1973:26:18;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;1973:26:18;;;;-1:-1:-1;1973:26:18;;-1:-1:-1;;;;1973:26:18;1838:166;;:::o;624:234:35:-;1024:12:50;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:50;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:50;;;;;1225:18;1213:4;1225:18;;;1170:80;811:40:35;-1:-1:-1;;;811:18:35;:40::i;:::-;1268:14:50;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:50;;;1264:55;624:234:35;:::o;548:1047:13:-;703:24:14;716:10;703:12;:24::i;:::-;:53;;;;731:25;745:10;731:13;:25::i;:::-;695:138;;;;-1:-1:-1;;;695:138:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:6:13;732:859;748:22;;;732:859;;;785:17;805:11;;817:1;805:14;;;;;;;;;;;;;-1:-1:-1;;;;;805:14:13;785:34;;827:24;854:21;;876:1;854:24;;;;;;;;;;;;;827:51;;886:18;907:12;;920:1;907:15;;;;;;;;;;;;;-1:-1:-1;;;;;907:15:13;886:36;;960:1;-1:-1:-1;;;;;939:23:13;:9;-1:-1:-1;;;;;939:23:13;;;931:51;;;;;-1:-1:-1;;;931:51:13;;;;;;;;;;;;-1:-1:-1;;;931:51:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1011:21:13;;991:17;1011:21;;;:10;:21;;;;;1070:25;;;;1048:47;;1040:76;;;;;-1:-1:-1;;;1040:76:13;;;;;;;;;;;;-1:-1:-1;;;1040:76:13;;;;;;;;;;;;;;;1137:13;;1162:9;1159:126;;1183:24;1201:5;1183:17;:24::i;:::-;-1:-1:-1;1224:13:13;;1247:29;1260:9;1224:13;1247:12;:29::i;:::-;1321:18;;;;:12;:18;;;;;;:31;;-1:-1:-1;;;;;;1321:31:13;-1:-1:-1;;;;;1321:31:13;;;;;;;;1365:35;;1321:31;;:18;;1365:35;;1321:18;1365:35;1409:25;;;:47;;;1492:92;;1572:4;;-1:-1:-1;;;;;1492:92:13;;;1518:1;;-1:-1:-1;;;;;;;;;;;1492:92:13;1518:1;;1492:92;-1:-1:-1;;772:3:13;;;;;-1:-1:-1;732:859:13;;-1:-1:-1;;732:859:13;7000:225:22;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7111:55:22;;;;;;;;;;;;;;;;;7172:22;:48;7000:225::o;3864:528:20:-;3981:20;4114:4;862:50;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4260:30:20;;;;;;:17;:30;;;;;;;;;-1:-1:-1;;4035:346:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4035:346:20;;;;;;4018:369;;;;;;;;;-1:-1:-1;;3864:528:20;;;;:::o;5159:98:15:-;5239:6;:13;5159:98;:::o;2103:203:18:-;2183:10;2177:24;2151:13;;2177:24;-1:-1:-1;;2177:24:18;;;;;;;;;;;2174:128;;2223:14;;;;;;;;;-1:-1:-1;;;;;2223:14:18;-1:-1:-1;;;;;2223:32:18;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2223:34:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2223:34:18;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2223:34:18;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2223:34:18;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2223:34:18;;420:4:-1;411:14;;;;2223:34:18;;;;;411:14:-1;2223:34:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2223:34:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2216:41;;;;2174:128;2285:10;2278:17;;;;;;;;;;;;;-1:-1:-1;;2278:17:18;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:10;2278:17;;2285:10;2278:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3197:128:15;-1:-1:-1;;;;;3292:20:15;3271:4;3292:20;;;:10;:20;;;;;:28;;3197:128::o;1377:176:20:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:9:20;2096:21:15;2111:5;2096:14;:21::i;:::-;2081:59;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;;;;1513:35:20;1530:9;1541:6;1513:16;:35::i;4480:148:15:-;4571:4;4592:18;;;:8;:18;;;;;;;-1:-1:-1;;;;;4592:31:15;;;:18;;:31;;4480:148::o;609:27:12:-;;;-1:-1:-1;;;;;609:27:12;;:::o;2308:259:9:-;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;2415:17:9;;2422:10;2415:17;;2407:42;;;;;-1:-1:-1;;;2407:42:9;;;;;;;;;;;;-1:-1:-1;;;2407:42:9;;;;;;;;;;;;;;;2481:10;2455:37;;;;:25;:37;;;;;;;;-1:-1:-1;;;;;2455:42:9;;;;;;;;;;;;:54;;-1:-1:-1;;2455:54:9;;;;;;;;;;2520:42;;;;;;;2455;;2481:10;2520:42;;;;;;;;;;;2308:259;;:::o;4470:469:16:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;4623:8:16;;4663:12;;-1:-1:-1;;;;;4663:12:16;;;;4696:27;;;;:70;;;4765:1;4734:13;-1:-1:-1;;;;;4727:33:16;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4727:35:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4727:35:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4727:35:16;:39;4696:70;4681:114;;;;;-1:-1:-1;;;4681:114:16;;;;;;;;;;;;-1:-1:-1;;;4681:114:16;;;;;;;;;;;;;;;4801:8;:20;;;4827:12;:28;;-1:-1:-1;;;;;;4827:28:16;-1:-1:-1;;;;;4827:28:16;;;;;;;;;;;4866:68;;;;;;;;;;;;;;;;;;;4921:12;;;;4866:68;;;;;;;;;;;;;;;742:1:10;;4470:469:16;;:::o;663:27:20:-;;;;:::o;746:110:17:-;807:4;826:25;:12;843:7;826:25;:16;:25;:::i;4851:154:15:-;-1:-1:-1;;;;;4959:21:15;4938:4;4959:21;;;:10;:21;;;;;:41;;;;4851:154::o;5428:471:16:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5564:32:16;;;;:67;;;5600:31;:18;-1:-1:-1;;;;;5600:29:16;;:31::i;:::-;5556:104;;;;;-1:-1:-1;;;5556:104:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5674:30:16;;;;:63;;;5708:29;:16;-1:-1:-1;;;;;5708:27:16;;:29::i;:::-;5666:102;;;;;-1:-1:-1;;;5666:102:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;5774:17;:60;;-1:-1:-1;;;;;5774:60:16;;;-1:-1:-1;;;;;;5774:60:16;;;;;;;5840:15;:54;;;;;;;;;;;5428:471::o;5730:338:15:-;2282:1;2252:18;;;:8;:18;;;;;;5820:8;;-1:-1:-1;;;;;2252:18:15;2237:68;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;;;;5853:35;5867:8;5877:10;5853:13;:35::i;:::-;:70;;;;5898:25;5912:10;5898:13;:25::i;:::-;5838:132;;;;;-1:-1:-1;;;5838:132:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5976:22;;;;:12;:22;;;;;;:36;;-1:-1:-1;;;;;;5976:36:15;-1:-1:-1;;;;;5976:36:15;;;;;;;;6023:40;;5976:36;;:22;;6023:40;;5976:22;6023:40;5730:338;;;:::o;2232:420:20:-;2398:55;2429:11;2442:10;2398:30;:55::i;:::-;2461:11;2480:2;2490;2500;779:11:21;-1:-1:-1;;;;;677:113:21;:98;696:35;725:5;696:28;:35::i;:::-;741:2;753;765;677:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;677:98:21;;;;;;;;-1:-1:-1;;;;;677:113:21;;662:155;;;;;-1:-1:-1;;;662:155:21;;;;;;;;;;;;-1:-1:-1;;;662:155:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;823:30:21;;;;;;:17;:30;;;;;;;;;:32;;;;;;;;866:57;;;;;;;;;;;;;;;;;2517:16:20;2536:17;2544:8;2536:7;:17::i;:::-;2517:36;;2559:11;2573:34;2598:8;2573:24;:34::i;:::-;2559:48;;2613:34;2630:8;2640:6;2613:16;:34::i;6663:267:22:-;6791:34;6804:5;6811:3;6816:8;6791:12;:34::i;:::-;6839:51;6862:5;6869:3;6874:8;6884:5;6839:22;:51::i;:::-;6831:93;;;;;-1:-1:-1;;;6831:93:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;6663:267;;;;:::o;843:120:10:-;641:25:17;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;928:9;;;;;;;943:7;:15;;-1:-1:-1;;;;943:15:10;;;843:120::o;2858:381:18:-;2282:1:15;2252:18;;;:8;:18;;;;;;2952:13:18;;2930:8;;-1:-1:-1;;;;;2252:18:15;2237:68;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;-1:-1:-1;;;2237:68:15;;;;;;;;;;;;;;;3007:12:18;3001:26;2975:17;;3001:26;-1:-1:-1;;3001:26:18;;;;;;;;;;;2998:131;;3048:14;;;;;;;;;-1:-1:-1;;;;;3048:14:18;-1:-1:-1;;;;;3048:33:18;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3048:35:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3048:35:18;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3048:35:18;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3048:35:18;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3048:35:18;;420:4:-1;411:14;;;;3048:35:18;;;;;411:14:-1;3048:35:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3048:35:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:41;;2998:131;;;3110:12;3104:18;;;;;;;;;;;;;-1:-1:-1;;3104:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;3110:12;3104:18;;3110:12;3104:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2998:131;3142:92;3163:27;3171:4;3163:25;:27::i;:::-;3142:92;;;;;;;;;;;;;-1:-1:-1;;;3142:92:18;;;3209:19;:8;:17;:19::i;:::-;3142:3;;:92;;;:13;:92;:::i;:::-;3135:99;2858:381;-1:-1:-1;;;;2858:381:18:o;2915:84:16:-;2993:1;2915:84;:::o;860:136:17:-;641:25;655:10;641:13;:25::i;:::-;633:97;;;;-1:-1:-1;;;633:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:25;:12;947:7;930:25;:16;:25;:::i;:::-;966;;-1:-1:-1;;;;;966:25:17;;;;;;;;860:136;:::o;1704:236:20:-;1786:8;1359:35:9;1373:8;1383:10;1359:13;:35::i;:::-;:78;;;;1404:33;1416:8;1426:10;1404:11;:33::i;:::-;1359:136;;;-1:-1:-1;1464:18:9;;;;:8;:18;;;;;;1447:48;;-1:-1:-1;;;;;1464:18:9;1484:10;1447:16;:48::i;:::-;1344:195;;;;;-1:-1:-1;;;1344:195:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1344:195:9;;;;;;;;;;;;;;;1804:16:20;1823:17;1831:8;1823:7;:17::i;:::-;1804:36;;1846:11;1860:34;1885:8;1860:24;:34::i;:::-;1846:48;;1901:34;1918:8;1928:6;1901:16;:34::i;944:255:12:-;1042:4;-1:-1:-1;;;;;1059:27:12;;1056:139;;-1:-1:-1;;;;;;1103:16:12;;;1096:23;;1056:139;1154:13;-1:-1:-1;;;;;1147:31:12;;1179:8;1147:41;;;;;;;;;;;;;-1:-1:-1;;;;;1147:41:12;-1:-1:-1;;;;;1147:41:12;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1147:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1147:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1147:41:12;;-1:-1:-1;1140:48:12;;3337:382:9;-1:-1:-1;;;;;3464:18:9;;;3435:4;3464:18;;;:10;:18;;;;;;;;:26;3517:21;;;:12;:21;;;;;;3435:4;;3464:26;;3517:21;3547:24;3544:171;;-1:-1:-1;;;;;;;;3588:33:9;;;;;;;:25;:33;;;;;;;;:44;;;;;;;;;;;;3581:51;;3544:171;-1:-1:-1;;;;;3660:37:9;;;;;;;:25;:37;;;;;;;;:48;;;;;;;;;;;;;-1:-1:-1;3653:55:9;;-1:-1:-1;3653:55:9;1000:121:17;1044:31;:12;1064:10;1044:31;:19;:31;:::i;:::-;1086:30;;1105:10;;1086:30;;;;;1000:121::o;1642:1960:22:-;709:7:10;;-1:-1:-1;;;709:7:10;;;;701:35;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;-1:-1:-1;;;701:35:10;;;;;;;;;;;;;;;1774:8:22;1359:35:9;1373:8;1383:10;1359:13;:35::i;:::-;:78;;;;1404:33;1416:8;1426:10;1404:11;:33::i;:::-;1359:136;;;-1:-1:-1;1464:18:9;;;;:8;:18;;;;;;1447:48;;-1:-1:-1;;;;;1464:18:9;1484:10;1447:16;:48::i;:::-;1344:195;;;;;-1:-1:-1;;;1344:195:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1344:195:9;;;;;;;;;;;;;;;1912:5:16;1800:22:22;;:41;1792:76;;;;;-1:-1:-1;;;1792:76:22;;;;;;;;;;;;-1:-1:-1;;;1792:76:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;1882:17:22;;1874:45;;;;;-1:-1:-1;;;1874:45:22;;;;;;;;;;;;-1:-1:-1;;;1874:45:22;;;;;;;;;;;;;;;1925:16;1944:18;;;:8;:18;;;;;;-1:-1:-1;;;;;1944:18:22;1976:24;1944:18;1976:14;:24::i;:::-;1968:50;;;;;-1:-1:-1;;;1968:50:22;;;;;;;;;;;;-1:-1:-1;;;1968:50:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;2046:20:22;;;2024:19;2046:20;;;:10;:20;;;;;;2092:15;;;;;;;2125:13;;2229:27;;;;2092:15;;2125:13;;2259:15;2229:45;;2024:19;2356:37;2057:8;2381:11;2356:14;:37::i;:::-;2345:48;-1:-1:-1;2399:16:22;2418:20;:11;2345:48;2418:20;:15;:20;:::i;:::-;2399:39;;2512:13;2498:11;:27;2495:478;;;2582:11;2575:18;;2662:42;2675:8;2685:11;2698:5;2662:12;:42::i;:::-;2495:478;;;2776:39;2791:8;2801:13;2776:14;:39::i;:::-;2887:15;2857:27;;;:45;2947:19;;2830;;;;-1:-1:-1;2770:45:22;;-1:-1:-1;2957:8:22;;2947:19;;;;;2495:478;2983:9;2979:370;;3002:24;3020:5;3002:17;:24::i;:::-;3041:13;;;-1:-1:-1;3062:23:22;3075:3;3041:13;3062:12;:23::i;:::-;3098:101;;3187:4;;-1:-1:-1;;;;;3098:101:22;;;3124:1;;-1:-1:-1;;;;;;;;;;;3098:101:22;3124:1;;3098:101;2979:370;;;3245:15;3216:5;:25;;;:44;3212:137;;3318:24;3337:4;3318:18;:24::i;:::-;3382:30;3395:4;3401;3407;3382:12;:30::i;:::-;3487:4;3476:3;-1:-1:-1;;;;;3444:53:22;3460:8;-1:-1:-1;;;;;3444:53:22;-1:-1:-1;;;;;;;;;;;3444:53:22;;;;;;;;;3512:51;3535:8;3545:3;3550:8;3512:51;;;;;;;;;;;;:22;:51::i;:::-;3504:93;;;;;-1:-1:-1;;;3504:93:22;;;;;;;;;;;;;;;;;;;;;;;;;;;3638:575:16;2236:25;2250:10;2236:13;:25::i;:::-;:54;;;-1:-1:-1;2279:11:16;;-1:-1:-1;;;;;2279:11:16;2265:10;:25;2236:54;2221:117;;;;;-1:-1:-1;;;2221:117:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3755:12;3770:40;3781:13;3804:4;3770:10;:40::i;:::-;3755:55;-1:-1:-1;3816:11:16;3836:12;;;:33;;;3862:7;3852;:17;3836:33;3833:166;;;3901:1;3891:7;:11;3883:40;;;;;-1:-1:-1;;;3883:40:16;;;;;;;;;;;;-1:-1:-1;;;3883:40:16;;;;;;;;;;;;;;;-1:-1:-1;3940:7:16;3833:166;;;-1:-1:-1;3985:7:16;3833:166;4048:11;;4010:58;;;;;;;;-1:-1:-1;;;;;4048:11:16;;;;4010:58;;;4021:10;;4010:58;;;;;;;;;4188:11;;4163:45;;4173:13;;-1:-1:-1;;;;;4188:11:16;4201:6;4163:9;:45::i;7485:580:22:-;7608:4;7584:9;2096:21:15;2111:5;2096:14;:21::i;:::-;2081:59;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;7640:21:22;;7622:15;7640:21;;;:10;:21;;;;;;7622:15;7844:10;7841:131;;7907:15;7881:3;:23;;;:41;7864:58;;7841:131;;;7960:5;7943:22;;7841:131;1912:5:16;7983:42:22;8002:22;;7983:14;:18;;:42;;;;:::i;:::-;:61;;;;;;;7485:580;-1:-1:-1;;;;;;;7485:580:22:o;360:49:21:-;;;;;;;;;;;;;:::o;6542:302:15:-;6640:4;6657:22;;;:12;:22;;;;;;-1:-1:-1;;;;;6657:37:15;;;:22;;:37;;:122;;-1:-1:-1;6739:1:15;6705:22;;;:12;:22;;;;;;-1:-1:-1;;;;;6705:22:15;:36;:73;;;;;6745:33;6756:8;6766:11;6745:10;:33::i;:::-;6654:186;;;-1:-1:-1;6796:4:15;6789:11;;6654:186;-1:-1:-1;6828:5:15;6821:12;;3807:143:9;3897:4;3918:18;;;:8;:18;;;;;;;-1:-1:-1;;;;;3918:27:9;;;:18;;:27;;3807:143::o;4487:664:19:-;4693:17;;4616:16;;;;;;-1:-1:-1;;;;;4693:17:19;4685:40;4682:205;;4753:17;;:76;;-1:-1:-1;;;4753:76:19;;4788:10;4753:76;;;;;;-1:-1:-1;;;;;4753:76:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;;;:34;;4800:10;;4812:9;;4823:5;;4753:76;;;;;;;;;;;;:17;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4753:76:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4753:76:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4753:76:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4753:76:19;;-1:-1:-1;4682:205:19;;;4872:8;;4858:22;;4682:205;4896:15;;4893:254;;4958:14;;:67;;;-1:-1:-1;;;4958:67:19;;-1:-1:-1;;;;;4958:67:19;;;;;;;;;;;;;;;:14;;;:42;;:67;;;;;;;;;;;;;:14;:67;;;5:2:-1;;;;30:1;27;20:12;5:2;4958:67:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4958:67:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4958:67:19;;;;;;;;;-1:-1:-1;4958:67:19;-1:-1:-1;5041:29:19;;;;5033:70;;;;;-1:-1:-1;;;5033:70:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;5126:14;5111:29;;;;4893:254;4487:664;;;;;;;:::o;8048:680:15:-;8150:18;8171;;;:8;:18;;;;;;-1:-1:-1;;;;;8171:18:15;8203:24;8195:53;;;;;-1:-1:-1;;;8195:53:15;;;;;;;;;;;;-1:-1:-1;;;8195:53:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;8272:22:15;;8254:15;8272:22;;;:10;:22;;;;;8323:23;;;;8272:22;;8368:26;8283:10;8368:14;:26::i;:::-;8352:42;;8403:8;8400:267;;;8424:8;8421:165;;;8470:28;:15;8490:7;8470:28;:19;:28;:::i;:::-;8444:23;;;:54;8421:165;;;8549:28;:15;8569:7;8549:28;:19;:28;:::i;:::-;8523:23;;;:54;8421:165;8400:267;;;8632:28;:15;8652:7;8632:28;:19;:28;:::i;:::-;8606:23;;;:54;8400:267;8677:46;;;;;;;;;;;;;;;8695:8;;8677:46;;;;;;;;8048:680;;;;;;;:::o;7338:297::-;7427:18;;;;:8;:18;;;;;;-1:-1:-1;;;;;7427:31:15;;;:18;;:31;7423:208;;7518:6;27:10:-1;;39:1;23:18;;45:23;;;7518:22:15;;;;-1:-1:-1;;;;;7518:22:15;;-1:-1:-1;;;;;;7518:22:15;;;;;;;;-1:-1:-1;7594:18:15;;;:8;7518:22;7594:18;;;;:30;;;;;;;;;;7423:208;7338:297;;:::o;6226:215::-;6331:1;6297:22;;;:12;:22;;;;;;-1:-1:-1;;;;;6297:22:15;:36;6294:143;;6376:1;6343:22;;;:12;:22;;;;;;:35;;-1:-1:-1;;;;;;6343:35:15;;;6391:39;6356:8;;6391:39;;6376:1;;6391:39;6226:215;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;4094:155:9;4195:1;4165:18;;;:8;:18;;;;;;-1:-1:-1;;;;;4165:18:9;:32;4161:84;;4236:1;4207:18;;;:8;:18;;;;;:31;;-1:-1:-1;;;;;;4207:31:9;;;4094:155::o;510:180:31:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:31;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:31;;;510:180::o;6961:319:15:-;7035:12;;7031:245;;7139:12;:14;;;;;;;;7242:27;;6961:319::o;842:202:45:-;968:68;;;-1:-1:-1;;;;;968:68:45;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:45;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:45;;961:5;;942:18;:95::i;779:200:31:-;851:4;-1:-1:-1;;;;;875:21:31;;867:68;;;;-1:-1:-1;;;867:68:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:31;:11;:20;;;;;;;;;;;;;;;779:200::o;5422:1008:20:-;5540:11;5516:9;2096:21:15;2111:5;2096:14;:21::i;:::-;2081:59;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;-1:-1:-1;;;2081:59:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;5579:21:20;;5561:15;5579:21;;;:10;:21;;;;;5719:23;;;;5804:18;;5785:15;;5745;5719:41;;;;5769:31;;:53;5766:245;;5841:8;;5832:17;;5766:245;;;5986:18;;5956:8;;:27;;5969:13;5956:27;:12;:27;:::i;:::-;:48;;;;;;5947:57;;5766:245;6073:15;;:20;;:76;;;6131:18;;6113:15;;6097:13;:31;:52;6073:76;6070:356;;;6163:12;1912:5:16;6178:38:20;6191:24;;6178:8;;:12;;:38;;;;:::i;:::-;:57;;;;;;6163:72;;6256:7;6247:6;:16;6243:177;;;6369:7;6359:17;;;;6243:177;;;6410:1;6401:10;;6243:177;6070:356;;2146:1:15;;5422:1008:20;;;;:::o;260:175:31:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:31;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:31;424:4;401:27;;;260:175::o;1409:498:50:-;1820:4;1864:17;1895:7;1409:498;:::o;641:232:12:-;720:12;:28;;-1:-1:-1;;;;;;720:28:12;-1:-1:-1;;;;;720:28:12;;;;;;;;769:27;;:70;;;838:1;807:13;-1:-1:-1;;;;;800:33:12;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:35:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;800:35:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;800:35:12;:39;769:70;754:114;;;;;-1:-1:-1;;;754:114:12;;;;;;;;;;;;-1:-1:-1;;;754:114:12;;;;;;;;;;;;;;549:74:10;604:7;:14;;-1:-1:-1;;;;604:14:10;-1:-1:-1;;;604:14:10;;;549:74::o;2354:487:16:-;2543:24;2520:19;:47;;2512:84;;;;;-1:-1:-1;;;2512:84:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:14;:36;;2627:10;-1:-1:-1;;;;;;2602:36:16;;;;;;;2698:11;:26;;;;;-1:-1:-1;;;;;2698:26:16;;;;;;;;;;;2730:18;:40;;;;2776:8;:20;2802:15;:34;2354:487::o;1227:330:18:-;1315:19;:17;:19::i;:::-;1340:16;;;;:4;;:16;;;;;:::i;:::-;-1:-1:-1;1522:30:18;-1:-1:-1;;;1522:18:18;:30::i;452:389:11:-;806:30;-1:-1:-1;;;806:18:11;:30::i;:::-;452:389::o;1135:110:20:-;1236:4;1209:24;:31;1135:110::o;453:143:17:-;530:21;544:6;530:13;:21::i;:::-;525:67;;561:24;:12;578:6;561:24;:16;:24;:::i;510:140:14:-;586:20;599:6;586:12;:20::i;:::-;581:65;;616:23;:11;632:6;616:23;:15;:23;:::i;1533:190:35:-;-1:-1:-1;;;;;;1608:25:35;;;;;1600:66;;;;;-1:-1:-1;;;1600:66:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1676:33:35;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1676:40:35;1712:4;1676:40;;;1533:190::o;4497:727:20:-;-1:-1:-1;;;;;4602:21:20;;4584:15;4602:21;;;:10;:21;;;;;;;;;4645:11;;4635:53;;;;;;;4602:21;;4669:10;;4602:21;;4645:11;;4635:53;;;;;;;;;;;4884:15;4858:23;;;:41;4910:10;;4906:138;;5005:12;;4995:42;;-1:-1:-1;;;;;5005:12:20;5019:9;5030:6;4995:9;:42::i;:::-;5111:15;;-1:-1:-1;;;;;5111:15:20;5103:38;5100:120;;5155:15;;:58;;;-1:-1:-1;;;5155:58:20;;5183:10;5155:58;;;;-1:-1:-1;;;;;5155:58:20;;;;;;;;;;;;;;;:15;;;;;:27;;:58;;;;;:15;;:58;;;;;;;:15;;:58;;;5:2:-1;;;;30:1;27;20:12;5:2;5155:58:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;557:797:49;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:49;;;557:797;-1:-1:-1;;557:797:49:o;3381:265:34:-;3580:58;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3580:58:34;;;;;;;3570:69;;;;;;3381:265::o;8568:347:22:-;8709:4;8728:15;:2;-1:-1:-1;;;;;8728:13:22;;:15::i;:::-;8723:48;;-1:-1:-1;8760:4:22;8753:11;;8723:48;8792:77;;-1:-1:-1;;;8792:77:22;;8836:10;8792:77;;;;;;-1:-1:-1;;;;;8792:77:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;8776:13;;8792:36;;;;;;8836:10;;8848:4;;8854:7;;8863:5;;8792:77;;;;;;;;;;;8776:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8792:77:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8792:77:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8792:77:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8792:77:22;-1:-1:-1;;;;;;8883:26:22;-1:-1:-1;;;8883:26:22;;-1:-1:-1;;8568:347:22;;;;;;:::o;978:439:4:-;1116:42;;;;;;;;;;;-1:-1:-1;;;1116:42:4;;;;1183:13;;1193:2;1183:13;;;1048;1183;;;;;;-1:-1:-1;;;;;1095:14:4;;;1116:42;1048:13;;1183;;;21:6:-1;;104:10;1183:13:4;87:34:-1;135:17;;-1:-1;1183:13:4;1164:32;;-1:-1:-1;;;1202:3:4;1206:1;1202:6;;;;;;;;;;;:12;-1:-1:-1;;;;;1202:12:4;;;;;;;;;-1:-1:-1;;;1220:3:4;1224:1;1220:6;;;;;;;;;;;:12;-1:-1:-1;;;;;1220:12:4;;;;;;;;-1:-1:-1;1243:6:4;1238:151;1259:2;1255:1;:6;1238:151;;;1289:8;1321:1;1304:5;1310:1;1314:2;1310:6;1304:13;;;;;;;;;;-1:-1:-1;;;;;1304:18:4;;;;1298:25;;1289:35;;;;;;;;;;;;;;;;;;1276:3;1282:1;1284;1282:3;1280:1;:5;1276:10;;;;;;;;;;;:48;-1:-1:-1;;;;;1276:48:4;;;;;;;;;1345:8;1360:5;1366:1;1370:2;1366:6;1360:13;;;;;;;1345:37;;1360:13;;;1376:4;1354:27;;1345:37;;;;;;;;;;;;;;1332:3;1338:1;1340;1338:3;1336:1;:5;1332:10;;;;;;;;;;;:50;-1:-1:-1;;;;;1332:50:4;;;;;;;;-1:-1:-1;1263:3:4;;1238:151;;;-1:-1:-1;1408:3:4;978:439;-1:-1:-1;;;;978:439:4:o;484:490::-;546:27;665:2;677:7;673:38;;-1:-1:-1;;694:10:4;;;;;;;;;;;;-1:-1:-1;;;694:10:4;;;;;;673:38;725:2;716:6;747:50;754:6;;747:50;;770:5;;788:2;783:7;;;;747:50;;;802:17;832:3;822:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;822:14:4;87:34:-1;135:17;;-1:-1;822:14:4;-1:-1:-1;802:34:4;-1:-1:-1;;;851:7:4;;864:81;871:6;;864:81;;919:2;915:1;:6;910:2;:11;899:24;;887:4;892:3;;;;;;;887:9;;;;;;;;;;;:36;-1:-1:-1;;;;;887:36:4;;;;;;;;-1:-1:-1;936:2:4;931:7;;;;864:81;;;-1:-1:-1;964:4:4;484:490;-1:-1:-1;;;;;484:490:4:o;247:233::-;385:33;459:2;463;467;471;442:32;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;442:32:4;;;;;;;;;;-1:-1:-1;442:32:4;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;442:32:4;;;;;;;;;;-1:-1:-1;442:32:4;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;442:32:4;;;;;;;;;;-1:-1:-1;442:32:4;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;442:32:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;442:32:4;;;428:47;;247:233;;;;;;:::o;1350:421:12:-;1455:11;;1452:315;;-1:-1:-1;;;;;1479:27:12;;1476:285;;1609:40;-1:-1:-1;;;;;1609:31:12;;1641:7;1609:40;:31;:40;:::i;:::-;1476:285;;;1696:13;1720:32;-1:-1:-1;;;;;1720:18:12;;1739:3;1744:7;1720:32;:18;:32;:::i;2159:459:38:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:38;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:134;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2666:1095:45:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:45;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:45;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:45;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:45;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:45;3659:85;;;;-1:-1:-1;;;3659:85:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2645:365:49;2759:6;2734:21;:31;;2726:73;;;;;-1:-1:-1;;;2726:73:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:32;;2865:12;;-1:-1:-1;;;;;2883:14:49;;;2904:6;;2865:12;2883:32;2865:12;2883:32;2904:6;2883:14;:32;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2864:51:49;;;2933:7;2925:78;;;;-1:-1:-1;;;2925:78:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:174:45;770:58;;;-1:-1:-1;;;;;770:58:45;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:45;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:45;;763:5;;744:18;:85::i;1732:187:38:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:38;;;1732:187::o;1055:1445:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1055:1445:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1055:1445:1;;;-1:-1:-1;1055:1445:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.17;\n\n\nimport './interfaces/IPublicLock.sol';\nimport '@openzeppelin/upgrades/contracts/Initializable.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol';\nimport './mixins/MixinApproval.sol';\nimport './mixins/MixinDisable.sol';\nimport './mixins/MixinERC721Enumerable.sol';\nimport './mixins/MixinFunds.sol';\nimport './mixins/MixinGrantKeys.sol';\nimport './mixins/MixinKeys.sol';\nimport './mixins/MixinLockCore.sol';\nimport './mixins/MixinLockMetadata.sol';\nimport './mixins/MixinPurchase.sol';\nimport './mixins/MixinRefunds.sol';\nimport './mixins/MixinTransfer.sol';\nimport './mixins/MixinSignatures.sol';\nimport './mixins/MixinLockManagerRole.sol';\nimport './mixins/MixinKeyGranterRole.sol';\n\n\n/**\n * @title The Lock contract\n * @author Julien Genestoux (unlock-protocol.com)\n * @dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\n * Every ERC-721 compliant contract must implement the ERC165 interface.\n * https://eips.ethereum.org/EIPS/eip-721\n */\ncontract PublicLock is\n  IPublicLock,\n  Initializable,\n  ERC165,\n  MixinLockManagerRole,\n  MixinKeyGranterRole,\n  MixinSignatures,\n  MixinFunds,\n  MixinDisable,\n  MixinLockCore,\n  MixinKeys,\n  MixinLockMetadata,\n  MixinERC721Enumerable,\n  MixinGrantKeys,\n  MixinPurchase,\n  MixinApproval,\n  MixinTransfer,\n  MixinRefunds\n{\n  function initialize(\n    address _lockCreator,\n    uint _expirationDuration,\n    address _tokenAddress,\n    uint _keyPrice,\n    uint _maxNumberOfKeys,\n    string memory _lockName\n  ) public\n    initializer()\n  {\n    MixinFunds._initializeMixinFunds(_tokenAddress);\n    MixinDisable._initializeMixinDisable();\n    MixinLockCore._initializeMixinLockCore(_lockCreator, _expirationDuration, _keyPrice, _maxNumberOfKeys);\n    MixinLockMetadata._initializeMixinLockMetadata(_lockName);\n    MixinERC721Enumerable._initializeMixinERC721Enumerable();\n    MixinRefunds._initializeMixinRefunds();\n    MixinLockManagerRole._initializeMixinLockManagerRole(_lockCreator);\n    MixinKeyGranterRole._initializeMixinKeyGranterRole(_lockCreator);\n    // registering the interface for erc721 with ERC165.sol using\n    // the ID specified in the standard: https://eips.ethereum.org/EIPS/eip-721\n    _registerInterface(0x80ac58cd);\n  }\n\n  /**\n   * @notice Allow the contract to accept tips in ETH sent directly to the contract.\n   * @dev This is okay to use even if the lock is priced in ERC-20 tokens\n   */\n  function() external payable {}\n}\n",
  "sourcePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
  "ast": {
    "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
    "exportedSymbols": {
      "PublicLock": [184]
    },
    "id": 185,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": ["solidity", "0.5", ".17"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol",
        "file": "./interfaces/IPublicLock.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1287,
        "src": "26:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 7135,
        "src": "65:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 5473,
        "src": "126:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol",
        "file": "./mixins/MixinApproval.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1698,
        "src": "212:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisable.sol",
        "file": "./mixins/MixinDisable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1743,
        "src": "249:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol",
        "file": "./mixins/MixinERC721Enumerable.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1804,
        "src": "285:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol",
        "file": "./mixins/MixinFunds.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1918,
        "src": "330:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol",
        "file": "./mixins/MixinGrantKeys.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2045,
        "src": "364:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol",
        "file": "./mixins/MixinKeys.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2697,
        "src": "402:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol",
        "file": "./mixins/MixinLockCore.sol",
        "id": 68,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3045,
        "src": "435:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol",
        "file": "./mixins/MixinLockMetadata.sol",
        "id": 69,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3303,
        "src": "472:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol",
        "file": "./mixins/MixinPurchase.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3647,
        "src": "513:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol",
        "file": "./mixins/MixinRefunds.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3989,
        "src": "550:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol",
        "file": "./mixins/MixinTransfer.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 4605,
        "src": "586:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol",
        "file": "./mixins/MixinSignatures.sol",
        "id": 73,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 4073,
        "src": "623:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol",
        "file": "./mixins/MixinLockManagerRole.sol",
        "id": 74,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3139,
        "src": "662:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeyGranterRole.sol",
        "file": "./mixins/MixinKeyGranterRole.sol",
        "id": 75,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2149,
        "src": "706:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 76,
              "name": "IPublicLock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1286,
              "src": "1080:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPublicLock_$1286",
                "typeString": "contract IPublicLock"
              }
            },
            "id": 77,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7134,
              "src": "1095:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7134",
                "typeString": "contract Initializable"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "1095:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5472,
              "src": "1112:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$5472",
                "typeString": "contract ERC165"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "1112:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 82,
              "name": "MixinLockManagerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3138,
              "src": "1122:20:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockManagerRole_$3138",
                "typeString": "contract MixinLockManagerRole"
              }
            },
            "id": 83,
            "nodeType": "InheritanceSpecifier",
            "src": "1122:20:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 84,
              "name": "MixinKeyGranterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2148,
              "src": "1146:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeyGranterRole_$2148",
                "typeString": "contract MixinKeyGranterRole"
              }
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "1146:19:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 86,
              "name": "MixinSignatures",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4072,
              "src": "1169:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinSignatures_$4072",
                "typeString": "contract MixinSignatures"
              }
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "1169:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 88,
              "name": "MixinFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1917,
              "src": "1188:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinFunds_$1917",
                "typeString": "contract MixinFunds"
              }
            },
            "id": 89,
            "nodeType": "InheritanceSpecifier",
            "src": "1188:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 90,
              "name": "MixinDisable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1742,
              "src": "1202:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinDisable_$1742",
                "typeString": "contract MixinDisable"
              }
            },
            "id": 91,
            "nodeType": "InheritanceSpecifier",
            "src": "1202:12:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 92,
              "name": "MixinLockCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3044,
              "src": "1218:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockCore_$3044",
                "typeString": "contract MixinLockCore"
              }
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 94,
              "name": "MixinKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2696,
              "src": "1235:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeys_$2696",
                "typeString": "contract MixinKeys"
              }
            },
            "id": 95,
            "nodeType": "InheritanceSpecifier",
            "src": "1235:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "MixinLockMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3302,
              "src": "1248:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockMetadata_$3302",
                "typeString": "contract MixinLockMetadata"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "1248:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "MixinERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1803,
              "src": "1269:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinERC721Enumerable_$1803",
                "typeString": "contract MixinERC721Enumerable"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1269:21:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MixinGrantKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2044,
              "src": "1294:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinGrantKeys_$2044",
                "typeString": "contract MixinGrantKeys"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "1294:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 102,
              "name": "MixinPurchase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3646,
              "src": "1312:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinPurchase_$3646",
                "typeString": "contract MixinPurchase"
              }
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "1312:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 104,
              "name": "MixinApproval",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1697,
              "src": "1329:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinApproval_$1697",
                "typeString": "contract MixinApproval"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "1329:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 106,
              "name": "MixinTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4604,
              "src": "1346:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinTransfer_$4604",
                "typeString": "contract MixinTransfer"
              }
            },
            "id": 107,
            "nodeType": "InheritanceSpecifier",
            "src": "1346:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 108,
              "name": "MixinRefunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3988,
              "src": "1363:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinRefunds_$3988",
                "typeString": "contract MixinRefunds"
              }
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "1363:12:1"
          }
        ],
        "contractDependencies": [
          1286,
          1697,
          1742,
          1803,
          1917,
          2044,
          2148,
          2696,
          3044,
          3138,
          3302,
          3646,
          3988,
          4072,
          4604,
          5472,
          5482,
          6944,
          6974,
          7134
        ],
        "contractKind": "contract",
        "documentation": "@title The Lock contract\n@author Julien Genestoux (unlock-protocol.com)\n@dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\nEvery ERC-721 compliant contract must implement the ERC165 interface.\nhttps://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184,
          3988,
          4604,
          1697,
          3646,
          2044,
          1803,
          3302,
          2696,
          3044,
          1742,
          1917,
          4072,
          2148,
          3138,
          5472,
          6974,
          6944,
          5482,
          7134,
          1286
        ],
        "name": "PublicLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1590:703:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1629:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "MixinFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1917,
                        "src": "1596:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinFunds_$1917_$",
                          "typeString": "type(contract MixinFunds)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1843,
                      "src": "1596:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "MixinDisable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "1649:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinDisable_$1742_$",
                          "typeString": "type(contract MixinDisable)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinDisable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "1649:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1732:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "_expirationDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1746:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "_keyPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1767:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "_maxNumberOfKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1778:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "MixinLockCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3044,
                        "src": "1693:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockCore_$3044_$",
                          "typeString": "type(contract MixinLockCore)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2834,
                      "src": "1693:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:102:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_lockName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1848:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "MixinLockMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "1801:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockMetadata_$3302_$",
                          "typeString": "type(contract MixinLockMetadata)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3194,
                      "src": "1801:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "MixinERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "1864:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinERC721Enumerable_$1803_$",
                          "typeString": "type(contract MixinERC721Enumerable)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinERC721Enumerable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1764,
                      "src": "1864:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "MixinRefunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3988,
                        "src": "1926:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinRefunds_$3988_$",
                          "typeString": "type(contract MixinRefunds)"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3703,
                      "src": "1926:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2023:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "MixinLockManagerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1970:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockManagerRole_$3138_$",
                          "typeString": "type(contract MixinLockManagerRole)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockManagerRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3078,
                      "src": "1970:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2093:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "MixinKeyGranterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "2042:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinKeyGranterRole_$2148_$",
                          "typeString": "type(contract MixinKeyGranterRole)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinKeyGranterRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2081,
                      "src": "2042:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783830616335386364",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2277:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        },
                        "value": "0x80ac58cd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        }
                      ],
                      "id": 174,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5467,
                      "src": "2258:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7109,
                  "src": "1574:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1574:13:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_lockCreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1405:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_expirationDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1431:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1461:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_keyPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1488:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_maxNumberOfKeys",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1508:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_lockName",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1535:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1399:163:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:0:1"
            },
            "scope": 184,
            "src": "1380:913:1",
            "stateMutability": "nonpayable",
            "superFunction": 828,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2496:2:1",
              "statements": []
            },
            "documentation": "@notice Allow the contract to accept tips in ETH sent directly to the contract.\n@dev This is okay to use even if the lock is priced in ERC-20 tokens",
            "id": 183,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2476:2:1"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2496:0:1"
            },
            "scope": 184,
            "src": "2468:30:1",
            "stateMutability": "payable",
            "superFunction": 831,
            "visibility": "external"
          }
        ],
        "scope": 185,
        "src": "1055:1445:1"
      }
    ],
    "src": "0:2501:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
    "exportedSymbols": {
      "PublicLock": [184]
    },
    "id": 185,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": ["solidity", "0.5", ".17"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol",
        "file": "./interfaces/IPublicLock.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1287,
        "src": "26:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 7135,
        "src": "65:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 5473,
        "src": "126:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol",
        "file": "./mixins/MixinApproval.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1698,
        "src": "212:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisable.sol",
        "file": "./mixins/MixinDisable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1743,
        "src": "249:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol",
        "file": "./mixins/MixinERC721Enumerable.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1804,
        "src": "285:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol",
        "file": "./mixins/MixinFunds.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1918,
        "src": "330:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol",
        "file": "./mixins/MixinGrantKeys.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2045,
        "src": "364:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol",
        "file": "./mixins/MixinKeys.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2697,
        "src": "402:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol",
        "file": "./mixins/MixinLockCore.sol",
        "id": 68,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3045,
        "src": "435:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol",
        "file": "./mixins/MixinLockMetadata.sol",
        "id": 69,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3303,
        "src": "472:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol",
        "file": "./mixins/MixinPurchase.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3647,
        "src": "513:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol",
        "file": "./mixins/MixinRefunds.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3989,
        "src": "550:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol",
        "file": "./mixins/MixinTransfer.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 4605,
        "src": "586:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol",
        "file": "./mixins/MixinSignatures.sol",
        "id": 73,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 4073,
        "src": "623:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol",
        "file": "./mixins/MixinLockManagerRole.sol",
        "id": 74,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 3139,
        "src": "662:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeyGranterRole.sol",
        "file": "./mixins/MixinKeyGranterRole.sol",
        "id": 75,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 2149,
        "src": "706:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 76,
              "name": "IPublicLock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1286,
              "src": "1080:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPublicLock_$1286",
                "typeString": "contract IPublicLock"
              }
            },
            "id": 77,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7134,
              "src": "1095:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7134",
                "typeString": "contract Initializable"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "1095:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5472,
              "src": "1112:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$5472",
                "typeString": "contract ERC165"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "1112:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 82,
              "name": "MixinLockManagerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3138,
              "src": "1122:20:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockManagerRole_$3138",
                "typeString": "contract MixinLockManagerRole"
              }
            },
            "id": 83,
            "nodeType": "InheritanceSpecifier",
            "src": "1122:20:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 84,
              "name": "MixinKeyGranterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2148,
              "src": "1146:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeyGranterRole_$2148",
                "typeString": "contract MixinKeyGranterRole"
              }
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "1146:19:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 86,
              "name": "MixinSignatures",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4072,
              "src": "1169:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinSignatures_$4072",
                "typeString": "contract MixinSignatures"
              }
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "1169:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 88,
              "name": "MixinFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1917,
              "src": "1188:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinFunds_$1917",
                "typeString": "contract MixinFunds"
              }
            },
            "id": 89,
            "nodeType": "InheritanceSpecifier",
            "src": "1188:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 90,
              "name": "MixinDisable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1742,
              "src": "1202:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinDisable_$1742",
                "typeString": "contract MixinDisable"
              }
            },
            "id": 91,
            "nodeType": "InheritanceSpecifier",
            "src": "1202:12:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 92,
              "name": "MixinLockCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3044,
              "src": "1218:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockCore_$3044",
                "typeString": "contract MixinLockCore"
              }
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 94,
              "name": "MixinKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2696,
              "src": "1235:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeys_$2696",
                "typeString": "contract MixinKeys"
              }
            },
            "id": 95,
            "nodeType": "InheritanceSpecifier",
            "src": "1235:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "MixinLockMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3302,
              "src": "1248:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockMetadata_$3302",
                "typeString": "contract MixinLockMetadata"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "1248:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "MixinERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1803,
              "src": "1269:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinERC721Enumerable_$1803",
                "typeString": "contract MixinERC721Enumerable"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1269:21:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MixinGrantKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2044,
              "src": "1294:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinGrantKeys_$2044",
                "typeString": "contract MixinGrantKeys"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "1294:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 102,
              "name": "MixinPurchase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3646,
              "src": "1312:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinPurchase_$3646",
                "typeString": "contract MixinPurchase"
              }
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "1312:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 104,
              "name": "MixinApproval",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1697,
              "src": "1329:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinApproval_$1697",
                "typeString": "contract MixinApproval"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "1329:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 106,
              "name": "MixinTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4604,
              "src": "1346:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinTransfer_$4604",
                "typeString": "contract MixinTransfer"
              }
            },
            "id": 107,
            "nodeType": "InheritanceSpecifier",
            "src": "1346:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 108,
              "name": "MixinRefunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3988,
              "src": "1363:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinRefunds_$3988",
                "typeString": "contract MixinRefunds"
              }
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "1363:12:1"
          }
        ],
        "contractDependencies": [
          1286,
          1697,
          1742,
          1803,
          1917,
          2044,
          2148,
          2696,
          3044,
          3138,
          3302,
          3646,
          3988,
          4072,
          4604,
          5472,
          5482,
          6944,
          6974,
          7134
        ],
        "contractKind": "contract",
        "documentation": "@title The Lock contract\n@author Julien Genestoux (unlock-protocol.com)\n@dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\nEvery ERC-721 compliant contract must implement the ERC165 interface.\nhttps://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184,
          3988,
          4604,
          1697,
          3646,
          2044,
          1803,
          3302,
          2696,
          3044,
          1742,
          1917,
          4072,
          2148,
          3138,
          5472,
          6974,
          6944,
          5482,
          7134,
          1286
        ],
        "name": "PublicLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1590:703:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1629:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "MixinFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1917,
                        "src": "1596:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinFunds_$1917_$",
                          "typeString": "type(contract MixinFunds)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1843,
                      "src": "1596:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "MixinDisable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "1649:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinDisable_$1742_$",
                          "typeString": "type(contract MixinDisable)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinDisable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "1649:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1732:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "_expirationDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1746:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "_keyPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1767:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "_maxNumberOfKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1778:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "MixinLockCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3044,
                        "src": "1693:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockCore_$3044_$",
                          "typeString": "type(contract MixinLockCore)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2834,
                      "src": "1693:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:102:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_lockName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1848:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "MixinLockMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "1801:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockMetadata_$3302_$",
                          "typeString": "type(contract MixinLockMetadata)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3194,
                      "src": "1801:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "MixinERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "1864:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinERC721Enumerable_$1803_$",
                          "typeString": "type(contract MixinERC721Enumerable)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinERC721Enumerable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1764,
                      "src": "1864:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "MixinRefunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3988,
                        "src": "1926:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinRefunds_$3988_$",
                          "typeString": "type(contract MixinRefunds)"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3703,
                      "src": "1926:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2023:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "MixinLockManagerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1970:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockManagerRole_$3138_$",
                          "typeString": "type(contract MixinLockManagerRole)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockManagerRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3078,
                      "src": "1970:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_lockCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2093:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "MixinKeyGranterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "2042:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinKeyGranterRole_$2148_$",
                          "typeString": "type(contract MixinKeyGranterRole)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinKeyGranterRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2081,
                      "src": "2042:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783830616335386364",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2277:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        },
                        "value": "0x80ac58cd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        }
                      ],
                      "id": 174,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5467,
                      "src": "2258:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7109,
                  "src": "1574:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1574:13:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_lockCreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1405:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_expirationDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1431:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1461:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_keyPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1488:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_maxNumberOfKeys",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1508:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_lockName",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1535:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1399:163:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:0:1"
            },
            "scope": 184,
            "src": "1380:913:1",
            "stateMutability": "nonpayable",
            "superFunction": 828,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2496:2:1",
              "statements": []
            },
            "documentation": "@notice Allow the contract to accept tips in ETH sent directly to the contract.\n@dev This is okay to use even if the lock is priced in ERC-20 tokens",
            "id": 183,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2476:2:1"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2496:0:1"
            },
            "scope": 184,
            "src": "2468:30:1",
            "stateMutability": "payable",
            "superFunction": 831,
            "visibility": "external"
          }
        ],
        "scope": 185,
        "src": "1055:1445:1"
      }
    ],
    "src": "0:2501:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-25T02:32:42.552Z",
  "devdoc": {
    "author": "Julien Genestoux (unlock-protocol.com)",
    "details": "ERC165 allows our contract to be queried to determine whether it implements a given interface. Every ERC-721 compliant contract must implement the ERC165 interface. https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "balanceOf(address)": {
        "return": "The number of NFTs owned by `_keyOwner`, either 0 or 1."
      },
      "cancelAndRefund(uint256)": {
        "details": "Destroys the key and sends a refund based on the amount of time remaining.",
        "params": {
          "_tokenId": "The id of the key to cancel."
        }
      },
      "cancelAndRefundFor(address,uint8,bytes32,bytes32,uint256)": {
        "details": "Cancels a key managed by a different user and sends the funds to the msg.sender.",
        "params": {
          "_keyManager": "the key managed by this user will be canceled",
          "_tokenId": "The key to cancel",
          "_v": "_r _s getCancelAndRefundApprovalHash signed by the _keyOwner"
        }
      },
      "disableLock()": {
        "details": "Used to disable lock before migrating keys and/or destroying contract"
      },
      "expireAndRefundFor(address,uint256)": {
        "details": "Invoked by the lock owner to destroy the user's ket and perform a refund and cancellation of the key"
      },
      "getApproved(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The NFT to find the approved address for"
        },
        "return": "The approved address for this NFT, or the zero address if there is none"
      },
      "getCancelAndRefundApprovalHash(address,address)": {
        "details": "this can be computed in JS instead of read from the contract.",
        "params": {
          "_keyManager": "The key manager's address (also the message signer)",
          "_txSender": "The address cancelling cancel on behalf of the keyOwner"
        },
        "return": "approvalHash The hash to sign"
      },
      "getCancelAndRefundValueFor(address)": {
        "details": "Determines how much of a refund a key owner would receive if they issued a cancelAndRefund block.timestamp. Note that due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call."
      },
      "getOwnersByPage(uint256,uint256)": {
        "params": {
          "_page": "the page of key owners requested when faceted by page size",
          "_pageSize": "the number of Key Owners requested per page"
        }
      },
      "getTokenIdFor(address)": {
        "return": "The tokenId of the NFT, else returns 0"
      },
      "getTransferFee(address,uint256)": {
        "params": {
          "_keyOwner": "The owner of the key check the transfer fee for."
        }
      },
      "invalidateOffchainApproval(uint256)": {
        "details": "This can be used to invalidate a previously signed message."
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given keyManager",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "keyExpirationTimestampFor(address)": {
        "details": "Returns the key's ExpirationTimestamp field for a given owner.Returns 0 if the owner has never owned a key for this lock",
        "params": {
          "_keyOwner": "address of the user for whom we search the key"
        }
      },
      "purchase(uint256,address,address,bytes)": {
        "details": "Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).",
        "params": {
          "_data": "arbitrary data populated by the front-end which initiated the sale",
          "_recipient": "address of the recipient of the purchased key",
          "_referrer": "address of the user making the referral",
          "_value": "the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)"
        }
      },
      "purchasePriceFor(address,address,bytes)": {
        "details": "minKeyPrice considers any discount from Unlock or the OnKeyPurchase hook"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "This works identically to the other function with an extra data parameter, except this function just sets data to ''",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "setKeyManagerOf(uint256,address)": {
        "params": {
          "_keyManager": "The address with the manager's rights for the given key. Setting _keyManager to address(0) means the keyOwner is also the keyManager",
          "_tokenId": "The id of the key to assign rights for"
        }
      },
      "shareKey(address,uint256,uint256)": {
        "params": {
          "_timeShared": "The amount of time shared",
          "_to": "The recipient of the shared key",
          "_tokenId": "the key to share"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token name"
      },
      "tokenByIndex(uint256)": {
        "details": "Throws if `_index` >= `totalSupply()`.",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "return": "The token identifier for the `_index`th NFT,  (sort order not specified)"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Throws if `_index` >= `balanceOf(_keyOwner)` or if  `_keyOwner` is the zero address, representing invalid NFTs.",
        "params": {
          "_index": "A counter less than `balanceOf(_keyOwner)`",
          "_keyOwner": "An address where we are interested in NFTs owned by them"
        },
        "return": "The token identifier for the `_index`th NFT assigned to `_keyOwner`,   (sort order not specified)"
      },
      "tokenURI(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \"ERC721 Metadata JSON Schema\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md"
      },
      "withdraw(address,uint256)": {
        "details": "Called by owner to withdraw all funds from the lock and send them to the `beneficiary`.",
        "params": {
          "_amount": "specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.   * TODO: consider allowing anybody to trigger this as long as it goes to owner anyway? -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases.",
          "_tokenAddress": "specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds."
        }
      }
    },
    "title": "The Lock contract"
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "This approves _approved to get ownership of _tokenId. Note: that since this is used for both purchase and transfer approvals the approved token may not exist."
      },
      "balanceOf(address)": {
        "notice": "In the specific case of a Lock, each owner can own only at most 1 key."
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single NFT"
      },
      "getBalance(address,address)": {
        "notice": "Gets the current balance of the account provided."
      },
      "getCancelAndRefundApprovalHash(address,address)": {
        "notice": "returns the hash to sign in order to allow another user to cancel on your behalf."
      },
      "getHasValidKey(address)": {
        "notice": "Checks if the user has a non-expired key."
      },
      "getOwnersByPage(uint256,uint256)": {
        "notice": "A function which returns a subset of the keys for this Lock as an array"
      },
      "getTokenIdFor(address)": {
        "notice": "Find the tokenId for a given user"
      },
      "getTransferFee(address,uint256)": {
        "notice": "Determines how much of a fee a key owner would need to pay in order to transfer the key to another account.  This is pro-rated so the fee goes down overtime."
      },
      "grantKeys(address[],uint256[],address[])": {
        "notice": "Allows the Lock owner to give a collection of users a key with no charge. Each key may be assigned a different expiration date."
      },
      "invalidateOffchainApproval(uint256)": {
        "notice": "Sets the minimum nonce for a valid off-chain approval message from the senders account."
      },
      "isKeyOwner(uint256,address)": {
        "notice": "Checks if the given address owns the given tokenId."
      },
      "numberOfOwners()": {
        "notice": "Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply."
      },
      "purchasePriceFor(address,address,bytes)": {
        "notice": "returns the minimum price paid for a purchase with these params."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an NFT from one address to another address. When transfer is complete, this functions checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`."
      },
      "setBaseTokenURI(string)": {
        "notice": "Allows the Lock owner to update the baseTokenURI for this Lock."
      },
      "setEventHooks(address,address)": {
        "notice": "Allows a lock manager to add or remove an event hook"
      },
      "setKeyManagerOf(uint256,address)": {
        "notice": "Update transfer and cancel rights for a given key"
      },
      "shareKey(address,uint256,uint256)": {
        "notice": "Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key)."
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid NFTs"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "notice": "Enumerate NFTs assigned to an owner"
      },
      "tokenURI(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
      },
      "updateBeneficiary(address)": {
        "notice": "A function which lets the owner of the lock update the beneficiary account, which receives funds on withdrawal."
      },
      "updateKeyPricing(uint256,address)": {
        "notice": "A function which lets the owner of the lock change the pricing for future purchases. This consists of 2 parts: The token address and the price in the given token. In order to set the token to ETH, use 0 for the token Address."
      },
      "updateLockName(string)": {
        "notice": "Allows the Lock owner to assign a descriptive name for this Lock."
      },
      "updateLockSymbol(string)": {
        "notice": "Allows the Lock owner to assign a Symbol for this Lock."
      },
      "updateRefundPenalty(uint256,uint256)": {
        "notice": "Allow the owner to change the refund penalty."
      },
      "updateTransferFee(uint256)": {
        "notice": "Allow the Lock owner to change the transfer fee."
      }
    }
  }
}
