{
  "manifestVersion": "3.2",
  "impls": {
    "1c787d15bfcc8f151c3ca1db0d4a919f7d282e76566f669fa0d4f1098b1e8a36": {
      "address": "0x5ACe3dc6d531d71c693A56510cC7491f48b1c4E4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol"
          },
          {
            "contract": "Unlock",
            "label": "grossNetworkProduct",
            "type": "t_uint256",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "totalDiscountGranted",
            "type": "t_uint256",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "locks",
            "type": "t_mapping(unknown,t_struct(LockBalances)4_storage)",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "globalBaseTokenURI",
            "type": "t_string",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "globalTokenSymbol",
            "type": "t_string",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "publicLockAddress",
            "type": "t_address",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "uniswapOracles",
            "type": "t_mapping(unknown,t_address)",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "udt",
            "type": "t_address",
            "src": "contracts/Unlock.sol"
          },
          {
            "contract": "Unlock",
            "label": "estimatedGasForPurchase",
            "type": "t_uint256",
            "src": "contracts/Unlock.sol"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(LockBalances)4_storage": {
            "label": "LockBalances",
            "members": [
              {
                "label": "deployed",
                "type": "t_bool"
              },
              {
                "label": "totalSales",
                "type": "t_uint256"
              },
              {
                "label": "yieldedDiscountTokens",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(unknown,t_struct(LockBalances)4_storage)": {
            "label": "LockBalances)"
          },
          "t_string": {
            "label": "string"
          },
          "t_mapping(unknown,t_address)": {
            "label": "mapping(key => address)"
          }
        }
      }
    },
    "3b4ab364958e28492a91a277daaf61cb1cff2a34f93b92e94b238e22e3d18fdd": {
      "address": "0x433f12b9713B012D63D6e60ABf16D64B63BE207b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)4_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_name",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_symbol",
            "type": "t_string",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          },
          {
            "contract": "ERC20Detailed",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(unknown,t_uint256)": {
            "label": "mapping(key => uint256)"
          },
          "t_struct(Role)4_storage": {
            "label": "Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(unknown,t_bool)"
              }
            ]
          },
          "t_mapping(unknown,t_bool)": {
            "label": "mapping(key => bool)"
          },
          "t_string": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  },
  "proxies": [
    {
      "address": "0x3d5409cce1d45233de1d4ebdee74b8e004abdd13",
      "kind": "transparent"
    },
    {
      "address": "0x90DE74265a416e1393A450752175AED98fe11517",
      "kind": "transparent"
    }
  ],
  "admin": {
    "address": "0x79918A4389A437906538E0bbf39918BfA4F7690e"
  }
}