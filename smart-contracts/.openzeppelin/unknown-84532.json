{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xaB82D702A4e0cD165072C005dc504A21c019718F",
      "txHash": "0x3f5c590cda067321315070b59c3f2db842d7db1e20e3dd5d78edd84b4f87cb66",
      "kind": "transparent"
    },
    {
      "address": "0xc9F29DdBD4D828cFb2EB491E9d48013a9c0E3C89",
      "txHash": "0x0e7f60f86a244b68101267d606354816b5fb42f871f640c207f609c4b8740d82",
      "kind": "transparent"
    },
    {
      "address": "0x508619074f542b6544c5835f260CC704E988cf65",
      "txHash": "0x4d1f53e3bc4cfea7eeabda473127e0e07ba62250f5c72c5298601df6e2cf9d18",
      "kind": "transparent"
    },
    {
      "address": "0x5814B64C69ae89f152859d20f53B240df1AC5066",
      "txHash": "0x5d27e6ff2351313b102fa66dcda3338f827de1f9ba8e2ee66741bf9f4d469977",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9159aad5235aa184b4fa7d22c825fc4aeba2071979e08ff03469de7d82b3f715": {
      "address": "0x44a21fD7A533aEB88366134Ce0590Dd5Cc51EAa0",
      "txHash": "0xa84b1687bdbc6bfac23bdb8987ac8bb6a5e33f886ee52470704e6961825098b7",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "up",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2881",
            "contract": "UPSwap",
            "src": "contracts/tokens/UP/UPSwap.sol:13"
          },
          {
            "label": "udt",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2881",
            "contract": "UPSwap",
            "src": "contracts/tokens/UP/UPSwap.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)182_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2881": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable5/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b074cf9875e958249d89ac568f757b8035cd76c06d2a8ec14f1dd36fd9cb74f4": {
      "address": "0x5c67AD0CAfe61aF3706347aBc695D7ACcb38EFb3",
      "txHash": "0x1520caf512deb6049069cfb23849a1ca3ada57f75aa8b06a9d40e5a49ec00f69",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)1168_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace208)1163_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)1168_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)493_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)262_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)182_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)445_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)1163_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)1168_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VotesStorage)102_storage": {
            "label": "struct VotesUpgradeable.VotesStorage",
            "members": [
              {
                "label": "_delegatee",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_delegateCheckpoints",
                "type": "t_mapping(t_address,t_struct(Trace208)1163_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalCheckpoints",
                "type": "t_struct(Trace208)1163_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable5/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin/contracts-upgradeable5/governance/utils/VotesUpgradeable.sol:41",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)1163_storage)",
              "src": "@openzeppelin/contracts-upgradeable5/governance/utils/VotesUpgradeable.sol:43",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)1163_storage",
              "src": "@openzeppelin/contracts-upgradeable5/governance/utils/VotesUpgradeable.sol:45",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable5/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable5/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable5/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable5/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3c880d283348eee85f19cddd5d7951141df60ad18347ba1d472a65bb2e0d794b": {
      "address": "0x04664b4290fa1F4001ED25d9576f7C2d980aC64d",
      "txHash": "0x9f2c51cff28e531eaecd3c33c9556838754aa847992e7fc0c4bffc79ab8e5dad",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_timestamps",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:33"
          },
          {
            "label": "_minDelay",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:433"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d8dc3e4240430b67b991a7e2d6190433db37b8344b287e858b4e1a62cdb63732": {
      "address": "0x530Ff2dAED410cA7D70C25f18dc770f106201151",
      "txHash": "0x16946ffff3524a79b44be90487583a5b7ca0cfec663120c1a3fea595d5685b19",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)4819_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC5805)3367": {
            "label": "contract IERC5805",
            "numberOfBytes": "20"
          },
          "t_contract(TimelockControllerUpgradeable)2206": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_bytes32)": {
            "label": "mapping(uint128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)1876_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)2233_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)4924_storage": {
            "label": "struct DoubleEndedQueue.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_uint128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint208)4819_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)3002_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GovernorCountingSimpleStorage)2240_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.GovernorCountingSimpleStorage",
            "members": [
              {
                "label": "_proposalVotes",
                "type": "t_mapping(t_uint256,t_struct(ProposalVote)2233_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GovernorSettingsStorage)2289_storage": {
            "label": "struct GovernorSettingsUpgradeable.GovernorSettingsStorage",
            "members": [
              {
                "label": "_proposalThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_votingDelay",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_votingPeriod",
                "type": "t_uint32",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorStorage)1890_storage": {
            "label": "struct GovernorUpgradeable.GovernorStorage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_proposals",
                "type": "t_mapping(t_uint256,t_struct(ProposalCore)1876_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_governanceCall",
                "type": "t_struct(Bytes32Deque)4924_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GovernorTimelockControlStorage)2363_storage": {
            "label": "struct GovernorTimelockControlUpgradeable.GovernorTimelockControlStorage",
            "members": [
              {
                "label": "_timelock",
                "type": "t_contract(TimelockControllerUpgradeable)2206",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_timelockIds",
                "type": "t_mapping(t_uint256,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorVotesQuorumFractionStorage)2430_storage": {
            "label": "struct GovernorVotesQuorumFractionUpgradeable.GovernorVotesQuorumFractionStorage",
            "members": [
              {
                "label": "_quorumNumeratorHistory",
                "type": "t_struct(Trace208)4814_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GovernorVotesStorage)2490_storage": {
            "label": "struct GovernorVotesUpgradeable.GovernorVotesStorage",
            "members": [
              {
                "label": "_token",
                "type": "t_contract(IERC5805)3367",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)2643_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)2954_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)1876_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteStart",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "voteDuration",
                "type": "t_uint32",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 30,
                "slot": "0"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 31,
                "slot": "0"
              },
              {
                "label": "etaSeconds",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalVote)2233_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Trace208)4814_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)4819_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.GovernorTimelockControl": [
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelock",
              "type": "t_contract(TimelockControllerUpgradeable)2206",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorTimelockControlUpgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelockIds",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorTimelockControlUpgradeable.sol:34",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotesQuorumFraction": [
            {
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "label": "_quorumNumeratorHistory",
              "type": "t_struct(Trace208)4814_storage",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotes": [
            {
              "contract": "GovernorVotesUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC5805)3367",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorVotesUpgradeable.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorCountingSimple": [
            {
              "contract": "GovernorCountingSimpleUpgradeable",
              "label": "_proposalVotes",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)2233_storage)",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorCountingSimpleUpgradeable.sol:31",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorSettings": [
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_proposalThreshold",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorSettingsUpgradeable.sol:16",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorSettingsUpgradeable.sol:18",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingPeriod",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable5/governance/extensions/GovernorSettingsUpgradeable.sol:20",
              "offset": 6,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.Governor": [
            {
              "contract": "GovernorUpgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/governance/GovernorUpgradeable.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_proposals",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)1876_storage)",
              "src": "@openzeppelin/contracts-upgradeable5/governance/GovernorUpgradeable.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_governanceCall",
              "type": "t_struct(Bytes32Deque)4924_storage",
              "src": "@openzeppelin/contracts-upgradeable5/governance/GovernorUpgradeable.sol:60",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable5/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable5/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable5/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
