version: '3'
services:
  ganache:
    restart: always
    build:
      context: ./development
      dockerfile: ganache.dockerfile
    env_file: ../.env.dev.local
    ports:
      - 8545:8545
  jaeger:
    restart: always
    image: jaegertracing/all-in-one:1.15
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '9411:9411'
  graph-node:
    image: graphprotocol/graph-node:v0.16.1
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres:5432
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://host.docker.internal:8545'
      RUST_LOG: info
      ETHEREUM_REORG_THRESHOLD: 0
  ipfs:
    image: ipfs/go-ipfs
    ports:
      - '5001:5001'
    # volumes:
    #   - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
  locksmith-migration:
    build:
      context: ../locksmith/
      dockerfile: Dockerfile
    command: npm run db:migrate
    environment:
      NODE_ENV: production
      DB_USERNAME: graph-node
      DB_PASSWORD: let-me-in
      DB_NAME: graph-node
      DB_HOSTNAME: postgres
    depends_on:
      - postgres
  locksmith:
    build:
      context: ../locksmith/
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      NODE_ENV: production
      DB_USERNAME: graph-node
      DB_PASSWORD: let-me-in
      DB_NAME: graph-node
      DB_HOSTNAME: postgres
      WEB3_PROVIDER_HOST: 'http://ganache:8545'
      UNLOCK_CONTRACT_ADDRESS: '0x885EF47c3439ADE0CB9b33a4D3c534C99964Db93'
      PURCHASER_ADDRESS: '0xe29ec42f0b620b1c9a716f79a02e9dc5a5f5f98a'
      PURCHASER_CREDENTIALS: '0x08491b7e20566b728ce21a07c88b12ed8b785b3826df93a7baceb21ddacf8b61'
      GRAPHQL_BASE_URL: 'http://graph-node:8000/subgraphs/name/unlock-protocol/unlock'
    depends_on:
      - postgres
  subgraph_deployment:
    build:
      context: ./development
      dockerfile: subgraph.dockerfile
    command: ['node', './deploy-subgraph.js']
    depends_on:
      - graph-node
