name: Netlify Deployments

on:
  workflow_call:
    inputs:
      service:
        description: "The service/app to deploy"
        type: string
        required: true    
      target-env:
        description: "The target environment (staging/production)"
        type: string
        required: true    
      is_forked:
        description: "That PR is a fork (or not)"
        type: string
        required: false 
        default: "false"
    secrets:
      SITE_ID:
        required: true
      AUTH_TOKEN:
        required: true

jobs:
  deploy-netlify:
    name: Deploy ${{ inputs.service }} on Netlify ${{ inputs.target_env }}
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
    steps:
      - uses: actions/checkout@v2
      - name: Check for changes in ${{ inputs.service }}
        run: |
          changed=$(scripts/monorepo.sh ${{ inputs.service }} ${{ github.ref_name }})
          echo "::set-output name=changed::$changed"
        shell: bash
        id: check_changes
      - name: No changes detected (cancelling)
        if: ${{ steps.check_changes.outputs.changed != 'changed' }}
        uses: andymckay/cancel-action@0.2
      - name: Cache docker
        uses: actions/cache@v2
        if: github.event_name != 'schedule'
        env:
          cache-name: docker-cache-${{ inputs.service }}
        with:
          path: ${{ runner.temp }}/docker_cache
          key: ${{ env.cache-name }}-${{ github.run_number }}
          restore-keys: |
            ${{ env.cache-name }}-
      - name: Restore docker
        run: .github/actions/docker-cache/restore.sh ${{ runner.temp }}/docker_cache/cache.tar
      - name: "Export secrets to env"
        id: filter_secrets
        run: | 
          SERVICE_NAME="${{ matrix.service }}"
          UPCASE_SERVICE="${SERVICE_NAME^^}"
          PREFIX="${UPCASE_SERVICE//-/_}_NETLIFY_${{ inputs.target-env }}"
          echo "${PREFIX}_SITE_ID"=${{ secrets.SITE_ID }} >> $GITHUB_ENV
      - name: Deploy to Netlify
        run: |
          # show args
          echo "${{ inputs.target_env }} ${{ inputs.service }} netlify $GITHUB_SHA $GITHUB_REF_NAME ${{ inputs.is_forked  }}"
          # run command
          scripts/deploy.sh ${{ inputs.target_env }} ${{ inputs.service }} netlify "$GITHUB_SHA" "$GITHUB_REF_NAME" ${{ inputs.is_forked  }}
      - name: Backup docker
        run: .github/actions/docker-cache/backup.sh ${{ runner.temp }}/docker_cache/cache.tar
