name: Deploy Cloudflare Workers

on:
  push:
    branches:
      - master
    paths:
      - 'provider/**'
      - 'graph-service/**'
  pull_request:
    paths:
      - 'provider/**'
      - 'graph-service/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [provider, graph-service]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: cd ${{ matrix.service }} && yarn install
      - run: cd ${{ matrix.service }} && yarn test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        service: [provider, graph-service]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: cd ${{ matrix.service }} && yarn install
      - name: Set environment variables
        run: |
          if [ "${{ matrix.service }}" = "provider" ]; then
            op run --env-file=${{ matrix.service }}/.op.env -- ./${{ matrix.service }}/scripts/set-provider-urls.sh
          else
            op run --env-file=${{ matrix.service }}/.op.env -- ./${{ matrix.service }}/scripts/set-graph-urls.sh
          fi
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: cd ${{ matrix.service }} && yarn deploy
