on: [pull_request]
jobs:
  monorepo:
    name: Unlock Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
        - name: "unlock-js-tests"
          service: packages/unlock-js      
        - name: "paywall-lib-tests"
          service: packages/paywall      
        - name: "newsletter-tests"
          service: newsletter      
        - name: "smart-contracts-tests"
          service: smart-contracts      
        - name: "smart-contracts-extensions-tests"
          service: smart-contract-extensions      
        - name: "unlock-protocol-com-tests"
          service: unlock-protocol-com      
        - name: "wedlocks-tests"
          service: wedlocks      
        - name: "unlock-app-tests"
          service: unlock-app
    # outputs:
    #   changed-folders:
    #     ${{ steps.monorepo.outputs.changed }}
    steps:
      - name: Check for changes in ${{ matrix.target.service }}
        run: echo "::set-output name=${{ format('{0}_changed', matrix.target.name) }}::$(scripts/monorepo.sh ${{ matrix.target.service }} ${{ github.ref_name }})"
        shell: bash
      - name: Running ${{ matrix.target.service }} tests
        # if: ${{steps.monorepo.outputs[format('{0}_changed', matrix.target.name)]}}
        run: |
          echo ${{ steps.monorepo.outputs }} && \
          echo ${{ format('{0}_changed', matrix.target.name }}
          echo ${{steps.monorepo.outputs[format('{0}_changed', matrix.target.name) ]}}
        shell: bash
  # run-tests:
  #   name: Unlock Test Suite
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_BUILDKIT: 1
  #     BUILDKIT_PROGRESS: plain
  #     BLOCKTIME: 0
  #   steps:
  #     - run: echo 
  #     # - uses: actions/checkout@v2
  # #       with:
  # #         fetch-depth: 0
  # #     - name: Check for changes in ${{ matrix.target.service }}
  # #       run: echo "::set-output name=${{ matrix.target.name }}_changed::$(scripts/monorepo.sh ${{ matrix.target.service }} ${{ github.ref_name }})"
  # #       shell: bash
  # #     - name: Running ${{ matrix.target.service }} tests
  # #       if: ${{steps.run_tests.outputs[matrix.target.name]}}
  # #       run: scripts/tests.sh ${{ matrix.target }}
  # #       shell: bash