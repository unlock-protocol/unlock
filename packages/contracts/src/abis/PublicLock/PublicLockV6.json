{
  "contractName": "PublicLock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sendTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "CancelKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Destroy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Disable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ExpireKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "LockManagerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "LockManagerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "NewLockSymbol",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keyOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextAvailableNonce",
          "type": "uint256"
        }
      ],
      "name": "NonceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldKeyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "keyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "PricingChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "freeTrialLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundPenaltyBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "RefundPenaltyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_timeAdded",
          "type": "bool"
        }
      ],
      "name": "TimestampChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "TransferFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BASIS_POINTS_DEN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CANCEL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addLockManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cancelAndRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "cancelAndRefundFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroyLock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableLock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc1820",
      "outputs": [
        {
          "internalType": "contract IERC1820Registry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expirationDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "expireKeyFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "freeTrialLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fullRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_txSender",
          "type": "address"
        }
      ],
      "name": "getCancelAndRefundApprovalHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "approvalHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getCancelAndRefundValueFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getHasValidKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pageSize",
          "type": "uint256"
        }
      ],
      "name": "getOwnersByPage",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getTokenIdFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "getTransferFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_expirationTimestamps",
          "type": "uint256[]"
        }
      ],
      "name": "grantKeys",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextAvailableNonce",
          "type": "uint256"
        }
      ],
      "name": "invalidateOffchainApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isAlive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isKeyOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isLockManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keyCancelInterfaceId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "keyExpirationTimestampFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "keyOwnerToNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keySoldInterfaceId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxNumberOfKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberOfOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "publicLockVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "refundPenaltyBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceLockManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeShared",
          "type": "uint256"
        }
      ],
      "name": "shareKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "unlockProtocol",
      "outputs": [
        {
          "internalType": "contract IUnlock",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "updateBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "updateKeyPricing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "updateLockName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_lockSymbol",
          "type": "string"
        }
      ],
      "name": "updateLockSymbol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_freeTrialLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refundPenaltyBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateRefundPenalty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_transferFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateTransferFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sendTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"CancelKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Destroy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Disable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ExpireKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"LockManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"LockManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"NewLockSymbol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keyOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextAvailableNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldKeyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"PricingChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"freeTrialLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundPenaltyBasisPoints\",\"type\":\"uint256\"}],\"name\":\"RefundPenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_timeAdded\",\"type\":\"bool\"}],\"name\":\"TimestampChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transferFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"TransferFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BASIS_POINTS_DEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CANCEL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addLockManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAndRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"cancelAndRefundFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc1820\",\"outputs\":[{\"internalType\":\"contract IERC1820Registry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expirationDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"expireKeyFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeTrialLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fullRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_txSender\",\"type\":\"address\"}],\"name\":\"getCancelAndRefundApprovalHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"approvalHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCancelAndRefundValueFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getHasValidKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pageSize\",\"type\":\"uint256\"}],\"name\":\"getOwnersByPage\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenIdFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"getTransferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_expirationTimestamps\",\"type\":\"uint256[]\"}],\"name\":\"grantKeys\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expirationDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxNumberOfKeys\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextAvailableNonce\",\"type\":\"uint256\"}],\"name\":\"invalidateOffchainApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAlive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isKeyOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isLockManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keyCancelInterfaceId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"keyExpirationTimestampFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"keyOwnerToNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keySoldInterfaceId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxNumberOfKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicLockVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refundPenaltyBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceLockManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeShared\",\"type\":\"uint256\"}],\"name\":\"shareKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockProtocol\",\"outputs\":[{\"internalType\":\"contract IUnlock\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"updateBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"updateKeyPricing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"}],\"name\":\"updateLockName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lockSymbol\",\"type\":\"string\"}],\"name\":\"updateLockSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_freeTrialLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refundPenaltyBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateRefundPenalty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transferFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateTransferFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Julien Genestoux (unlock-protocol.com)\",\"details\":\"ERC165 allows our contract to be queried to determine whether it implements a given interface. Every ERC-721 compliant contract must implement the ERC165 interface. https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"balanceOf(address)\":{\"return\":\"The number of NFTs owned by `_owner`, either 0 or 1.\"},\"cancelAndRefund()\":{\"details\":\"Destroys the user's key and sends a refund based on the amount of time remaining.\"},\"cancelAndRefundFor(address,uint8,bytes32,bytes32)\":{\"details\":\"Cancels a key owned by a different user and sends the funds to the msg.sender.\",\"params\":{\"_keyOwner\":\"this user's key will be canceled\",\"_v\":\"_r _s getCancelAndRefundApprovalHash signed by the _keyOwner\"}},\"destroyLock()\":{\"details\":\"Used to clean up old lock contracts from the blockchain TODO: add a check to ensure all keys are INVALID!\"},\"disableLock()\":{\"details\":\"Used to disable lock before migrating keys and/or destroying contract\"},\"fullRefund(address,uint256)\":{\"details\":\"Invoked by the lock owner to destroy the user's ket and perform a refund and cancellation of the key\"},\"getCancelAndRefundApprovalHash(address,address)\":{\"details\":\"this can be computed in JS instead of read from the contract.\",\"params\":{\"_keyOwner\":\"The key owner's address (also the message signer)\",\"_txSender\":\"The address cancelling cancel on behalf of the keyOwner\"},\"return\":\"approvalHash The hash to sign\"},\"getCancelAndRefundValueFor(address)\":{\"details\":\"Determines how much of a refund a key owner would receive if they issued a cancelAndRefund block.timestamp. Note that due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call.\"},\"getOwnersByPage(uint256,uint256)\":{\"params\":{\"_page\":\"the page of key owners requested when faceted by page size\",\"_pageSize\":\"the number of Key Owners requested per page\"}},\"getTokenIdFor(address)\":{\"return\":\"The tokenId of the NFT, else revert\"},\"getTransferFee(address,uint256)\":{\"params\":{\"_owner\":\"The owner of the key check the transfer fee for.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"invalidateOffchainApproval(uint256)\":{\"details\":\"This can be used to invalidate a previously signed message.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"keyExpirationTimestampFor(address)\":{\"details\":\"Returns the key's ExpirationTimestamp field for a given owner.\",\"params\":{\"_owner\":\"address of the user for whom we search the key\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"purchase(uint256,address,address,bytes)\":{\"details\":\"Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).\",\"params\":{\"_data\":\"arbitrary data populated by the front-end which initiated the sale\",\"_recipient\":\"address of the recipient of the purchased key\",\"_referrer\":\"address of the user making the referral\",\"_value\":\"the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to ''\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_to\":\"operator address to set the approval\"}},\"shareKey(address,uint256,uint256)\":{\"params\":{\"_timeShared\":\"The amount of time shared\",\"_to\":\"The recipient of the shared key\",\"_tokenId\":\"the key to share\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token name\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"return\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"return\":\"The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)\"},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \\\"ERC721 Metadata JSON Schema\\\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"details\":\"Called by owner to withdraw all funds from the lock and send them to the `beneficiary`.\",\"params\":{\"_amount\":\"specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.   * TODO: consider allowing anybody to trigger this as long as it goes to owner anyway? -- however be wary of draining funds as it breaks the `cancelAndRefund` and `fullRefund` use cases.\",\"_tokenAddress\":\"specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds.\"}}},\"title\":\"The Lock contract\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"This approves _approved to get ownership of _tokenId. Note: that since this is used for both purchase and transfer approvals the approved token may not exist.\"},\"balanceOf(address)\":{\"notice\":\"In the specific case of a Lock, each owner can own only at most 1 key.\"},\"expireKeyFor(address)\":{\"notice\":\"A function which lets the owner of the lock expire a users' key.\"},\"getApproved(uint256)\":{\"notice\":\"Will return the approved recipient for a key, if any.\"},\"getBalance(address,address)\":{\"notice\":\"Gets the current balance of the account provided.\"},\"getCancelAndRefundApprovalHash(address,address)\":{\"notice\":\"returns the hash to sign in order to allow another user to cancel on your behalf.\"},\"getHasValidKey(address)\":{\"notice\":\"Checks if the user has a non-expired key.\"},\"getOwnersByPage(uint256,uint256)\":{\"notice\":\"A function which returns a subset of the keys for this Lock as an array\"},\"getTokenIdFor(address)\":{\"notice\":\"Find the tokenId for a given user\"},\"getTransferFee(address,uint256)\":{\"notice\":\"Determines how much of a fee a key owner would need to pay in order to transfer the key to another account.  This is pro-rated so the fee goes down overtime.\"},\"grantKeys(address[],uint256[])\":{\"notice\":\"Allows the Lock owner to give a collection of users a key with no charge. Each key may be assigned a different expiration date.\"},\"invalidateOffchainApproval(uint256)\":{\"notice\":\"Sets the minimum nonce for a valid off-chain approval message from the senders account.\"},\"isKeyOwner(uint256,address)\":{\"notice\":\"Checks if the given address owns the given tokenId.\"},\"numberOfOwners()\":{\"notice\":\"Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address. When transfer is complete, this functions checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.\"},\"setBaseTokenURI(string)\":{\"notice\":\"Allows the Lock owner to update the baseTokenURI for this Lock.\"},\"shareKey(address,uint256,uint256)\":{\"notice\":\"Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key).\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"updateBeneficiary(address)\":{\"notice\":\"A function which lets the owner of the lock update the beneficiary account, which receives funds on withdrawal.\"},\"updateKeyPricing(uint256,address)\":{\"notice\":\"A function which lets the owner of the lock change the pricing for future purchases. This consists of 2 parts: The token address and the price in the given token. In order to set the token to ETH, use 0 for the token Address.\"},\"updateLockName(string)\":{\"notice\":\"Allows the Lock owner to assign a descriptive name for this Lock.\"},\"updateLockSymbol(string)\":{\"notice\":\"Allows the Lock owner to assign a Symbol for this Lock.\"},\"updateRefundPenalty(uint256,uint256)\":{\"notice\":\"Allow the owner to change the refund penalty.\"},\"updateTransferFee(uint256)\":{\"notice\":\"Allow the Lock owner to change the transfer fee.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol\":\"PublicLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol\":{\"keccak256\":\"0x570575f2329b47a3c35f7adabf909081df8e8f030399bef1ab5ab7a6bf8e9235\",\"urls\":[\"bzz-raw://a217adc09dc5f6ca5bc653d249c82b7c86931ba43185e004bd80c0d103b91d36\",\"dweb:/ipfs/QmcFdLXBPWhDmJg2qDwU2a9RWiSNRPZur7Bbbe4XgLvi8C\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/UnlockUtils.sol\":{\"keccak256\":\"0xc5cc573decb5b79c7a0dc24be7c2649ca08c3b83286df8afcd26f2cb9118371f\",\"urls\":[\"bzz-raw://357507490ebf41a517b3ca53488d0e8a37e630ddbe5c88a12c89c913caa6350d\",\"dweb:/ipfs/Qmbkdd7XLFQUUwB3LqVgrUP3zsdQUuDtwvobVfq39mt2GS\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol\":{\"keccak256\":\"0x00121fa1a0fff6891d5607934455b88be39c3254df2dce5f0e437f02982f1b85\",\"urls\":[\"bzz-raw://effae5f6cc398c225a9f6e2fdccbbe6d4f90bbb49783129c9f46a1f6adc35295\",\"dweb:/ipfs/QmfE2UeaWHGS8fUaJq6kEqJAN24V8usqv23bJqEDAvfHRu\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IUnlock.sol\":{\"keccak256\":\"0xdcf3c3ae7fb8c15c5761c1224b8743ffc3a8d050d68d45b6ae21485f28f48362\",\"urls\":[\"bzz-raw://af123e39f1ae0992d27fd25a915ec09a86d688e590438fa76a9b8aa042c8325a\",\"dweb:/ipfs/QmSkYpu7qt2mN59bbBTrchLYVa7kJkyWi1Q6DESap6jTeZ\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IUnlockEventHooks.sol\":{\"keccak256\":\"0x759eaf4e571d25ed33786a512c3f540e02cc576979368d8dbff2f286a011c4e2\",\"urls\":[\"bzz-raw://dfdb17c9c9f2b2634dbabe6f8bafa0cbf1172e8f96db27808e91b1f61d496943\",\"dweb:/ipfs/QmW1B4JzrcKs22nmn9QGSULi2eoTSeQvqJNK4T5X8zth52\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol\":{\"keccak256\":\"0xb48e9e32200d656f13da164bab2265476e3b226b0d4f90c9b73a8aba09fb3a14\",\"urls\":[\"bzz-raw://147fb1777af62c39492e5cfee8b43e169dffe940a4dbbddae7f095081a03d107\",\"dweb:/ipfs/QmZoHEnF2YYDsp3cSyCzWogkyVrxKZRnPjNPhuUTwwzA8G\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisableAndDestroy.sol\":{\"keccak256\":\"0x22d3497eef98fda9bee42fb73e545b57a25c7af1b23d19b43a847953dad007db\",\"urls\":[\"bzz-raw://921d1d745edb7e5fcc08e126f0a6346482dc89b3be2e1c8471cd65a2c5955f6c\",\"dweb:/ipfs/QmcQWex3nD25QTuMk2Vmi21mgPo6gcgKWXebBxwS8oaopC\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol\":{\"keccak256\":\"0xfc46ca04a3ec8434cf6ac829e84f703bc55dd28d06ed05b80abc5d136e63a484\",\"urls\":[\"bzz-raw://5bb1434c5173c4664b588d0209a344e8e571e95763d9e19f69a83ef86f4633b1\",\"dweb:/ipfs/QmSAfoURVpKAZs1CGvxtkD337Jg5rngA3v1FBSxt8wFKcs\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinEventHooks.sol\":{\"keccak256\":\"0xc54b12df2b29054bbbd4b8f96c42dee095c0dc5540622141cee9c89285e83466\",\"urls\":[\"bzz-raw://aaafa778a0b8c236602fe4f7241562656b343c6b13d99758443a7f4f2b778866\",\"dweb:/ipfs/QmTknc8wrp8pk12P2bvxuTeRfF74VqmCdZVv3eckRfQADH\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol\":{\"keccak256\":\"0x81ba30a441b87621c57af3bc5659d9416065de50027ebac771d8951cf415eb82\",\"urls\":[\"bzz-raw://8a178bb8361d5feb1662fb9b97e76ae01317361d9481e22fac7401db493215e2\",\"dweb:/ipfs/QmeG62DK8MZPAcSMyatG8YBMr1zoUmDkd6ijNK6EQxpHef\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol\":{\"keccak256\":\"0xf033d20eb3c3986eaab55813b1c8d4b4f1f9459c39f36c27704d71ce877e7e7a\",\"urls\":[\"bzz-raw://d2277e3e5cab324fb7be4d839cabf5fd82ba7e4b4b25dae0ce91ef91ebc89b00\",\"dweb:/ipfs/QmTVsAUsc7PPGNKZGTBe4hrwpdpQ8bMy7Ynh8rK5sbWNcJ\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol\":{\"keccak256\":\"0x334c228ee62d1ed3fe598b78ceb764305935ab71e6810302428f521e2c366277\",\"urls\":[\"bzz-raw://2c5b19a22658a3016b5d02198fc64d004bc57b6c48991d2a0d236b8ad81910c4\",\"dweb:/ipfs/QmYmaMpSLf8uL9tpztgaiiYc9M4GZ7D6nZd2G7idvSWJYT\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol\":{\"keccak256\":\"0x3caa0953bb86cbad8df9ac099cb4c5609886cdb7651661b35890f2ab2e9aa335\",\"urls\":[\"bzz-raw://98709200cb350a8e3927a54ac8e8a922e1837d78b30e926e58c9feb69f56e2e8\",\"dweb:/ipfs/Qmd45iZGbizY1e81PKigdVFJ8bvSwjW4aY9ERuNscQwcZM\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol\":{\"keccak256\":\"0x11da1df8944fc9c9b19d6bc2b5113842445362ac67e6be61b0774ee8b4d5edc8\",\"urls\":[\"bzz-raw://181e1d7415175ac6af82f17fbe01cba76a7094271995467e0478d9e21eb612a8\",\"dweb:/ipfs/QmYmNRvyva8oqAtk8VLnMV9yVuDoV3y5Db8qMDRHEp81n2\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol\":{\"keccak256\":\"0xbcf71bb4bf75b6dce1bee3fb7918075f44b63c00bed08b927dc2a262a9084ffc\",\"urls\":[\"bzz-raw://a13514bf8b3f66e9a800318e371774601603cef7c4e3b6f9bab2fd749e53f820\",\"dweb:/ipfs/QmYNrUPnJAhjW3e6ThdmyXAC7DtCtWZbo9ZmVC1JsEp7P4\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol\":{\"keccak256\":\"0x089026a721fe03bebc8ed4018960c1dedf23fdadbbe295fc126730d05f745f55\",\"urls\":[\"bzz-raw://9999decb2ae4701cb7251a5f7d7d89887d78afc7c2faca63f6d9d30912d3c2bc\",\"dweb:/ipfs/QmVwzQzCaM72LhA96yXkoU6wec92pYmauU4o1L1vwHG6iS\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol\":{\"keccak256\":\"0x1c6099073756c23929a2797d5269f966c015ce790c8b952d8f59d874dfab0a16\",\"urls\":[\"bzz-raw://d8b52168f3a38455b94e6f9df137eb77fc06659b706792be0a6acda565f02b24\",\"dweb:/ipfs/QmZSCPeiPBA8dXr8uocg6TxFeDhwfyavvDtc5m6WpvuMhu\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol\":{\"keccak256\":\"0xef3e04411d9999661944d555fed0ff6e16e8c52bf7bd44feadf6e9afd02b5fd4\",\"urls\":[\"bzz-raw://7666f514083564594edb02a49e1f9a7e76175e64c84a4c1a758077adbab898f9\",\"dweb:/ipfs/QmchQ2NGzuarjmoYRjWLqkz9yo6rG3Gvy4vKBakVS8RA5m\"]},\"/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol\":{\"keccak256\":\"0xf553da783f28a033f68d30fe3876400900306745deb5f51e1876ee56274e1941\",\"urls\":[\"bzz-raw://b8b2433da789cc28868ab0a3c6a0192ac01dc013289a530b817e888f97ea3796\",\"dweb:/ipfs/QmauYRvqSnmpXpBbkDDnhh1zXN891ckhsKPdhTPK4UmsKk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x03c69b91f23efafb5d460b32520ac5066a084347733de3078cf2ba9b33397945\",\"urls\":[\"bzz-raw://2bed1580fb9b2ea946b2709cfccdc43aa2ed0089f61fb94201f385b297d027c2\",\"dweb:/ipfs/QmR2ogAcEAAiM5A4gHFTiQemYuZpVriei5Ud26j4YSQcfc\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x60806040526159e4806100136000396000f3fe60806040526004361061041b5760003560e01c80637c7c42531161021e578063abdf82ce11610123578063d4fac45d116100ab578063f12c6b6e1161007a578063f12c6b6e14611275578063f2fde38b146112b4578063f3fef3a3146112e7578063f7514bce14611320578063fc42b58f146113595761041b565b8063d4fac45d146111d5578063e7e2736e14611210578063e985e9c514611225578063f0ba6040146112605761041b565b8063c4d66de8116100f2578063c4d66de8146110e8578063c87b56dd1461111b578063ca51773114611145578063d1bbd49c1461118d578063d2503485146111a25761041b565b8063abdf82ce14610fba578063b3084f0814610fed578063b88d4fde14611002578063c1c98d03146110d35761041b565b8063970aaeb7116101a6578063a22cb46511610175578063a22cb46514610ee9578063a2e4cd2e14610f24578063a375cb0514610f5d578063a843a4e714610f72578063aae4b8f714610f875761041b565b8063970aaeb714610e35578063994a8a7114610e685780639d76ea5814610ea15780639f98d3cb14610eb65761041b565b80638da5cb5b116101ed5780638da5cb5b14610dcc5780638f32d59b14610de1578063936d2aa414610df657806393fd184414610e0b57806395d89b4114610e205761041b565b80637c7c425314610c875780638129fc1c14610d525780638577a6d514610d675780638d0361fc14610d915761041b565b806339f469861161032457806356e0d51f116102ac57806370a082311161027b57806370a0823114610b9a578063715018a614610bcd57806373fca6ea14610be257806374b6c10614610bf7578063782a4ade14610c0c5761041b565b806356e0d51f14610a4c5780636352211e14610a615780636d8ea5b414610a8b5780636eadde4314610abe5761041b565b80634bc5a135116102f35780634bc5a1351461092c5780634f6ccce71461095f5780634fd24d301461098957806352d6a8e41461099e578063550ef3a8146109d15761041b565b806339f46986146108165780633f33133a146108465780634136aa35146108d457806342842e0e146108e95761041b565b806311a4c03a116103a757806323b872dd1161037657806323b872dd146106e05780632f745c591461072357806330176e131461075c57806335576ad0146107d757806338af3eed146108015761041b565b806311a4c03a1461068c57806318160ddd146106a1578063183767da146106b65780632009dc65146106cb5761041b565b8063095ea7b3116103ee578063095ea7b3146105625780630aaffd2a1461059d5780630f15023b146105d057806310803b72146105e557806310e56973146106655761041b565b806301ffc9a714610420578063025e7c271461046857806306fdde03146104ae578063081812fc14610538575b600080fd5b34801561042c57600080fd5b506104546004803603602081101561044357600080fd5b50356001600160e01b031916611392565b604080519115158252519081900360200190f35b34801561047457600080fd5b506104926004803603602081101561048b57600080fd5b50356113b5565b604080516001600160a01b039092168252519081900360200190f35b3480156104ba57600080fd5b506104c36113dc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104fd5781810151838201526020016104e5565b50505050905090810190601f16801561052a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054457600080fd5b506104926004803603602081101561055b57600080fd5b503561146a565b34801561056e57600080fd5b5061059b6004803603604081101561058557600080fd5b506001600160a01b0381351690602001356114ca565b005b3480156105a957600080fd5b5061059b600480360360208110156105c057600080fd5b50356001600160a01b0316611660565b3480156105dc57600080fd5b50610492611751565b3480156105f157600080fd5b506106156004803603604081101561060857600080fd5b5080359060200135611760565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610651578181015183820152602001610639565b505050509050019250505060405180910390f35b34801561067157600080fd5b5061067a611878565b60408051918252519081900360200190f35b34801561069857600080fd5b5061067a61187e565b3480156106ad57600080fd5b5061067a611884565b3480156106c257600080fd5b5061067a61188b565b3480156106d757600080fd5b5061059b611891565b3480156106ec57600080fd5b5061059b6004803603606081101561070357600080fd5b506001600160a01b038135811691602081013590911690604001356118ab565b34801561072f57600080fd5b5061067a6004803603604081101561074657600080fd5b506001600160a01b038135169060200135611b64565b34801561076857600080fd5b5061059b6004803603602081101561077f57600080fd5b810190602081018135600160201b81111561079957600080fd5b8201836020820111156107ab57600080fd5b803590602001918460018302840111600160201b831117156107cc57600080fd5b509092509050611bc2565b3480156107e357600080fd5b5061059b600480360360208110156107fa57600080fd5b5035611c1a565b34801561080d57600080fd5b50610492611cbc565b34801561082257600080fd5b5061059b6004803603604081101561083957600080fd5b5080359060200135611ccb565b61059b6004803603608081101561085c57600080fd5b8135916001600160a01b03602082013581169260408301359091169190810190608081016060820135600160201b81111561089657600080fd5b8201836020820111156108a857600080fd5b803590602001918460018302840111600160201b831117156108c957600080fd5b509092509050611d58565b3480156108e057600080fd5b50610454612131565b3480156108f557600080fd5b5061059b6004803603606081101561090c57600080fd5b506001600160a01b03813581169160208101359091169060400135612141565b34801561093857600080fd5b5061067a6004803603602081101561094f57600080fd5b50356001600160a01b031661215c565b34801561096b57600080fd5b5061067a6004803603602081101561098257600080fd5b503561216e565b34801561099557600080fd5b5061067a6121b9565b3480156109aa57600080fd5b5061067a600480360360208110156109c157600080fd5b50356001600160a01b03166121bf565b3480156109dd57600080fd5b5061059b600480360360208110156109f457600080fd5b810190602081018135600160201b811115610a0e57600080fd5b820183602082011115610a2057600080fd5b803590602001918460018302840111600160201b83111715610a4157600080fd5b5090925090506121ca565b348015610a5857600080fd5b5061067a61221d565b348015610a6d57600080fd5b5061049260048036036020811015610a8457600080fd5b5035612223565b348015610a9757600080fd5b5061045460048036036020811015610aae57600080fd5b50356001600160a01b0316612299565b348015610aca57600080fd5b5061059b600480360360c0811015610ae157600080fd5b6001600160a01b03823581169260208101359260408201359092169160608201359160808101359181019060c0810160a0820135600160201b811115610b2657600080fd5b820183602082011115610b3857600080fd5b803590602001918460018302840111600160201b83111715610b5957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506122b9945050505050565b348015610ba657600080fd5b5061067a60048036036020811015610bbd57600080fd5b50356001600160a01b03166123b9565b348015610bd957600080fd5b5061059b612428565b348015610bee57600080fd5b5061067a6124b9565b348015610c0357600080fd5b5061067a6124d4565b348015610c1857600080fd5b5061059b60048036036020811015610c2f57600080fd5b810190602081018135600160201b811115610c4957600080fd5b820183602082011115610c5b57600080fd5b803590602001918460018302840111600160201b83111715610c7c57600080fd5b5090925090506124da565b348015610c9357600080fd5b5061059b60048036036040811015610caa57600080fd5b810190602081018135600160201b811115610cc457600080fd5b820183602082011115610cd657600080fd5b803590602001918460208302840111600160201b83111715610cf757600080fd5b919390929091602081019035600160201b811115610d1457600080fd5b820183602082011115610d2657600080fd5b803590602001918460208302840111600160201b83111715610d4757600080fd5b509092509050612592565b348015610d5e57600080fd5b5061059b612723565b348015610d7357600080fd5b5061059b60048036036020811015610d8a57600080fd5b50356127d4565b348015610d9d57600080fd5b5061067a60048036036040811015610db457600080fd5b506001600160a01b0381358116916020013516612853565b348015610dd857600080fd5b506104926128dc565b348015610ded57600080fd5b506104546128eb565b348015610e0257600080fd5b5061067a612911565b348015610e1757600080fd5b5061067a612935565b348015610e2c57600080fd5b506104c361293b565b348015610e4157600080fd5b5061067a60048036036020811015610e5857600080fd5b50356001600160a01b0316612b2a565b348015610e7457600080fd5b5061045460048036036040811015610e8b57600080fd5b50803590602001356001600160a01b0316612b94565b348015610ead57600080fd5b50610492612bb5565b348015610ec257600080fd5b5061059b60048036036020811015610ed957600080fd5b50356001600160a01b0316612bc4565b348015610ef557600080fd5b5061059b60048036036040811015610f0c57600080fd5b506001600160a01b0381351690602001351515612ca3565b348015610f3057600080fd5b5061059b60048036036040811015610f4757600080fd5b50803590602001356001600160a01b0316612dae565b348015610f6957600080fd5b5061067a612f7d565b348015610f7e57600080fd5b5061059b612f83565b348015610f9357600080fd5b5061045460048036036020811015610faa57600080fd5b50356001600160a01b0316613072565b348015610fc657600080fd5b5061067a60048036036020811015610fdd57600080fd5b50356001600160a01b0316613085565b348015610ff957600080fd5b5061067a61310a565b34801561100e57600080fd5b5061059b6004803603608081101561102557600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561105f57600080fd5b82018360208201111561107157600080fd5b803590602001918460018302840111600160201b8311171561109257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061312e945050505050565b3480156110df57600080fd5b5061059b6132e1565b3480156110f457600080fd5b5061059b6004803603602081101561110b57600080fd5b50356001600160a01b03166133b0565b34801561112757600080fd5b506104c36004803603602081101561113e57600080fd5b50356134a2565b34801561115157600080fd5b5061059b6004803603608081101561116857600080fd5b506001600160a01b038135169060ff602082013516906040810135906060013561372f565b34801561119957600080fd5b5061067a613872565b3480156111ae57600080fd5b5061059b600480360360208110156111c557600080fd5b50356001600160a01b0316613877565b3480156111e157600080fd5b5061067a600480360360408110156111f857600080fd5b506001600160a01b0381358116916020013516613906565b34801561121c57600080fd5b506104926139b0565b34801561123157600080fd5b506104546004803603604081101561124857600080fd5b506001600160a01b03813581169160200135166139c8565b34801561126c57600080fd5b5061059b6139f6565b34801561128157600080fd5b5061059b6004803603606081101561129857600080fd5b506001600160a01b038135169060208101359060400135613a34565b3480156112c057600080fd5b5061059b600480360360208110156112d757600080fd5b50356001600160a01b0316613dba565b3480156112f357600080fd5b5061059b6004803603604081101561130a57600080fd5b506001600160a01b038135169060200135613e0a565b34801561132c57600080fd5b5061059b6004803603604081101561134357600080fd5b506001600160a01b038135169060200135613f64565b34801561136557600080fd5b5061067a6004803603604081101561137c57600080fd5b506001600160a01b038135169060200135614000565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b60a481815481106113c257fe5b6000918252602090912001546001600160a01b0316905081565b60a5805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b505050505081565b600081815260a860205260408120546001600160a01b0316806114c4576040805162461bcd60e51b815260206004820152600d60248201526c1393d39157d054141493d59151609a1b604482015290519081900360640190fd5b92915050565b609a54600160a01b900460ff1661151a576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b806115258133612b94565b80611535575061153581336140a9565b8061155d5750600081815260a3602052604090205461155d906001600160a01b0316336139c8565b6115ab576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b336001600160a01b03841614156115f8576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b600082815260a86020908152604080832080546001600160a01b0319166001600160a01b0388811691821790925560a3909352818420549151869492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6116686128dc565b6001600160a01b0316336001600160a01b03161480611691575060a1546001600160a01b031633145b6116e2576040805162461bcd60e51b815260206004820152601e60248201527f4f4e4c595f4c4f434b5f4f574e45525f4f525f42454e45464943494152590000604482015290519081900360640190fd5b6001600160a01b03811661172f576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b60a180546001600160a01b0319166001600160a01b0392909216919091179055565b609c546001600160a01b031681565b60a4546060906117ad576040805162461bcd60e51b81526020600482015260136024820152724e4f5f4f55545354414e44494e475f4b45595360681b604482015290519081900360640190fd5b60a45482908482029060009082840111156117d0575060a45481810392506117d5565b508082015b606083604051908082528060200260200182016040528015611801578160200160208202803883390190505b5090506000835b8381101561186b5760a4818154811061181d57fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061184757fe5b6001600160a01b039092166020928302919091019091015260019182019101611808565b5090979650505050505050565b609e5481565b609d5481565b60a0545b90565b60aa5481565b600061189c336140ca565b90506118a833826141d1565b50565b609a54600160a01b900460ff166118fb576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b8261190581612299565b611946576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b816119518133612b94565b80611961575061196181336140a9565b806119895750600081815260a36020526040902054611989906001600160a01b0316336139c8565b6119d7576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b61271060aa5410611a28576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416611a75576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000611a82866000614000565b6001600160a01b03808816600090815260a2602052604080822092891682528120825460018201549495509293909291611abf9083908790614256565b8254611ad5578354808455611ad5908a90614378565b428111611af9576001808501549084015583548355611af48989614378565b611b16565b6001840154611b109042830363ffffffff6143ff16565b60018401555b42600185015560008455611b2988614459565b87896001600160a01b03168b6001600160a01b031660008051602061596683398151915260405160405180910390a450505050505050505050565b60008115611bb2576040805162461bcd60e51b815260206004820152601660248201527527a7262cafa7a722afa5a2acafa822a92fa7aba722a960511b604482015290519081900360640190fd5b611bbb83612b2a565b9392505050565b611bca6128eb565b611c09576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b611c1560a783836156f1565b505050565b336000908152609960205260409020548111611c72576040805162461bcd60e51b81526020600482015260126024820152711393d390d157d053149150511657d554d15160721b604482015290519081900360640190fd5b33600081815260996020908152604091829020849055815184815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a250565b60a1546001600160a01b031681565b611cd36128eb565b611d12576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b604080518381526020810183905281517fd6867bc538320e67d7bdc35860c27c08486eb490b4fd9b820fff18fb28381d3c929181900390910190a160ac9190915560ab55565b609a54600160a01b900460ff16611da8576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b60a054609f5411611df0576040805162461bcd60e51b815260206004820152600d60248201526c1313d0d2d7d4d3d31117d3d555609a1b604482015290519081900360640190fd5b6001600160a01b038416611e3d576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038416600090815260a2602052604090208054611e7257611e6481614494565b611e72858260000154614378565b42816001015410611e9e57609d546001820154611e949163ffffffff6143ff16565b6001820155611ea9565b609d54420160018201555b609e54609c5460408051630cb175e360e01b81526001600160a01b03898116600483015260248201859052825160009586959094921692630cb175e3926044808301939192829003018186803b158015611f0257600080fd5b505afa158015611f16573d6000803e3d6000fd5b505050506040513d6040811015611f2c57600080fd5b508051602090910151909350915080831115611f4a57506000611f4e565b8290035b8215611fc157609c5460408051633652466360e01b8152600481018690526024810185905290516001600160a01b039092169163365246639160448082019260009290919082900301818387803b158015611fa857600080fd5b505af1158015611fbc573d6000803e3d6000fd5b505050505b609c546001600160a01b031663939d9f1f82611fdc8a612299565b611fe7576000611fe9565b895b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b15801561203857600080fd5b505af115801561204c573d6000803e3d6000fd5b505085546040519092506001600160a01b038b169150600090600080516020615966833981519152908290a4609a546001600160a01b0316156120d657808910156120d3576040805162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b604482015290519081900360640190fd5b50875b60006120e1826144a9565b90506121258989838a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061453792505050565b50505050505050505050565b609a54600160a01b900460ff1681565b611c158383836040518060200160405280600081525061312e565b60996020526000908152604090205481565b600060a05482106121b5576040805162461bcd60e51b815260206004820152600c60248201526b4f55545f4f465f52414e474560a01b604482015290519081900360640190fd5b5090565b61271081565b60006114c4826140ca565b6121d26128eb565b612211576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b611c1560a583836156f1565b60ab5481565b600081815260a3602052604081205482906001600160a01b031661227c576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b5050600090815260a360205260409020546001600160a01b031690565b6001600160a01b0316600090815260a26020526040902060010154421090565b600054610100900460ff16806122d257506122d26146ed565b806122e0575060005460ff16155b61231b5760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff16158015612346576000805460ff1961ff0019909116610100171660011790555b61234f876133b0565b612358856146f3565b6123606147c2565b61236c878786866147d7565b6123758261486d565b61237d614899565b6123856148ab565b61238e876148b3565b61239e6380ac58cd60e01b6148d1565b80156123b0576000805461ff00191690555b50505050505050565b60006001600160a01b038216612408576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b61241182612299565b61241c57600061241f565b60015b60ff1692915050565b6124306128eb565b61246f576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6066546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606680546001600160a01b0319169055565b6040518060256157f482396025019050604051809103902081565b609f5481565b6124e26128eb565b612521576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b61252d60a683836156f1565b507f8868e22e84ebf32da89b2ebcb0ac642816304ea3863b257f240df9098719cb97828260405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b61259a6128eb565b6125d9576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b60005b8381101561271c5760008585838181106125f257fe5b905060200201356001600160a01b03169050600084848481811061261257fe5b60200291909101359150506001600160a01b03821661266a576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038216600090815260a260205260409020600181015482116126cd576040805162461bcd60e51b815260206004820152601060248201526f414c52454144595f4f574e535f4b455960801b604482015290519081900360640190fd5b6126d681614494565b6126e4838260000154614378565b6001810182905580546040516001600160a01b03851690600090600080516020615966833981519152908290a45050506001016125dc565b5050505050565b600054610100900460ff168061273c575061273c6146ed565b8061274a575060005460ff16155b6127855760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff161580156127b0576000805460ff1961ff0019909116610100171660011790555b6127c06301ffc9a760e01b6148d1565b80156118a8576000805461ff001916905550565b6127dc6128eb565b61281b576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6040805182815290517f0496ed1e61eb69727f9659a8e859288db4758ffb1f744d1c1424634f90a257f49181900360200190a160aa55565b60003060405180806157f460259139604080519182900360250182206001600160a01b03881660009081526099602090815290839020546bffffffffffffffffffffffff19606097881b811683870152603486019390935260548501529487901b1660748301528051606881840301815260889092019052805192019190912091505092915050565b6066546001600160a01b031690565b6066546000906001600160a01b0316612902614955565b6001600160a01b031614905090565b7fd6342b4bfdf66164985c9f5fe235f643a035ee12f507d7bd0f8c89e07e790f6881565b60a45490565b60a65460609060026000196101006001841615020190911604612a9857609c60009054906101000a90046001600160a01b03166001600160a01b031663cec410526040518163ffffffff1660e01b815260040160006040518083038186803b1580156129a657600080fd5b505afa1580156129ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156129e357600080fd5b8101908080516040519392919084600160201b821115612a0257600080fd5b908301906020820185811115612a1757600080fd5b8251600160201b811182820188101715612a3057600080fd5b82525081516020918201929091019080838360005b83811015612a5d578181015183820152602001612a45565b50505050905090810190601f168015612a8a5780820380516001836020036101000a031916815260200191505b506040525050509050611888565b60a6805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b1e5780601f10612af357610100808354040283529160200191612b1e565b820191906000526020600020905b815481529060010190602001808311612b0157829003601f168201915b50505050509050611888565b600081612b3681612299565b612b77576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b50506001600160a01b0316600090815260a2602052604090205490565b600091825260a36020526040909120546001600160a01b0391821691161490565b609a546001600160a01b031681565b612bcc6128eb565b612c0b576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b80612c1581612299565b612c56576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038216600090815260a260205260408082204260018201558054915190927f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79591a2505050565b609a54600160a01b900460ff16612cf3576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6001600160a01b038216331415612d40576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b33600081815260a9602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b612db733613072565b612df25760405162461bcd60e51b815260040180806020018281038252603b81526020018061583f603b913960400191505060405180910390fd5b609a54600160a01b900460ff16612e42576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b609e54609a546001600160a01b039081169083161580612ec657506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e9857600080fd5b505afa158015612eac573d6000803e3d6000fd5b505050506040513d6020811015612ec257600080fd5b5051115b612f07576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b609e849055609a80546001600160a01b0319166001600160a01b038581169190911791829055604080518581526020810188905284831681830152929091166060830152517f3615065ccf48367ac483ac86701248e2e5ff55bdd9be845007d34a3b68d719d4916080908290030190a150505050565b60ac5481565b612f8b6128eb565b612fca576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b609a54600160a01b900460ff1615613019576040805162461bcd60e51b815260206004820152600d60248201526c111254d050931157d1925494d5609a1b604482015290519081900360640190fd5b60408051478152905133917fa053f2a7eceda47dde76e5939c5adf7b771e665fc84c8ef6feffc290a1eb1feb919081900360200190a2609a5461306f906001600160a01b03163361306a8230613906565b614959565b33ff5b60006114c4609b8363ffffffff6149a616565b6001600160a01b038116600090815260a2602052604081206001015482906130ea576040805162461bcd60e51b81526020600482015260136024820152724841535f4e455645525f4f574e45445f4b455960681b604482015290519081900360640190fd5b50506001600160a01b0316600090815260a2602052604090206001015490565b7f4d99da10ff5120f726d35edd8dbd417bbe55d90453b8432acd284e650ee2c6f081565b609a54600160a01b900460ff1661317e576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b816131898133612b94565b80613199575061319981336140a9565b806131c15750600081815260a360205260409020546131c1906001600160a01b0316336139c8565b61320f576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b600083815260a360205260409020546001600160a01b031661323081612299565b613271576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b61327c8686866118ab565b61328886868686614a0d565b6132d9576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b505050505050565b6132e96128eb565b613328576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b609a54600160a01b900460ff16613378576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6040517f25a311358326fb18c62efc24bc28d3126acee8d2a67fd8b2145b757dc8bd1bc190600090a1609a805460ff60a01b19169055565b600054610100900460ff16806133c957506133c96146ed565b806133d7575060005460ff16155b6134125760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff1615801561343d576000805460ff1961ff0019909116610100171660011790555b606680546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561349e576000805461ff00191690555b5050565b600081815260a3602052604090205460609082906001600160a01b03166134fe576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b60a7546060906002600019610100600184161502019091160461365b57609c60009054906101000a90046001600160a01b03166001600160a01b031663a998e9fb6040518163ffffffff1660e01b815260040160006040518083038186803b15801561356957600080fd5b505afa15801561357d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156135a657600080fd5b8101908080516040519392919084600160201b8211156135c557600080fd5b9083019060208201858111156135da57600080fd5b8251600160201b8111828201881017156135f357600080fd5b82525081516020918201929091019080838360005b83811015613620578181015183820152602001613608565b50505050905090810190601f16801561364d5780820380516001836020036101000a031916815260200191505b5060405250505090506136e9565b60a7805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156136e15780601f106136b6576101008083540402835291602001916136e1565b820191906000526020600020905b8154815290600101906020018083116136c457829003601f168201915b505050505090505b6137276136f530614b40565b604051806040016040528060018152602001602f60f81b81525061371887614cbc565b8492919063ffffffff614d8016565b949350505050565b6137398433612853565b84848484836001600160a01b0316600161375287614f35565b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156137ac573d6000803e3d6000fd5b505050602060405103516001600160a01b031614613805576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6001600160a01b038416600081815260996020908152604091829020805460010190819055825190815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a260006138668a6140ca565b90506121258a826141d1565b600690565b61387f6128eb565b6138be576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6138cf609b8263ffffffff614f8616565b6040516001600160a01b038216907f91d5c045d5bd98bf59a379b259ebca05b93bf79af1845fdf87e3172385d4c7f790600090a250565b60006001600160a01b03831661392757506001600160a01b038116316114c4565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561397d57600080fd5b505afa158015613991573d6000803e3d6000fd5b505050506040513d60208110156139a757600080fd5b505190506114c4565b731820a4b7618bde71dce8cdc73aab6c95905fad2481565b6001600160a01b03918216600090815260a96020908152604080832093909416825291909152205460ff1690565b613a07609b3363ffffffff61500716565b60405133907f42885193b8178d25fca25a38e6fcc93918501e91be06d85e0c8afb3bad95238090600090a2565b609a54600160a01b900460ff16613a84576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b81613a8f8133612b94565b80613a9f5750613a9f81336140a9565b80613ac75750600081815260a36020526040902054613ac7906001600160a01b0316336139c8565b613b15576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b61271060aa5410613b66576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416613bb3576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b600083815260a360205260409020546001600160a01b0316613bd481612299565b613c15576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03808216600090815260a2602052604080822092881682528120805460018401549192909142900381613c4f878a614000565b90506000613c638a8363ffffffff6143ff16565b905082811015613c8157899350613c7c8b826000614256565b613cc5565b613c8b8884614000565b42600189015560405181850395509092508b907f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79590600090a25b8554613d0557613cd486614494565b613cde8c86614378565b60405185906001600160a01b038e1690600090600080516020615966833981519152908290a45b613d1185856001614256565b848c6001600160a01b0316896001600160a01b031660008051602061596683398151915260405160405180910390a4613d5b888d8d60405180602001604052806000815250614a0d565b613dac576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b505050505050505050505050565b613dc26128eb565b613e01576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6118a88161506e565b613e126128dc565b6001600160a01b0316336001600160a01b03161480613e3b575060a1546001600160a01b031633145b613e8c576040805162461bcd60e51b815260206004820152601e60248201527f4f4e4c595f4c4f434b5f4f574e45525f4f525f42454e45464943494152590000604482015290519081900360640190fd5b6000613e988330613906565b90506000821580613ea857508183115b15613efc5760008211613ef5576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b5080613eff565b50815b60a1546040805183815290516001600160a01b039283169287169133917f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e9181900360200190a460a154613f5e9085906001600160a01b031683614959565b50505050565b613f6c6128eb565b613fab576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b81613fb581612299565b613ff6576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b611c1583836141d1565b60008261400c81612299565b61404d576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038416600090815260a26020526040812090808561407a5742836001015403915061407e565b8591505b61271061409660aa548461510f90919063ffffffff16565b8161409d57fe5b04979650505050505050565b600091825260a86020526040909120546001600160a01b0391821691161490565b6000816140d681612299565b614117576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038316600090815260a2602052604090206001810154609d5460ac54429092039182011061415057609e549350614171565b609d54609e54614166908363ffffffff61510f16565b8161416d57fe5b0493505b60ac5415806141855750609d5460ac548201105b156141c95760006127106141a660ab54609e5461510f90919063ffffffff16565b816141ad57fe5b049050808511156141c25780850394506141c7565b600094505b505b505050919050565b6001600160a01b038216600081815260a2602090815260409182902080548351868152935191943394909391927f0a7068a9989857441c039a14a42b67ed71dd1fcfe5a9b17cc87b252e47bce528929181900390910190a4426001820155811561424c57609a5461424c906001600160a01b03168484614959565b611c158383615168565b600083815260a360205260409020546001600160a01b0316806142b3576040805162461bcd60e51b815260206004820152601060248201526f4e4f4e5f4558495354454e545f4b455960801b604482015290519081900360640190fd5b6001600160a01b038116600090815260a260205260408120600181015490916142db84612299565b9050841561431e578015614303576142f9828763ffffffff6143ff16565b6001840155614319565b614313428763ffffffff6143ff16565b60018401555b614334565b61432e828763ffffffff61529816565b60018401555b604080518781528615156020820152815189927fa2ede7ad01668310f921fcf6084901d08af350838c2744a013153e4968a7559d928290030190a250505050505050565b600081815260a360205260409020546001600160a01b0383811691161461349e5760a48054600181019091557fe434dc35da084cf8d7e8186688ea2dacb53db7003d427af3abf351bd9d0a4e8d0180546001600160a01b0384166001600160a01b03199182168117909255600083815260a360205260409020805490911690911790555050565b600082820183811015611bbb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081815260a860205260409020546001600160a01b0316156118a857600090815260a86020526040902080546001600160a01b0319169055565b80546118a85760a08054600101908190559055565b600081156113b057609a546001600160a01b03166145105781341015614509576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b50346113b0565b609a546001600160a01b031661452e8133308663ffffffff6152da16565b829150506113b0565b60a1546040805163555ddc6560e11b81526001600160a01b0390921660048301527f4d99da10ff5120f726d35edd8dbd417bbe55d90453b8432acd284e650ee2c6f0602483015251600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156145be57600080fd5b505afa1580156145d2573d6000803e3d6000fd5b505050506040513d60208110156145e857600080fd5b505190506001600160a01b0381161561271c57604051638d0f092560e01b815233600482018181526001600160a01b03888116602485015287811660448501526064840187905260a060848501908152865160a4860152865191861694638d0f092594938b938b938b938b939260c490910190602085019080838360005b8381101561467e578181015183820152602001614666565b50505050905090810190601f1680156146ab5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b1580156146ce57600080fd5b505af11580156146e2573d6000803e3d6000fd5b505050505050505050565b303b1590565b609a80546001600160a01b0319166001600160a01b038316908117909155158061478157506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561475357600080fd5b505afa158015614767573d6000803e3d6000fd5b505050506040513d602081101561477d57600080fd5b5051115b6118a8576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b609a805460ff60a01b1916600160a01b179055565b63bbf81e00831115614830576040805162461bcd60e51b815260206004820152601860248201527f4d41585f45585049524154494f4e5f3130305f59454152530000000000000000604482015290519081900360640190fd5b609c8054336001600160a01b03199182161790915560a180549091166001600160a01b039590951694909417909355609d91909155609e55609f55565b614875612723565b80516148889060a590602084019061576b565b506118a8635b5e139f60e01b6148d1565b6148a963780e9d6360e01b6148d1565b565b6103e860ab55565b6148bc81613072565b6118a8576118a8609b8263ffffffff614f8616565b6001600160e01b03198082161415614930576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b3390565b8015611c15576001600160a01b03831661498b576149866001600160a01b0383168263ffffffff61533416565b611c15565b82613f5e6001600160a01b038216848463ffffffff61541916565b60006001600160a01b0382166149ed5760405162461bcd60e51b81526004018080602001828103825260228152602001806159166022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000614a21846001600160a01b031661546b565b614a2d57506001613727565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015614aa7578181015183820152602001614a8f565b50505050905090810190601f168015614ad45780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015614af657600080fd5b505af1158015614b0a573d6000803e3d6000fd5b505050506040513d6020811015614b2057600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b03851692918491602082018180388339019050509050600360fc1b81600081518110614ba457fe5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614bcd57fe5b60200101906001600160f81b031916908160001a90535060005b6014811015614cb3578260048583600c0160208110614c0257fe5b1a60f81b6001600160f81b031916901c60f81c60ff1681518110614c2257fe5b602001015160f81c60f81b828260020260020181518110614c3f57fe5b60200101906001600160f81b031916908160001a905350828482600c0160208110614c6657fe5b825191901a600f16908110614c7757fe5b602001015160f81c60f81b828260020260030181518110614c9457fe5b60200101906001600160f81b031916908160001a905350600101614be7565b50949350505050565b60608180614ce35750506040805180820190915260018152600360fc1b60208201526113b0565b8260005b8115614cfb57600101600a82049150614ce7565b6060816040519080825280601f01601f191660200182016040528015614d28576020820181803883390190505b50905060001982015b8415614d7657600a850660300160f81b82828060019003935081518110614d5457fe5b60200101906001600160f81b031916908160001a905350600a85049450614d31565b5095945050505050565b606080859050606085905060608590506060859050606081518351855187510101016040519080825280601f01601f191660200182016040528015614dcc576020820181803883390190505b509050806000805b8751811015614e2557878181518110614de957fe5b602001015160f81c60f81b838380600101945081518110614e0657fe5b60200101906001600160f81b031916908160001a905350600101614dd4565b5060005b8651811015614e7a57868181518110614e3e57fe5b602001015160f81c60f81b838380600101945081518110614e5b57fe5b60200101906001600160f81b031916908160001a905350600101614e29565b5060005b8551811015614ecf57858181518110614e9357fe5b602001015160f81c60f81b838380600101945081518110614eb057fe5b60200101906001600160f81b031916908160001a905350600101614e7e565b5060005b8451811015614f2457848181518110614ee857fe5b602001015160f81c60f81b838380600101945081518110614f0557fe5b60200101906001600160f81b031916908160001a905350600101614ed3565b50909b9a5050505050505050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b614f9082826149a6565b15614fe2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61501182826149a6565b61504c5760405162461bcd60e51b81526004018080602001828103825260218152602001806158b46021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166150b35760405162461bcd60e51b81526004018080602001828103825260268152602001806158196026913960400191505060405180910390fd5b6066546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606680546001600160a01b0319166001600160a01b0392909216919091179055565b60008261511e575060006114c4565b8282028284828161512b57fe5b0414611bbb5760405162461bcd60e51b81526004018080602001828103825260218152602001806158d56021913960400191505060405180910390fd5b60a1546040805163555ddc6560e11b81526001600160a01b0390921660048301527fd6342b4bfdf66164985c9f5fe235f643a035ee12f507d7bd0f8c89e07e790f68602483015251600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156151ef57600080fd5b505afa158015615203573d6000803e3d6000fd5b505050506040513d602081101561521957600080fd5b505190506001600160a01b03811615611c15576040805163c9877d7b60e01b81523360048201526001600160a01b0385811660248301526044820185905291519183169163c9877d7b9160648082019260009290919082900301818387803b15801561528457600080fd5b505af11580156123b0573d6000803e3d6000fd5b6000611bbb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506154a2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052613f5e908590615539565b80471015615389576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146153d4576040519150601f19603f3d011682016040523d82523d6000602084013e6153d9565b606091505b5050905080611c155760405162461bcd60e51b815260040180806020018281038252603a81526020018061587a603a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611c15908490615539565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906137275750141592915050565b600081848411156155315760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156154f65781810151838201526020016154de565b50505050905090810190601f1680156155235780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61554b826001600160a01b031661546b565b61559c576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106155da5780518252601f1990920191602091820191016155bb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461563c576040519150601f19603f3d011682016040523d82523d6000602084013e615641565b606091505b509150915081615698576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115613f5e578080602001905160208110156156b457600080fd5b5051613f5e5760405162461bcd60e51b815260040180806020018281038252602a815260200180615986602a913960400191505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157325782800160ff1982351617855561575f565b8280016001018555821561575f579182015b8281111561575f578235825591602001919060010190615744565b506121b59291506157d9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157ac57805160ff191683800117855561575f565b8280016001018555821561575f579182015b8281111561575f5782518255916020019190600101906157be565b61188891905b808211156121b557600081556001016157df56fe63616e63656c416e64526566756e64466f722861646472657373205f6b65794f776e6572294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d6978696e4c6f636b4d616e616765723a2063616c6c657220646f6573206e6f74206861766520746865204c6f636b4d616e6167657220726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a723158200699dda614bcab2e903ef2411b51464fc64ec2c573008b8f0d5cc966a4a6001164736f6c634300050e0032",
  "deployedBytecode": "0x60806040526004361061041b5760003560e01c80637c7c42531161021e578063abdf82ce11610123578063d4fac45d116100ab578063f12c6b6e1161007a578063f12c6b6e14611275578063f2fde38b146112b4578063f3fef3a3146112e7578063f7514bce14611320578063fc42b58f146113595761041b565b8063d4fac45d146111d5578063e7e2736e14611210578063e985e9c514611225578063f0ba6040146112605761041b565b8063c4d66de8116100f2578063c4d66de8146110e8578063c87b56dd1461111b578063ca51773114611145578063d1bbd49c1461118d578063d2503485146111a25761041b565b8063abdf82ce14610fba578063b3084f0814610fed578063b88d4fde14611002578063c1c98d03146110d35761041b565b8063970aaeb7116101a6578063a22cb46511610175578063a22cb46514610ee9578063a2e4cd2e14610f24578063a375cb0514610f5d578063a843a4e714610f72578063aae4b8f714610f875761041b565b8063970aaeb714610e35578063994a8a7114610e685780639d76ea5814610ea15780639f98d3cb14610eb65761041b565b80638da5cb5b116101ed5780638da5cb5b14610dcc5780638f32d59b14610de1578063936d2aa414610df657806393fd184414610e0b57806395d89b4114610e205761041b565b80637c7c425314610c875780638129fc1c14610d525780638577a6d514610d675780638d0361fc14610d915761041b565b806339f469861161032457806356e0d51f116102ac57806370a082311161027b57806370a0823114610b9a578063715018a614610bcd57806373fca6ea14610be257806374b6c10614610bf7578063782a4ade14610c0c5761041b565b806356e0d51f14610a4c5780636352211e14610a615780636d8ea5b414610a8b5780636eadde4314610abe5761041b565b80634bc5a135116102f35780634bc5a1351461092c5780634f6ccce71461095f5780634fd24d301461098957806352d6a8e41461099e578063550ef3a8146109d15761041b565b806339f46986146108165780633f33133a146108465780634136aa35146108d457806342842e0e146108e95761041b565b806311a4c03a116103a757806323b872dd1161037657806323b872dd146106e05780632f745c591461072357806330176e131461075c57806335576ad0146107d757806338af3eed146108015761041b565b806311a4c03a1461068c57806318160ddd146106a1578063183767da146106b65780632009dc65146106cb5761041b565b8063095ea7b3116103ee578063095ea7b3146105625780630aaffd2a1461059d5780630f15023b146105d057806310803b72146105e557806310e56973146106655761041b565b806301ffc9a714610420578063025e7c271461046857806306fdde03146104ae578063081812fc14610538575b600080fd5b34801561042c57600080fd5b506104546004803603602081101561044357600080fd5b50356001600160e01b031916611392565b604080519115158252519081900360200190f35b34801561047457600080fd5b506104926004803603602081101561048b57600080fd5b50356113b5565b604080516001600160a01b039092168252519081900360200190f35b3480156104ba57600080fd5b506104c36113dc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104fd5781810151838201526020016104e5565b50505050905090810190601f16801561052a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054457600080fd5b506104926004803603602081101561055b57600080fd5b503561146a565b34801561056e57600080fd5b5061059b6004803603604081101561058557600080fd5b506001600160a01b0381351690602001356114ca565b005b3480156105a957600080fd5b5061059b600480360360208110156105c057600080fd5b50356001600160a01b0316611660565b3480156105dc57600080fd5b50610492611751565b3480156105f157600080fd5b506106156004803603604081101561060857600080fd5b5080359060200135611760565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610651578181015183820152602001610639565b505050509050019250505060405180910390f35b34801561067157600080fd5b5061067a611878565b60408051918252519081900360200190f35b34801561069857600080fd5b5061067a61187e565b3480156106ad57600080fd5b5061067a611884565b3480156106c257600080fd5b5061067a61188b565b3480156106d757600080fd5b5061059b611891565b3480156106ec57600080fd5b5061059b6004803603606081101561070357600080fd5b506001600160a01b038135811691602081013590911690604001356118ab565b34801561072f57600080fd5b5061067a6004803603604081101561074657600080fd5b506001600160a01b038135169060200135611b64565b34801561076857600080fd5b5061059b6004803603602081101561077f57600080fd5b810190602081018135600160201b81111561079957600080fd5b8201836020820111156107ab57600080fd5b803590602001918460018302840111600160201b831117156107cc57600080fd5b509092509050611bc2565b3480156107e357600080fd5b5061059b600480360360208110156107fa57600080fd5b5035611c1a565b34801561080d57600080fd5b50610492611cbc565b34801561082257600080fd5b5061059b6004803603604081101561083957600080fd5b5080359060200135611ccb565b61059b6004803603608081101561085c57600080fd5b8135916001600160a01b03602082013581169260408301359091169190810190608081016060820135600160201b81111561089657600080fd5b8201836020820111156108a857600080fd5b803590602001918460018302840111600160201b831117156108c957600080fd5b509092509050611d58565b3480156108e057600080fd5b50610454612131565b3480156108f557600080fd5b5061059b6004803603606081101561090c57600080fd5b506001600160a01b03813581169160208101359091169060400135612141565b34801561093857600080fd5b5061067a6004803603602081101561094f57600080fd5b50356001600160a01b031661215c565b34801561096b57600080fd5b5061067a6004803603602081101561098257600080fd5b503561216e565b34801561099557600080fd5b5061067a6121b9565b3480156109aa57600080fd5b5061067a600480360360208110156109c157600080fd5b50356001600160a01b03166121bf565b3480156109dd57600080fd5b5061059b600480360360208110156109f457600080fd5b810190602081018135600160201b811115610a0e57600080fd5b820183602082011115610a2057600080fd5b803590602001918460018302840111600160201b83111715610a4157600080fd5b5090925090506121ca565b348015610a5857600080fd5b5061067a61221d565b348015610a6d57600080fd5b5061049260048036036020811015610a8457600080fd5b5035612223565b348015610a9757600080fd5b5061045460048036036020811015610aae57600080fd5b50356001600160a01b0316612299565b348015610aca57600080fd5b5061059b600480360360c0811015610ae157600080fd5b6001600160a01b03823581169260208101359260408201359092169160608201359160808101359181019060c0810160a0820135600160201b811115610b2657600080fd5b820183602082011115610b3857600080fd5b803590602001918460018302840111600160201b83111715610b5957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506122b9945050505050565b348015610ba657600080fd5b5061067a60048036036020811015610bbd57600080fd5b50356001600160a01b03166123b9565b348015610bd957600080fd5b5061059b612428565b348015610bee57600080fd5b5061067a6124b9565b348015610c0357600080fd5b5061067a6124d4565b348015610c1857600080fd5b5061059b60048036036020811015610c2f57600080fd5b810190602081018135600160201b811115610c4957600080fd5b820183602082011115610c5b57600080fd5b803590602001918460018302840111600160201b83111715610c7c57600080fd5b5090925090506124da565b348015610c9357600080fd5b5061059b60048036036040811015610caa57600080fd5b810190602081018135600160201b811115610cc457600080fd5b820183602082011115610cd657600080fd5b803590602001918460208302840111600160201b83111715610cf757600080fd5b919390929091602081019035600160201b811115610d1457600080fd5b820183602082011115610d2657600080fd5b803590602001918460208302840111600160201b83111715610d4757600080fd5b509092509050612592565b348015610d5e57600080fd5b5061059b612723565b348015610d7357600080fd5b5061059b60048036036020811015610d8a57600080fd5b50356127d4565b348015610d9d57600080fd5b5061067a60048036036040811015610db457600080fd5b506001600160a01b0381358116916020013516612853565b348015610dd857600080fd5b506104926128dc565b348015610ded57600080fd5b506104546128eb565b348015610e0257600080fd5b5061067a612911565b348015610e1757600080fd5b5061067a612935565b348015610e2c57600080fd5b506104c361293b565b348015610e4157600080fd5b5061067a60048036036020811015610e5857600080fd5b50356001600160a01b0316612b2a565b348015610e7457600080fd5b5061045460048036036040811015610e8b57600080fd5b50803590602001356001600160a01b0316612b94565b348015610ead57600080fd5b50610492612bb5565b348015610ec257600080fd5b5061059b60048036036020811015610ed957600080fd5b50356001600160a01b0316612bc4565b348015610ef557600080fd5b5061059b60048036036040811015610f0c57600080fd5b506001600160a01b0381351690602001351515612ca3565b348015610f3057600080fd5b5061059b60048036036040811015610f4757600080fd5b50803590602001356001600160a01b0316612dae565b348015610f6957600080fd5b5061067a612f7d565b348015610f7e57600080fd5b5061059b612f83565b348015610f9357600080fd5b5061045460048036036020811015610faa57600080fd5b50356001600160a01b0316613072565b348015610fc657600080fd5b5061067a60048036036020811015610fdd57600080fd5b50356001600160a01b0316613085565b348015610ff957600080fd5b5061067a61310a565b34801561100e57600080fd5b5061059b6004803603608081101561102557600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561105f57600080fd5b82018360208201111561107157600080fd5b803590602001918460018302840111600160201b8311171561109257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061312e945050505050565b3480156110df57600080fd5b5061059b6132e1565b3480156110f457600080fd5b5061059b6004803603602081101561110b57600080fd5b50356001600160a01b03166133b0565b34801561112757600080fd5b506104c36004803603602081101561113e57600080fd5b50356134a2565b34801561115157600080fd5b5061059b6004803603608081101561116857600080fd5b506001600160a01b038135169060ff602082013516906040810135906060013561372f565b34801561119957600080fd5b5061067a613872565b3480156111ae57600080fd5b5061059b600480360360208110156111c557600080fd5b50356001600160a01b0316613877565b3480156111e157600080fd5b5061067a600480360360408110156111f857600080fd5b506001600160a01b0381358116916020013516613906565b34801561121c57600080fd5b506104926139b0565b34801561123157600080fd5b506104546004803603604081101561124857600080fd5b506001600160a01b03813581169160200135166139c8565b34801561126c57600080fd5b5061059b6139f6565b34801561128157600080fd5b5061059b6004803603606081101561129857600080fd5b506001600160a01b038135169060208101359060400135613a34565b3480156112c057600080fd5b5061059b600480360360208110156112d757600080fd5b50356001600160a01b0316613dba565b3480156112f357600080fd5b5061059b6004803603604081101561130a57600080fd5b506001600160a01b038135169060200135613e0a565b34801561132c57600080fd5b5061059b6004803603604081101561134357600080fd5b506001600160a01b038135169060200135613f64565b34801561136557600080fd5b5061067a6004803603604081101561137c57600080fd5b506001600160a01b038135169060200135614000565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b60a481815481106113c257fe5b6000918252602090912001546001600160a01b0316905081565b60a5805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b505050505081565b600081815260a860205260408120546001600160a01b0316806114c4576040805162461bcd60e51b815260206004820152600d60248201526c1393d39157d054141493d59151609a1b604482015290519081900360640190fd5b92915050565b609a54600160a01b900460ff1661151a576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b806115258133612b94565b80611535575061153581336140a9565b8061155d5750600081815260a3602052604090205461155d906001600160a01b0316336139c8565b6115ab576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b336001600160a01b03841614156115f8576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b600082815260a86020908152604080832080546001600160a01b0319166001600160a01b0388811691821790925560a3909352818420549151869492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6116686128dc565b6001600160a01b0316336001600160a01b03161480611691575060a1546001600160a01b031633145b6116e2576040805162461bcd60e51b815260206004820152601e60248201527f4f4e4c595f4c4f434b5f4f574e45525f4f525f42454e45464943494152590000604482015290519081900360640190fd5b6001600160a01b03811661172f576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b60a180546001600160a01b0319166001600160a01b0392909216919091179055565b609c546001600160a01b031681565b60a4546060906117ad576040805162461bcd60e51b81526020600482015260136024820152724e4f5f4f55545354414e44494e475f4b45595360681b604482015290519081900360640190fd5b60a45482908482029060009082840111156117d0575060a45481810392506117d5565b508082015b606083604051908082528060200260200182016040528015611801578160200160208202803883390190505b5090506000835b8381101561186b5760a4818154811061181d57fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061184757fe5b6001600160a01b039092166020928302919091019091015260019182019101611808565b5090979650505050505050565b609e5481565b609d5481565b60a0545b90565b60aa5481565b600061189c336140ca565b90506118a833826141d1565b50565b609a54600160a01b900460ff166118fb576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b8261190581612299565b611946576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b816119518133612b94565b80611961575061196181336140a9565b806119895750600081815260a36020526040902054611989906001600160a01b0316336139c8565b6119d7576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b61271060aa5410611a28576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416611a75576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6000611a82866000614000565b6001600160a01b03808816600090815260a2602052604080822092891682528120825460018201549495509293909291611abf9083908790614256565b8254611ad5578354808455611ad5908a90614378565b428111611af9576001808501549084015583548355611af48989614378565b611b16565b6001840154611b109042830363ffffffff6143ff16565b60018401555b42600185015560008455611b2988614459565b87896001600160a01b03168b6001600160a01b031660008051602061596683398151915260405160405180910390a450505050505050505050565b60008115611bb2576040805162461bcd60e51b815260206004820152601660248201527527a7262cafa7a722afa5a2acafa822a92fa7aba722a960511b604482015290519081900360640190fd5b611bbb83612b2a565b9392505050565b611bca6128eb565b611c09576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b611c1560a783836156f1565b505050565b336000908152609960205260409020548111611c72576040805162461bcd60e51b81526020600482015260126024820152711393d390d157d053149150511657d554d15160721b604482015290519081900360640190fd5b33600081815260996020908152604091829020849055815184815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a250565b60a1546001600160a01b031681565b611cd36128eb565b611d12576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b604080518381526020810183905281517fd6867bc538320e67d7bdc35860c27c08486eb490b4fd9b820fff18fb28381d3c929181900390910190a160ac9190915560ab55565b609a54600160a01b900460ff16611da8576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b60a054609f5411611df0576040805162461bcd60e51b815260206004820152600d60248201526c1313d0d2d7d4d3d31117d3d555609a1b604482015290519081900360640190fd5b6001600160a01b038416611e3d576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038416600090815260a2602052604090208054611e7257611e6481614494565b611e72858260000154614378565b42816001015410611e9e57609d546001820154611e949163ffffffff6143ff16565b6001820155611ea9565b609d54420160018201555b609e54609c5460408051630cb175e360e01b81526001600160a01b03898116600483015260248201859052825160009586959094921692630cb175e3926044808301939192829003018186803b158015611f0257600080fd5b505afa158015611f16573d6000803e3d6000fd5b505050506040513d6040811015611f2c57600080fd5b508051602090910151909350915080831115611f4a57506000611f4e565b8290035b8215611fc157609c5460408051633652466360e01b8152600481018690526024810185905290516001600160a01b039092169163365246639160448082019260009290919082900301818387803b158015611fa857600080fd5b505af1158015611fbc573d6000803e3d6000fd5b505050505b609c546001600160a01b031663939d9f1f82611fdc8a612299565b611fe7576000611fe9565b895b6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b15801561203857600080fd5b505af115801561204c573d6000803e3d6000fd5b505085546040519092506001600160a01b038b169150600090600080516020615966833981519152908290a4609a546001600160a01b0316156120d657808910156120d3576040805162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b604482015290519081900360640190fd5b50875b60006120e1826144a9565b90506121258989838a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061453792505050565b50505050505050505050565b609a54600160a01b900460ff1681565b611c158383836040518060200160405280600081525061312e565b60996020526000908152604090205481565b600060a05482106121b5576040805162461bcd60e51b815260206004820152600c60248201526b4f55545f4f465f52414e474560a01b604482015290519081900360640190fd5b5090565b61271081565b60006114c4826140ca565b6121d26128eb565b612211576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b611c1560a583836156f1565b60ab5481565b600081815260a3602052604081205482906001600160a01b031661227c576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b5050600090815260a360205260409020546001600160a01b031690565b6001600160a01b0316600090815260a26020526040902060010154421090565b600054610100900460ff16806122d257506122d26146ed565b806122e0575060005460ff16155b61231b5760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff16158015612346576000805460ff1961ff0019909116610100171660011790555b61234f876133b0565b612358856146f3565b6123606147c2565b61236c878786866147d7565b6123758261486d565b61237d614899565b6123856148ab565b61238e876148b3565b61239e6380ac58cd60e01b6148d1565b80156123b0576000805461ff00191690555b50505050505050565b60006001600160a01b038216612408576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b61241182612299565b61241c57600061241f565b60015b60ff1692915050565b6124306128eb565b61246f576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6066546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606680546001600160a01b0319169055565b6040518060256157f482396025019050604051809103902081565b609f5481565b6124e26128eb565b612521576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b61252d60a683836156f1565b507f8868e22e84ebf32da89b2ebcb0ac642816304ea3863b257f240df9098719cb97828260405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b61259a6128eb565b6125d9576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b60005b8381101561271c5760008585838181106125f257fe5b905060200201356001600160a01b03169050600084848481811061261257fe5b60200291909101359150506001600160a01b03821661266a576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b038216600090815260a260205260409020600181015482116126cd576040805162461bcd60e51b815260206004820152601060248201526f414c52454144595f4f574e535f4b455960801b604482015290519081900360640190fd5b6126d681614494565b6126e4838260000154614378565b6001810182905580546040516001600160a01b03851690600090600080516020615966833981519152908290a45050506001016125dc565b5050505050565b600054610100900460ff168061273c575061273c6146ed565b8061274a575060005460ff16155b6127855760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff161580156127b0576000805460ff1961ff0019909116610100171660011790555b6127c06301ffc9a760e01b6148d1565b80156118a8576000805461ff001916905550565b6127dc6128eb565b61281b576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6040805182815290517f0496ed1e61eb69727f9659a8e859288db4758ffb1f744d1c1424634f90a257f49181900360200190a160aa55565b60003060405180806157f460259139604080519182900360250182206001600160a01b03881660009081526099602090815290839020546bffffffffffffffffffffffff19606097881b811683870152603486019390935260548501529487901b1660748301528051606881840301815260889092019052805192019190912091505092915050565b6066546001600160a01b031690565b6066546000906001600160a01b0316612902614955565b6001600160a01b031614905090565b7fd6342b4bfdf66164985c9f5fe235f643a035ee12f507d7bd0f8c89e07e790f6881565b60a45490565b60a65460609060026000196101006001841615020190911604612a9857609c60009054906101000a90046001600160a01b03166001600160a01b031663cec410526040518163ffffffff1660e01b815260040160006040518083038186803b1580156129a657600080fd5b505afa1580156129ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156129e357600080fd5b8101908080516040519392919084600160201b821115612a0257600080fd5b908301906020820185811115612a1757600080fd5b8251600160201b811182820188101715612a3057600080fd5b82525081516020918201929091019080838360005b83811015612a5d578181015183820152602001612a45565b50505050905090810190601f168015612a8a5780820380516001836020036101000a031916815260200191505b506040525050509050611888565b60a6805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b1e5780601f10612af357610100808354040283529160200191612b1e565b820191906000526020600020905b815481529060010190602001808311612b0157829003601f168201915b50505050509050611888565b600081612b3681612299565b612b77576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b50506001600160a01b0316600090815260a2602052604090205490565b600091825260a36020526040909120546001600160a01b0391821691161490565b609a546001600160a01b031681565b612bcc6128eb565b612c0b576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b80612c1581612299565b612c56576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038216600090815260a260205260408082204260018201558054915190927f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79591a2505050565b609a54600160a01b900460ff16612cf3576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6001600160a01b038216331415612d40576040805162461bcd60e51b815260206004820152600c60248201526b20a8282927ab22afa9a2a62360a11b604482015290519081900360640190fd5b33600081815260a9602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b612db733613072565b612df25760405162461bcd60e51b815260040180806020018281038252603b81526020018061583f603b913960400191505060405180910390fd5b609a54600160a01b900460ff16612e42576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b609e54609a546001600160a01b039081169083161580612ec657506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e9857600080fd5b505afa158015612eac573d6000803e3d6000fd5b505050506040513d6020811015612ec257600080fd5b5051115b612f07576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b609e849055609a80546001600160a01b0319166001600160a01b038581169190911791829055604080518581526020810188905284831681830152929091166060830152517f3615065ccf48367ac483ac86701248e2e5ff55bdd9be845007d34a3b68d719d4916080908290030190a150505050565b60ac5481565b612f8b6128eb565b612fca576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b609a54600160a01b900460ff1615613019576040805162461bcd60e51b815260206004820152600d60248201526c111254d050931157d1925494d5609a1b604482015290519081900360640190fd5b60408051478152905133917fa053f2a7eceda47dde76e5939c5adf7b771e665fc84c8ef6feffc290a1eb1feb919081900360200190a2609a5461306f906001600160a01b03163361306a8230613906565b614959565b33ff5b60006114c4609b8363ffffffff6149a616565b6001600160a01b038116600090815260a2602052604081206001015482906130ea576040805162461bcd60e51b81526020600482015260136024820152724841535f4e455645525f4f574e45445f4b455960681b604482015290519081900360640190fd5b50506001600160a01b0316600090815260a2602052604090206001015490565b7f4d99da10ff5120f726d35edd8dbd417bbe55d90453b8432acd284e650ee2c6f081565b609a54600160a01b900460ff1661317e576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b816131898133612b94565b80613199575061319981336140a9565b806131c15750600081815260a360205260409020546131c1906001600160a01b0316336139c8565b61320f576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b600083815260a360205260409020546001600160a01b031661323081612299565b613271576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b61327c8686866118ab565b61328886868686614a0d565b6132d9576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b505050505050565b6132e96128eb565b613328576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b609a54600160a01b900460ff16613378576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b6040517f25a311358326fb18c62efc24bc28d3126acee8d2a67fd8b2145b757dc8bd1bc190600090a1609a805460ff60a01b19169055565b600054610100900460ff16806133c957506133c96146ed565b806133d7575060005460ff16155b6134125760405162461bcd60e51b815260040180806020018281038252602e815260200180615938602e913960400191505060405180910390fd5b600054610100900460ff1615801561343d576000805460ff1961ff0019909116610100171660011790555b606680546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561349e576000805461ff00191690555b5050565b600081815260a3602052604090205460609082906001600160a01b03166134fe576040805162461bcd60e51b815260206004820152600b60248201526a4e4f5f535543485f4b455960a81b604482015290519081900360640190fd5b60a7546060906002600019610100600184161502019091160461365b57609c60009054906101000a90046001600160a01b03166001600160a01b031663a998e9fb6040518163ffffffff1660e01b815260040160006040518083038186803b15801561356957600080fd5b505afa15801561357d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156135a657600080fd5b8101908080516040519392919084600160201b8211156135c557600080fd5b9083019060208201858111156135da57600080fd5b8251600160201b8111828201881017156135f357600080fd5b82525081516020918201929091019080838360005b83811015613620578181015183820152602001613608565b50505050905090810190601f16801561364d5780820380516001836020036101000a031916815260200191505b5060405250505090506136e9565b60a7805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156136e15780601f106136b6576101008083540402835291602001916136e1565b820191906000526020600020905b8154815290600101906020018083116136c457829003601f168201915b505050505090505b6137276136f530614b40565b604051806040016040528060018152602001602f60f81b81525061371887614cbc565b8492919063ffffffff614d8016565b949350505050565b6137398433612853565b84848484836001600160a01b0316600161375287614f35565b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156137ac573d6000803e3d6000fd5b505050602060405103516001600160a01b031614613805576040805162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b604482015290519081900360640190fd5b6001600160a01b038416600081815260996020908152604091829020805460010190819055825190815291517ff5d035b703f1ad8d403dd02e821d04257acafc5f6c5d70a3907bd8abf33a2e0f9281900390910190a260006138668a6140ca565b90506121258a826141d1565b600690565b61387f6128eb565b6138be576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6138cf609b8263ffffffff614f8616565b6040516001600160a01b038216907f91d5c045d5bd98bf59a379b259ebca05b93bf79af1845fdf87e3172385d4c7f790600090a250565b60006001600160a01b03831661392757506001600160a01b038116316114c4565b826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561397d57600080fd5b505afa158015613991573d6000803e3d6000fd5b505050506040513d60208110156139a757600080fd5b505190506114c4565b731820a4b7618bde71dce8cdc73aab6c95905fad2481565b6001600160a01b03918216600090815260a96020908152604080832093909416825291909152205460ff1690565b613a07609b3363ffffffff61500716565b60405133907f42885193b8178d25fca25a38e6fcc93918501e91be06d85e0c8afb3bad95238090600090a2565b609a54600160a01b900460ff16613a84576040805162461bcd60e51b815260206004820152600f60248201526e1313d0d2d7d11154149150d0551151608a1b604482015290519081900360640190fd5b81613a8f8133612b94565b80613a9f5750613a9f81336140a9565b80613ac75750600081815260a36020526040902054613ac7906001600160a01b0316336139c8565b613b15576040805162461bcd60e51b815260206004820152601a60248201527913d3931657d2d15657d3d5d3915497d3d497d054141493d5915160321b604482015290519081900360640190fd5b61271060aa5410613b66576040805162461bcd60e51b815260206004820152601660248201527512d15657d514905394d1915494d7d11254d05093115160521b604482015290519081900360640190fd5b6001600160a01b038416613bb3576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b600083815260a360205260409020546001600160a01b0316613bd481612299565b613c15576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b03808216600090815260a2602052604080822092881682528120805460018401549192909142900381613c4f878a614000565b90506000613c638a8363ffffffff6143ff16565b905082811015613c8157899350613c7c8b826000614256565b613cc5565b613c8b8884614000565b42600189015560405181850395509092508b907f59f2fe866dd27a1c2d34115520888c3150365cbc931aab97fa88c4b9ab40b79590600090a25b8554613d0557613cd486614494565b613cde8c86614378565b60405185906001600160a01b038e1690600090600080516020615966833981519152908290a45b613d1185856001614256565b848c6001600160a01b0316896001600160a01b031660008051602061596683398151915260405160405180910390a4613d5b888d8d60405180602001604052806000815250614a0d565b613dac576040805162461bcd60e51b815260206004820152601d60248201527f4e4f4e5f434f4d504c49414e545f4552433732315f5245434549564552000000604482015290519081900360640190fd5b505050505050505050505050565b613dc26128eb565b613e01576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b6118a88161506e565b613e126128dc565b6001600160a01b0316336001600160a01b03161480613e3b575060a1546001600160a01b031633145b613e8c576040805162461bcd60e51b815260206004820152601e60248201527f4f4e4c595f4c4f434b5f4f574e45525f4f525f42454e45464943494152590000604482015290519081900360640190fd5b6000613e988330613906565b90506000821580613ea857508183115b15613efc5760008211613ef5576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b5080613eff565b50815b60a1546040805183815290516001600160a01b039283169287169133917f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e9181900360200190a460a154613f5e9085906001600160a01b031683614959565b50505050565b613f6c6128eb565b613fab576040805162461bcd60e51b815260206004820181905260248201526000805160206158f6833981519152604482015290519081900360640190fd5b81613fb581612299565b613ff6576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b611c1583836141d1565b60008261400c81612299565b61404d576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038416600090815260a26020526040812090808561407a5742836001015403915061407e565b8591505b61271061409660aa548461510f90919063ffffffff16565b8161409d57fe5b04979650505050505050565b600091825260a86020526040909120546001600160a01b0391821691161490565b6000816140d681612299565b614117576040805162461bcd60e51b815260206004820152600d60248201526c12d15657d393d517d590531251609a1b604482015290519081900360640190fd5b6001600160a01b038316600090815260a2602052604090206001810154609d5460ac54429092039182011061415057609e549350614171565b609d54609e54614166908363ffffffff61510f16565b8161416d57fe5b0493505b60ac5415806141855750609d5460ac548201105b156141c95760006127106141a660ab54609e5461510f90919063ffffffff16565b816141ad57fe5b049050808511156141c25780850394506141c7565b600094505b505b505050919050565b6001600160a01b038216600081815260a2602090815260409182902080548351868152935191943394909391927f0a7068a9989857441c039a14a42b67ed71dd1fcfe5a9b17cc87b252e47bce528929181900390910190a4426001820155811561424c57609a5461424c906001600160a01b03168484614959565b611c158383615168565b600083815260a360205260409020546001600160a01b0316806142b3576040805162461bcd60e51b815260206004820152601060248201526f4e4f4e5f4558495354454e545f4b455960801b604482015290519081900360640190fd5b6001600160a01b038116600090815260a260205260408120600181015490916142db84612299565b9050841561431e578015614303576142f9828763ffffffff6143ff16565b6001840155614319565b614313428763ffffffff6143ff16565b60018401555b614334565b61432e828763ffffffff61529816565b60018401555b604080518781528615156020820152815189927fa2ede7ad01668310f921fcf6084901d08af350838c2744a013153e4968a7559d928290030190a250505050505050565b600081815260a360205260409020546001600160a01b0383811691161461349e5760a48054600181019091557fe434dc35da084cf8d7e8186688ea2dacb53db7003d427af3abf351bd9d0a4e8d0180546001600160a01b0384166001600160a01b03199182168117909255600083815260a360205260409020805490911690911790555050565b600082820183811015611bbb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081815260a860205260409020546001600160a01b0316156118a857600090815260a86020526040902080546001600160a01b0319169055565b80546118a85760a08054600101908190559055565b600081156113b057609a546001600160a01b03166145105781341015614509576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015290519081900360640190fd5b50346113b0565b609a546001600160a01b031661452e8133308663ffffffff6152da16565b829150506113b0565b60a1546040805163555ddc6560e11b81526001600160a01b0390921660048301527f4d99da10ff5120f726d35edd8dbd417bbe55d90453b8432acd284e650ee2c6f0602483015251600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156145be57600080fd5b505afa1580156145d2573d6000803e3d6000fd5b505050506040513d60208110156145e857600080fd5b505190506001600160a01b0381161561271c57604051638d0f092560e01b815233600482018181526001600160a01b03888116602485015287811660448501526064840187905260a060848501908152865160a4860152865191861694638d0f092594938b938b938b938b939260c490910190602085019080838360005b8381101561467e578181015183820152602001614666565b50505050905090810190601f1680156146ab5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b1580156146ce57600080fd5b505af11580156146e2573d6000803e3d6000fd5b505050505050505050565b303b1590565b609a80546001600160a01b0319166001600160a01b038316908117909155158061478157506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561475357600080fd5b505afa158015614767573d6000803e3d6000fd5b505050506040513d602081101561477d57600080fd5b5051115b6118a8576040805162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015290519081900360640190fd5b609a805460ff60a01b1916600160a01b179055565b63bbf81e00831115614830576040805162461bcd60e51b815260206004820152601860248201527f4d41585f45585049524154494f4e5f3130305f59454152530000000000000000604482015290519081900360640190fd5b609c8054336001600160a01b03199182161790915560a180549091166001600160a01b039590951694909417909355609d91909155609e55609f55565b614875612723565b80516148889060a590602084019061576b565b506118a8635b5e139f60e01b6148d1565b6148a963780e9d6360e01b6148d1565b565b6103e860ab55565b6148bc81613072565b6118a8576118a8609b8263ffffffff614f8616565b6001600160e01b03198082161415614930576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b3390565b8015611c15576001600160a01b03831661498b576149866001600160a01b0383168263ffffffff61533416565b611c15565b82613f5e6001600160a01b038216848463ffffffff61541916565b60006001600160a01b0382166149ed5760405162461bcd60e51b81526004018080602001828103825260228152602001806159166022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000614a21846001600160a01b031661546b565b614a2d57506001613727565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015614aa7578181015183820152602001614a8f565b50505050905090810190601f168015614ad45780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015614af657600080fd5b505af1158015614b0a573d6000803e3d6000fd5b505050506040513d6020811015614b2057600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b03851692918491602082018180388339019050509050600360fc1b81600081518110614ba457fe5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614bcd57fe5b60200101906001600160f81b031916908160001a90535060005b6014811015614cb3578260048583600c0160208110614c0257fe5b1a60f81b6001600160f81b031916901c60f81c60ff1681518110614c2257fe5b602001015160f81c60f81b828260020260020181518110614c3f57fe5b60200101906001600160f81b031916908160001a905350828482600c0160208110614c6657fe5b825191901a600f16908110614c7757fe5b602001015160f81c60f81b828260020260030181518110614c9457fe5b60200101906001600160f81b031916908160001a905350600101614be7565b50949350505050565b60608180614ce35750506040805180820190915260018152600360fc1b60208201526113b0565b8260005b8115614cfb57600101600a82049150614ce7565b6060816040519080825280601f01601f191660200182016040528015614d28576020820181803883390190505b50905060001982015b8415614d7657600a850660300160f81b82828060019003935081518110614d5457fe5b60200101906001600160f81b031916908160001a905350600a85049450614d31565b5095945050505050565b606080859050606085905060608590506060859050606081518351855187510101016040519080825280601f01601f191660200182016040528015614dcc576020820181803883390190505b509050806000805b8751811015614e2557878181518110614de957fe5b602001015160f81c60f81b838380600101945081518110614e0657fe5b60200101906001600160f81b031916908160001a905350600101614dd4565b5060005b8651811015614e7a57868181518110614e3e57fe5b602001015160f81c60f81b838380600101945081518110614e5b57fe5b60200101906001600160f81b031916908160001a905350600101614e29565b5060005b8551811015614ecf57858181518110614e9357fe5b602001015160f81c60f81b838380600101945081518110614eb057fe5b60200101906001600160f81b031916908160001a905350600101614e7e565b5060005b8451811015614f2457848181518110614ee857fe5b602001015160f81c60f81b838380600101945081518110614f0557fe5b60200101906001600160f81b031916908160001a905350600101614ed3565b50909b9a5050505050505050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b614f9082826149a6565b15614fe2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61501182826149a6565b61504c5760405162461bcd60e51b81526004018080602001828103825260218152602001806158b46021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166150b35760405162461bcd60e51b81526004018080602001828103825260268152602001806158196026913960400191505060405180910390fd5b6066546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606680546001600160a01b0319166001600160a01b0392909216919091179055565b60008261511e575060006114c4565b8282028284828161512b57fe5b0414611bbb5760405162461bcd60e51b81526004018080602001828103825260218152602001806158d56021913960400191505060405180910390fd5b60a1546040805163555ddc6560e11b81526001600160a01b0390921660048301527fd6342b4bfdf66164985c9f5fe235f643a035ee12f507d7bd0f8c89e07e790f68602483015251600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156151ef57600080fd5b505afa158015615203573d6000803e3d6000fd5b505050506040513d602081101561521957600080fd5b505190506001600160a01b03811615611c15576040805163c9877d7b60e01b81523360048201526001600160a01b0385811660248301526044820185905291519183169163c9877d7b9160648082019260009290919082900301818387803b15801561528457600080fd5b505af11580156123b0573d6000803e3d6000fd5b6000611bbb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506154a2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052613f5e908590615539565b80471015615389576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146153d4576040519150601f19603f3d011682016040523d82523d6000602084013e6153d9565b606091505b5050905080611c155760405162461bcd60e51b815260040180806020018281038252603a81526020018061587a603a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611c15908490615539565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906137275750141592915050565b600081848411156155315760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156154f65781810151838201526020016154de565b50505050905090810190601f1680156155235780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61554b826001600160a01b031661546b565b61559c576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106155da5780518252601f1990920191602091820191016155bb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461563c576040519150601f19603f3d011682016040523d82523d6000602084013e615641565b606091505b509150915081615698576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115613f5e578080602001905160208110156156b457600080fd5b5051613f5e5760405162461bcd60e51b815260040180806020018281038252602a815260200180615986602a913960400191505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157325782800160ff1982351617855561575f565b8280016001018555821561575f579182015b8281111561575f578235825591602001919060010190615744565b506121b59291506157d9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106157ac57805160ff191683800117855561575f565b8280016001018555821561575f579182015b8281111561575f5782518255916020019190600101906157be565b61188891905b808211156121b557600081556001016157df56fe63616e63656c416e64526566756e64466f722861646472657373205f6b65794f776e6572294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d6978696e4c6f636b4d616e616765723a2063616c6c657220646f6573206e6f74206861766520746865204c6f636b4d616e6167657220726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a723158200699dda614bcab2e903ef2411b51464fc64ec2c573008b8f0d5cc966a4a6001164736f6c634300050e0032",
  "sourceMap": "1083:1204:1:-;;;;;;;;;",
  "deployedSourceMapi;:::-;;;;;;;;;;;;;;;;;;1268:23:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1268:23:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1268:23:15;;:::i;:::-;;;;-1:-1:-1;;;;;1268:23:15;;;;;;;;;;;;;;921:18:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;921:18:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;921:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:230:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2636:230:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2636:230:9;;:::i;1739:285::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1739:285:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1739:285:9;;;;;;;;:::i;:::-;;4852:192:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4852:192:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4852:192:16;-1:-1:-1;;;;;4852:192:16;;:::i;1033:29::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1033:29:16;;;:::i;3439:851:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3439:851:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3439:851:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3439:851:15;;;;;;;;;;;;;;;;;1399:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1399:20:16;;;:::i;:::-;;;;;;;;;;;;;;;;1245:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1245:30:16;;;:::i;5048:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5048:92:16;;;:::i;1355:34:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1355:34:22;;;:::i;1675:146:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1675:146:20;;;:::i;3487:1895:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3487:1895:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3487:1895:22;;;;;;;;;;;;;;;;;:::i;1666:200:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1666:200:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1666:200:11;;;;;;;;:::i;2412:128:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2412:128:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2412:128:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2412:128:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2412:128:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2412:128:18;;-1:-1:-1;2412:128:18;-1:-1:-1;2412:128:18;:::i;1109:283:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1109:283:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1109:283:21;;:::i;1668:26:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1668:26:16;;;:::i;2479:323:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2479:323:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2479:323:20;;;;;;;:::i;1314:2201:19:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1314:2201:19;;;-1:-1:-1;;;;;1314:2201:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1314:2201:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1314:2201:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1314:2201:19;;-1:-1:-1;1314:2201:19;-1:-1:-1;1314:2201:19;:::i;548:19:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:19:10;;;:::i;5725:151:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5725:151:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5725:151:22;;;;;;;;;;;;;;;;;:::i;358:47:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:47:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;358:47:21;-1:-1:-1;;;;;358:47:21;;:::i;1079:158:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1079:158:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1079:158:11;;:::i;1768:45:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1768:45:16;;;:::i;3080:156:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3080:156:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3080:156:20;-1:-1:-1;;;;;3080:156:20;;:::i;1677:111:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1677:111:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1677:111:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1677:111:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1677:111:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1677:111:18;;-1:-1:-1;1677:111:18;-1:-1:-1;1677:111:18;:::i;659:36:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:36:20;;;:::i;5146:131:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5146:131:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5146:131:15;;:::i;2776:163::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2776:163:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2776:163:15;-1:-1:-1;;;;;2776:163:15;;:::i;1408:877:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:877:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1408:877:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1408:877:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1408:877:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1408:877:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1408:877:1;;-1:-1:-1;1408:877:1;;-1:-1:-1;;;;;1408:877:1:i;2527:186:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2527:186:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2527:186:15;-1:-1:-1;;;;;2527:186:15;;:::i;1746:137:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:137:39;;;:::i;856:92:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:92:20;;;:::i;1490:27:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1490:27:16;;;:::i;1865:160:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1865:160:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1865:160:18;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1865:160:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1865:160:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1865:160:18;;-1:-1:-1;1865:160:18;-1:-1:-1;1865:160:18;:::i;583:756:14:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:756:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;583:756:14;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;583:756:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;583:756:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;583:756:14;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;583:756:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;583:756:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;583:756:14;;-1:-1:-1;583:756:14;-1:-1:-1;583:756:14;:::i;624:234:35:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:234:35;;;:::i;6861:219:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6861:219:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6861:219:22;;:::i;3612:522:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3612:522:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3612:522:20;;;;;;;;;;:::i;959:77:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:77:39;;;:::i;1310:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1310:92:39;;;:::i;639:113:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:113:12;;;:::i;5003:98:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5003:98:15;;;:::i;2124:203:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2124:203:18;;;:::i;3050:158:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3050:158:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3050:158:15;-1:-1:-1;;;;;3050:158:15;;:::i;4363:142::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4363:142:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4363:142:15;;;;;;-1:-1:-1;;;;;4363:142:15;;:::i;703:27:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:27:13;;;:::i;2114:256:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2114:256:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2114:256:15;-1:-1:-1;;;;;2114:256:15;;:::i;2304:257:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2304:257:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2304:257:9;;;;;;;;;;:::i;4245:469:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4245:469:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4245:469:16;;;;;;-1:-1:-1;;;;;4245:469:16;;:::i;700:27:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;700:27:20;;;:::i;1212:514:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1212:514:10;;;:::i;901:110:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;901:110:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;901:110:17;-1:-1:-1;;;;;901:110:17;;:::i;4657:192:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4657:192:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4657:192:15;-1:-1:-1;;;;;4657:192:15;;:::i;475:111:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:111:12;;;:::i;6435:356:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6435:356:22;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6435:356:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6435:356:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6435:356:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6435:356:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6435:356:22;;-1:-1:-1;6435:356:22;;-1:-1:-1;;;;;6435:356:22:i;963:114:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;963:114:10;;;:::i;741:142:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:142:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:39;-1:-1:-1;;;;;741:142:39;;:::i;2873:381:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2873:381:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2873:381:18;;:::i;2057:355:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2057:355:20;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2057:355:20;;;;;;;;;;;;;;;;;;;;:::i;2704:84:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2704:84:16;;;:::i;1015:130:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:130:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1015:130:17;-1:-1:-1;;;;;1015:130:17;;:::i;1038:255:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1038:255:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1038:255:13;;;;;;;;;;:::i;321:103:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:103:12;;;:::i;3175:166:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3175:166:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3175:166:9;;;;;;;;;;:::i;1149:121:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:121:17;;;:::i;1688:1795:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1688:1795:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1688:1795:22;;;;;;;;;;;;;:::i;2032:107:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2032:107:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:39;-1:-1:-1;;;;;2032:107:39;;:::i;3419:569:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3419:569:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3419:569:16;;;;;;;;:::i;1413:154:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1413:154:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1413:154:20;;;;;;;;:::i;7337:571:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7337:571:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7337:571:22;;;;;;;;:::i;1008:131:35:-;-1:-1:-1;;;;;;1099:33:35;;1076:4;1099:33;;;:20;:33;;;;;;;;1008:131;;;;:::o;1268:23:15:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1268:23:15;;-1:-1:-1;1268:23:15;:::o;921:18:18:-;;;;;;;;;;;;;;;-1:-1:-1;;921:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2636:230:9:-;2705:7;2750:18;;;:8;:18;;;;;;-1:-1:-1;;;;;2750:18:9;2782:31;2774:57;;;;;-1:-1:-1;;;2774:57:9;;;;;;;;;;;;-1:-1:-1;;;2774:57:9;;;;;;;;;;;;;;;2844:17;2636:230;-1:-1:-1;;2636:230:9:o;1739:285::-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;1856:8:9;1363:32;1374:8;1384:10;1363;:32::i;:::-;:77;;;;1407:33;1419:8;1429:10;1407:11;:33::i;:::-;1363:137;;;-1:-1:-1;1469:18:9;;;;:8;:18;;;;;;1452:48;;-1:-1:-1;;;;;1469:18:9;1489:10;1452:16;:48::i;:::-;1348:189;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;;;;1882:10;-1:-1:-1;;;;;1882:23:9;;;;1874:48;;;;;-1:-1:-1;;;1874:48:9;;;;;;;;;;;;-1:-1:-1;;;1874:48:9;;;;;;;;;;;;;;;1929:18;;;;:8;:18;;;;;;;;:30;;-1:-1:-1;;;;;;1929:30:9;-1:-1:-1;;;;;1929:30:9;;;;;;;;;1979:8;:18;;;;;;;1970:49;;1929:18;;1979;;;;;1970:49;;;862:1:10;1739:285:9;;:::o;4852:192:16:-;2045:7;:5;:7::i;:::-;-1:-1:-1;;;;;2031:21:16;:10;-1:-1:-1;;;;;2031:21:16;;:50;;;-1:-1:-1;2070:11:16;;-1:-1:-1;;;;;2070:11:16;2056:10;:25;2031:50;2016:111;;;;;-1:-1:-1;;;2016:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4961:26:16;;4953:54;;;;;-1:-1:-1;;;4953:54:16;;;;;;;;;;;;-1:-1:-1;;;4953:54:16;;;;;;;;;;;;;;;5013:11;:26;;-1:-1:-1;;;;;;5013:26:16;-1:-1:-1;;;;;5013:26:16;;;;;;;;;;4852:192::o;1033:29::-;;;-1:-1:-1;;;;;1033:29:16;;:::o;3439:851:15:-;3559:6;:13;3525:16;;3551:49;;;;;-1:-1:-1;;;3551:49:15;;;;;;;;;;;;-1:-1:-1;;;3551:49:15;;;;;;;;;;;;;;;3733:6;:13;3622:9;;3656:16;;;;3606:13;;3708:22;;;:38;3704:197;;;-1:-1:-1;3773:6:15;:13;3805:27;;;;-1:-1:-1;3704:197:15;;;-1:-1:-1;3871:22:15;;;3704:197;3984:29;4030:8;4016:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4016:23:15;-1:-1:-1;3984:55:15;-1:-1:-1;4045:14:15;4153:11;4139:121;4170:14;4166:1;:18;4139:121;;;4225:6;4232:1;4225:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4225:9:15;4199:12;4212:9;4199:23;;;;;;;;-1:-1:-1;;;;;4199:35:15;;;:23;;;;;;;;;;;:35;4242:11;;;;;4186:3;4139:121;;;-1:-1:-1;4273:12:15;;3439:851;-1:-1:-1;;;;;;;3439:851:15:o;1399:20:16:-;;;;:::o;1245:30::-;;;;:::o;5048:92::-;5123:12;;5048:92;;:::o;1355:34:22:-;;;;:::o;1675:146:20:-;1723:11;1737:36;1762:10;1737:24;:36::i;:::-;1723:50;;1780:36;1797:10;1809:6;1780:16;:36::i;:::-;1675:146;:::o;3487:1895:22:-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;3618:5:22;1627:22:15;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;3652:8:22;1363:32:9;1374:8;1384:10;1363;:32::i;:::-;:77;;;;1407:33;1419:8;1429:10;1407:11;:33::i;:::-;1363:137;;;-1:-1:-1;1469:18:9;;;;:8;:18;;;;;;1452:48;;-1:-1:-1;;;;;1469:18:9;1489:10;1452:16;:48::i;:::-;1348:189;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;;;;1808:5:16;3678:22:22;;:41;3670:76;;;;;-1:-1:-1;;;3670:76:22;;;;;;;;;;;;-1:-1:-1;;;3670:76:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;3760:24:22;;3752:52;;;;;-1:-1:-1;;;3752:52:22;;;;;;;;;;;;-1:-1:-1;;;3752:52:22;;;;;;;;;;;;;;;3810:8;3821:24;3836:5;3843:1;3821:14;:24::i;:::-;-1:-1:-1;;;;;3874:17:22;;;3852:19;3874:17;;;:10;:17;;;;;;3917:22;;;;;;;3955:15;;4003:25;;;;3810:35;;-1:-1:-1;3874:17:22;;3917:22;;3955:15;4099:28;;3955:15;;3810:35;;4099:12;:28::i;:::-;4138:13;;4134:117;;4182:15;;4166:31;;;4205:39;;4218:10;;4205:12;:39::i;:::-;4283:15;4261:18;:37;4257:752;;4560:27;;;;;4532:25;;;:55;4611:15;;4595:31;;4634:34;4647:10;4659:8;4634:12;:34::i;:::-;4257:752;;;4924:36;;;;:78;;4986:15;4965:36;;4924:78;:40;:78;:::i;:::-;4896:25;;;:106;4257:752;5104:15;5074:27;;;:45;5215:1;5197:19;;5259:24;5274:8;5259:14;:24::i;:::-;5363:8;5345:10;-1:-1:-1;;;;;5316:61:22;5332:5;-1:-1:-1;;;;;5316:61:22;-1:-1:-1;;;;;;;;;;;5316:61:22;;;;;;;;;1543:1:9;;;;;1678::15;862::10;3487:1895:22;;;:::o;1666:200:11:-;1764:7;1789:11;;1781:46;;;;;-1:-1:-1;;;1781:46:11;;;;;;;;;;;;-1:-1:-1;;;1781:46:11;;;;;;;;;;;;;;;1840:21;1854:6;1840:13;:21::i;:::-;1833:28;1666:200;-1:-1:-1;;;1666:200:11:o;2412:128:18:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;2507:28:18;:12;2522:13;;2507:28;:::i;:::-;;2412:128;;:::o;1109:283:21:-;1242:10;1226:27;;;;:15;:27;;;;;;1204:49;;1196:80;;;;;-1:-1:-1;;;1196:80:21;;;;;;;;;;;;-1:-1:-1;;;1196:80:21;;;;;;;;;;;;;;;1298:10;1282:27;;;;:15;:27;;;;;;;;;:49;;;1342:45;;;;;;;;;;;;;;;;;1109:283;:::o;1668:26:16:-;;;-1:-1:-1;;;;;1668:26:16;;:::o;2479:323:20:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;2615:83:20;;;;;;;;;;;;;;;;;;;;;;;;;2705:15;:34;;;;2745:24;:52;2479:323::o;1314:2201:19:-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;1928:12:16;;1910:15;;:30;1902:56;;;;;-1:-1:-1;;;1902:56:16;;;;;;;;;;;;-1:-1:-1;;;1902:56:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;1493:24:19;;1485:52;;;;;-1:-1:-1;;;1485:52:19;;;;;;;;;;;;-1:-1:-1;;;1485:52:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;1586:22:19;;1566:17;1586:22;;;:10;:22;;;;;1619:13;;1615:183;;1720:24;1738:5;1720:17;:24::i;:::-;1752:39;1765:10;1777:5;:13;;;1752:12;:39::i;:::-;1837:15;1808:5;:25;;;:44;1804:420;;1982:18;;1952:25;;;;:49;;;:29;:49;:::i;:::-;1924:25;;;:77;1804:420;;;2199:18;;2181:15;:36;2153:25;;;:64;1804:420;2367:8;;2402:14;;:72;;;-1:-1:-1;;;2402:72:19;;-1:-1:-1;;;;;2402:72:19;;;;;;;;;;;;;;;2307:13;;;;2367:8;;2402:14;;;:42;;:72;;;;;;;;;;;;:14;:72;;;5:2:-1;;;;30:1;27;20:12;5:2;2402:72:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2402:72:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2402:72:19;;;;;;;;;-1:-1:-1;2402:72:19;-1:-1:-1;2485:27:19;;;2481:232;;;-1:-1:-1;2541:1:19;2481:232;;;2678:28;;;2481:232;2723:12;;2719:88;;2745:14;;:55;;;-1:-1:-1;;;2745:55:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2745:14:19;;;;:37;;:55;;;;;:14;;:55;;;;;;;;:14;;:55;;;5:2:-1;;;;30:1;27;20:12;5:2;2745:55:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2745:55:19;;;;2719:88;2813:14;;-1:-1:-1;;;;;2813:14:19;:32;2846:16;2864:25;2879:9;2864:14;:25::i;:::-;:50;;2912:1;2864:50;;;2892:9;2864:50;2813:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2813:102:19;-1:-1:-1;;;;;2813:102:19;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2813:102:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3023:13:19;;2948:94;;3023:13;;-1:-1:-1;;;;;;2948:94:19;;;-1:-1:-1;3023:13:19;;-1:-1:-1;;;;;;;;;;;2948:94:19;3023:13;;2948:94;3137:12;;-1:-1:-1;;;;;3137:12:19;:26;3134:136;;3191:16;3181:6;:26;;3173:57;;;;;-1:-1:-1;;;3173:57:19;;;;;;;;;;;;-1:-1:-1;;;3173:57:19;;;;;;;;;;;;;;;-1:-1:-1;3257:6:19;3134:136;3344:14;3361:32;3376:16;3361:14;:32::i;:::-;3344:49;;3459:51;3470:10;3482:9;3493;3504:5;;3459:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3459:10:19;;-1:-1:-1;;;3459:51:19:i;:::-;1964:1:16;;;;;1314:2201:19;;;;;:::o;548:19:10:-;;;-1:-1:-1;;;548:19:10;;;;;:::o;5725:151:22:-;5829:42;5846:5;5853:3;5858:8;5829:42;;;;;;;;;;;;:16;:42::i;358:47:21:-;;;;;;;;;;;;;:::o;1079:158:11:-;1150:7;1184:12;;1175:6;:21;1167:46;;;;;-1:-1:-1;;;1167:46:11;;;;;;;;;;;;-1:-1:-1;;;1167:46:11;;;;;;;;;;;;;;;-1:-1:-1;1226:6:11;1079:158::o;1768:45:16:-;1808:5;1768:45;:::o;3080:156:20:-;3171:11;3199:32;3224:6;3199:24;:32::i;1677:111:18:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1767:16:18;:4;1774:9;;1767:16;:::i;659:36:20:-;;;;:::o;5146:131:15:-;5230:7;1784:18;;;:8;:18;;;;;;5208:8;;-1:-1:-1;;;;;1784:18:15;1769:68;;;;;-1:-1:-1;;;1769:68:15;;;;;;;;;;;;-1:-1:-1;;;1769:68:15;;;;;;;;;;;;;;;-1:-1:-1;;5254:18:15;;;;:8;:18;;;;;;-1:-1:-1;;;;;5254:18:15;;5146:131::o;2776:163::-;-1:-1:-1;;;;;2878:18:15;2857:4;2878:18;;;:10;:18;;;;;:38;;;2919:15;-1:-1:-1;;2776:163:15:o;1408:877:1:-;1024:12:51;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:51;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:51;;;;;1225:18;1213:4;1225:18;;;1170:80;1618:26:1;1637:6;1618:18;:26::i;:::-;1650:47;1683:13;1650:32;:47::i;:::-;1703:58;:56;:58::i;:::-;1767:96;1806:6;1814:19;1835:9;1846:16;1767:38;:96::i;:::-;1869:57;1916:9;1869:46;:57::i;:::-;1932:56;:54;:56::i;:::-;1994:38;:36;:38::i;:::-;2038:60;2091:6;2038:52;:60::i;:::-;2250:30;-1:-1:-1;;;2250:18:1;:30::i;:::-;1268:14:51;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:51;;;1264:55;1408:877:1;;;;;;;:::o;2527:186:15:-;2603:4;-1:-1:-1;;;;;2625:20:15;;2617:48;;;;;-1:-1:-1;;;2617:48:15;;;;;;;;;;;;-1:-1:-1;;;2617:48:15;;;;;;;;;;;;;;;2678:22;2693:6;2678:14;:22::i;:::-;:30;;2707:1;2678:30;;;2703:1;2678:30;2671:37;;;2527:186;-1:-1:-1;;2527:186:15:o;1746:137:39:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:39;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:39;;;1746:137::o;856:92:20:-;898:50;;;;;;;;;;;;;;;;;;856:92;:::o;1490:27:16:-;;;;:::o;1865:160:18:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1959:24:18;:10;1972:11;;1959:24;:::i;:::-;;1994:26;2008:11;;1994:26;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;1994:26:18;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;1994:26:18;;;;-1:-1:-1;1994:26:18;;-1:-1:-1;;;;1994:26:18;1865:160;;:::o;583:756:14:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;720:6:14;716:619;732:22;;;716:619;;;769:17;789:11;;801:1;789:14;;;;;;;;;;;;;-1:-1:-1;;;;;789:14:14;769:34;;811:24;838:21;;860:1;838:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;879:23:14;;871:51;;;;;-1:-1:-1;;;871:51:14;;;;;;;;;;;;-1:-1:-1;;;871:51:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;951:21:14;;931:17;951:21;;;:10;:21;;;;;1010:25;;;;988:47;;980:76;;;;;-1:-1:-1;;;980:76:14;;;;;;;;;;;;-1:-1:-1;;;980:76:14;;;;;;;;;;;;;;;1065:24;1083:5;1065:17;:24::i;:::-;1097:38;1110:9;1121:5;:13;;;1097:12;:38::i;:::-;1143:25;;;:47;;;1307:13;;1227:101;;-1:-1:-1;;;;;1227:101:14;;;1307:13;;-1:-1:-1;;;;;;;;;;;1227:101:14;1307:13;;1227:101;-1:-1:-1;;;756:3:14;;716:619;;;;583:756;;;;:::o;624:234:35:-;1024:12:51;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:51;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:51;;;;;1225:18;1213:4;1225:18;;;1170:80;811:40:35;-1:-1:-1;;;811:18:35;:40::i;:::-;1268:14:51;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:51;;;624:234:35;:::o;6861:219:22:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;6966:55:22;;;;;;;;;;;;;;;;;7027:22;:48;6861:219::o;3612:522:20:-;3727:20;3860:4;898:50;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4006:26:20;;;;;;:15;:26;;;;;;;;;-1:-1:-1;;3781:342:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;3781:342:20;;;;;;3764:365;;;;;;;;;-1:-1:-1;;3612:522:20;;;;:::o;959:77:39:-;1023:6;;-1:-1:-1;;;;;1023:6:39;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:39;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:39;;1366:29;;1310:92;:::o;639:113:12:-;686:66;639:113;:::o;5003:98:15:-;5083:6;:13;5003:98;:::o;2124:203:18:-;2204:10;2198:24;2172:13;;2198:24;-1:-1:-1;;2198:24:18;;;;;;;;;;;2195:128;;2244:14;;;;;;;;;-1:-1:-1;;;;;2244:14:18;-1:-1:-1;;;;;2244:32:18;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2244:34:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2244:34:18;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2244:34:18;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2244:34:18;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2244:34:18;;420:4:-1;411:14;;;;2244:34:18;;;;;411:14:-1;2244:34:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2244:34:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2237:41;;;;2195:128;2306:10;2299:17;;;;;;;;;;;;;-1:-1:-1;;2299:17:18;;;;;;;;;;;;;;;;;;;;;;;;;;;2306:10;2299:17;;2306:10;2299:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:158:15;3154:4;3131:8;1627:22;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;3175:20:15;;;;;:10;:20;;;;;:28;;3050:158::o;4363:142::-;4451:4;4472:18;;;:8;:18;;;;;;;-1:-1:-1;;;;;4472:28:15;;;:18;;:28;;4363:142::o;703:27:13:-;;;-1:-1:-1;;;;;703:27:13;;:::o;2114:256:15:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;2201:6:15;1627:22;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;2235:18:15;;2217:15;2235:18;;;:10;:18;;;;;;2285:15;2259:23;;;:41;2353:11;;2343:22;;2235:18;;2343:22;;;1678:1;1219::39;2114:256:15;:::o;2304:257:9:-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;2411:17:9;;2418:10;2411:17;;2403:42;;;;;-1:-1:-1;;;2403:42:9;;;;;;;;;;;;-1:-1:-1;;;2403:42:9;;;;;;;;;;;;;;;2475:10;2451:35;;;;:23;:35;;;;;;;;-1:-1:-1;;;;;2451:40:9;;;;;;;;;;;;:52;;-1:-1:-1;;2451:52:9;;;;;;;;;;2514:42;;;;;;;2451:40;;2475:10;2514:42;;;;;;;;;;;2304:257;;:::o;4245:469:16:-;796:25:17;810:10;796:13;:25::i;:::-;788:97;;;;-1:-1:-1;;;788:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;4398:8:16;;4438:12;;-1:-1:-1;;;;;4438:12:16;;;;4471:27;;;;:70;;;4540:1;4509:13;-1:-1:-1;;;;;4502:33:16;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4502:35:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4502:35:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4502:35:16;:39;4471:70;4456:114;;;;;-1:-1:-1;;;4456:114:16;;;;;;;;;;;;-1:-1:-1;;;4456:114:16;;;;;;;;;;;;;;;4576:8;:20;;;4602:12;:28;;-1:-1:-1;;;;;;4602:28:16;-1:-1:-1;;;;;4602:28:16;;;;;;;;;;;4641:68;;;;;;;;;;;;;;;;;;;4696:12;;;;4641:68;;;;;;;;;;;;;;;862:1:10;;4245:469:16;;:::o;700:27:20:-;;;;:::o;1212:514:10:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1278:7:10;;-1:-1:-1;;;1278:7:10;;;;:16;1270:42;;;;;-1:-1:-1;;;1270:42:10;;;;;;;;;;;;-1:-1:-1;;;1270:42:10;;;;;;;;;;;;;;;1324;;;1332:21;1324:42;;;;1355:10;;1324:42;;;;;;;;;;1452:12;;1442:76;;-1:-1:-1;;;;;1452:12:10;1466:10;1478:39;1452:12;1511:4;1478:10;:39::i;:::-;1442:9;:76::i;:::-;1537:10;1524:24;901:110:17;962:4;981:25;:12;998:7;981:25;:16;:25;:::i;4657:192:15:-;-1:-1:-1;;;;;1431:18:15;;4775:14;1431:18;;;:10;:18;;;;;:38;;;4754:6;;1416:86;;;;;-1:-1:-1;;;1416:86:15;;;;;;;;;;;;-1:-1:-1;;;1416:86:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;4806:18:15;;;;;:10;:18;;;;;:38;;;;4657:192::o;475:111:12:-;520:66;475:111;:::o;6435:356:22:-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;6598:8:22;1363:32:9;1374:8;1384:10;1363;:32::i;:::-;:77;;;;1407:33;1419:8;1429:10;1407:11;:33::i;:::-;1363:137;;;-1:-1:-1;1469:18:9;;;;:8;:18;;;;;;1452:48;;-1:-1:-1;;;;;1469:18:9;1489:10;1452:16;:48::i;:::-;1348:189;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;;;;6624:18:22;;;;:8;:18;;;;;;-1:-1:-1;;;;;6624:18:22;1627:22:15;6624:18:22;1627:14:15;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;6652:34:22;6665:5;6672:3;6677:8;6652:12;:34::i;:::-;6700:51;6723:5;6730:3;6735:8;6745:5;6700:22;:51::i;:::-;6692:93;;;;;-1:-1:-1;;;6692:93:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:1:9;862::10;6435:356:22;;;;:::o;963:114:10:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;1042:9;;;;;;;1057:7;:15;;-1:-1:-1;;;;1057:15:10;;;963:114::o;741:142:39:-;1024:12:51;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:51;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:51;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:39;:15;;-1:-1:-1;;;;;;806:15:39;-1:-1:-1;;;;;806:15:39;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:39;;-1:-1:-1;;836:40:39;1268:14:51;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:51;;;1264:55;741:142:39;;:::o;2873:381:18:-;1814:1:15;1784:18;;;:8;:18;;;;;;2967:13:18;;2945:8;;-1:-1:-1;;;;;1784:18:15;1769:68;;;;;-1:-1:-1;;;1769:68:15;;;;;;;;;;;;-1:-1:-1;;;1769:68:15;;;;;;;;;;;;;;;3022:12:18;3016:26;2990:17;;3016:26;-1:-1:-1;;3016:26:18;;;;;;;;;;;3013:131;;3063:14;;;;;;;;;-1:-1:-1;;;;;3063:14:18;-1:-1:-1;;;;;3063:33:18;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3063:35:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3063:35:18;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3063:35:18;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3063:35:18;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3063:35:18;;420:4:-1;411:14;;;;3063:35:18;;;;;411:14:-1;3063:35:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3063:35:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3057:41;;3013:131;;;3125:12;3119:18;;;;;;;;;;;;;-1:-1:-1;;3119:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;3125:12;3119:18;;3125:12;3119:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3013:131;3157:92;3178:27;3186:4;3178:25;:27::i;:::-;3157:92;;;;;;;;;;;;;-1:-1:-1;;;3157:92:18;;;3224:19;:8;:17;:19::i;:::-;3157:3;;:92;;;:13;:92;:::i;:::-;3150:99;2873:381;-1:-1:-1;;;;2873:381:18:o;2057:355:20:-;2202:53;2233:9;2244:10;2202:30;:53::i;:::-;2263:9;2280:2;2290;2300;773:9:21;-1:-1:-1;;;;;671:111:21;:98;690:35;719:5;690:28;:35::i;:::-;735:2;747;759;671:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;671:98:21;;;;;;;;-1:-1:-1;;;;;671:111:21;;656:153;;;;;-1:-1:-1;;;656:153:21;;;;;;;;;;;;-1:-1:-1;;;656:153:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;815:26:21;;;;;;:15;:26;;;;;;;;;:28;;;;;;;;854:51;;;;;;;;;;;;;;;;;2317:11:20;2331:35;2356:9;2331:24;:35::i;:::-;2317:49;;2372:35;2389:9;2400:6;2372:16;:35::i;2704:84:16:-;2782:1;2704:84;:::o;1015:130:17:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1079:25:17;:12;1096:7;1079:25;:16;:25;:::i;:::-;1115;;-1:-1:-1;;;;;1115:25:17;;;;;;;;1015:130;:::o;1038:255:13:-;1136:4;-1:-1:-1;;;;;1153:27:13;;1150:139;;-1:-1:-1;;;;;;1197:16:13;;;1190:23;;1150:139;1248:13;-1:-1:-1;;;;;1241:31:13;;1273:8;1241:41;;;;;;;;;;;;;-1:-1:-1;;;;;1241:41:13;-1:-1:-1;;;;;1241:41:13;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1241:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1241:41:13;;-1:-1:-1;1234:48:13;;321:103:12;381:42;321:103;:::o;3175:166:9:-;-1:-1:-1;;;;;3294:31:9;;;3273:4;3294:31;;;:23;:31;;;;;;;;:42;;;;;;;;;;;;;;;3175:166::o;1149:121:17:-;1193:31;:12;1213:10;1193:31;:19;:31;:::i;:::-;1235:30;;1254:10;;1235:30;;;;;1149:121::o;1688:1795:22:-;829:7:10;;-1:-1:-1;;;829:7:10;;;;821:35;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;-1:-1:-1;;;821:35:10;;;;;;;;;;;;;;;1818:8:22;1363:32:9;1374:8;1384:10;1363;:32::i;:::-;:77;;;;1407:33;1419:8;1429:10;1407:11;:33::i;:::-;1363:137;;;-1:-1:-1;1469:18:9;;;;:8;:18;;;;;;1452:48;;-1:-1:-1;;;;;1469:18:9;1489:10;1452:16;:48::i;:::-;1348:189;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;-1:-1:-1;;;1348:189:9;;;;;;;;;;;;;;;1808:5:16;1844:22:22;;:41;1836:76;;;;;-1:-1:-1;;;1836:76:22;;;;;;;;;;;;-1:-1:-1;;;1836:76:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;1926:17:22;;1918:45;;;;;-1:-1:-1;;;1918:45:22;;;;;;;;;;;;-1:-1:-1;;;1918:45:22;;;;;;;;;;;;;;;1969:16;1988:18;;;:8;:18;;;;;;-1:-1:-1;;;;;1988:18:22;2020:24;1988:18;2020:14;:24::i;:::-;2012:50;;;;;-1:-1:-1;;;2012:50:22;;;;;;;;;;;;-1:-1:-1;;;2012:50:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;2090:20:22;;;2068:19;2090:20;;;:10;:20;;;;;;2136:15;;;;;;;2169:13;;2273:27;;;;2136:15;;2169:13;;2303:15;2273:45;;2068:19;2400:37;2101:8;2425:11;2400:14;:37::i;:::-;2389:48;-1:-1:-1;2443:16:22;2462:20;:11;2389:48;2462:20;:15;:20;:::i;:::-;2443:39;;2556:13;2542:11;:27;2539:478;;;2626:11;2619:18;;2706:42;2719:8;2729:11;2742:5;2706:12;:42::i;:::-;2539:478;;;2820:39;2835:8;2845:13;2820:14;:39::i;:::-;2931:15;2901:27;;;:45;2991:19;;2874;;;;-1:-1:-1;2814:45:22;;-1:-1:-1;3001:8:22;;2991:19;;;;;2539:478;3027:13;;3023:208;;3055:24;3073:5;3055:17;:24::i;:::-;3087:23;3100:3;3105:4;3087:12;:23::i;:::-;3123:101;;3212:4;;-1:-1:-1;;;;;3123:101:22;;;3149:1;;-1:-1:-1;;;;;;;;;;;3123:101:22;3149:1;;3123:101;3023:208;3263:30;3276:4;3282;3288;3263:12;:30::i;:::-;3368:4;3357:3;-1:-1:-1;;;;;3325:53:22;3341:8;-1:-1:-1;;;;;3325:53:22;-1:-1:-1;;;;;;;;;;;3325:53:22;;;;;;;;;3393:51;3416:8;3426:3;3431:8;3393:51;;;;;;;;;;;;:22;:51::i;:::-;3385:93;;;;;-1:-1:-1;;;3385:93:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:1:9;;;;;;;;862::10;1688:1795:22;;;:::o;2032:107:39:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;3419:569:16:-;2045:7;:5;:7::i;:::-;-1:-1:-1;;;;;2031:21:16;:10;-1:-1:-1;;;;;2031:21:16;;:50;;;-1:-1:-1;2070:11:16;;-1:-1:-1;;;;;2070:11:16;2056:10;:25;2031:50;2016:111;;;;;-1:-1:-1;;;2016:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;3530:12;3545:40;3556:13;3579:4;3545:10;:40::i;:::-;3530:55;-1:-1:-1;3591:11:16;3611:12;;;:33;;;3637:7;3627;:17;3611:33;3608:166;;;3676:1;3666:7;:11;3658:40;;;;;-1:-1:-1;;;3658:40:16;;;;;;;;;;;;-1:-1:-1;;;3658:40:16;;;;;;;;;;;;;;;-1:-1:-1;3715:7:16;3608:166;;;-1:-1:-1;3760:7:16;3608:166;3823:11;;3785:58;;;;;;;;-1:-1:-1;;;;;3823:11:16;;;;3785:58;;;3796:10;;3785:58;;;;;;;;;3963:11;;3938:45;;3948:13;;-1:-1:-1;;;;;3963:11:16;3976:6;3938:9;:45::i;:::-;2133:1;;3419:569;;:::o;1413:154:20:-;1163:9:39;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:39;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:39;;;;;;;;;;;;;;;1508:9:20;1627:22:15;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;1527:35:20;1544:9;1555:6;1527:16;:35::i;7337:571:22:-;7454:4;7433:6;1627:22:15;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;7486:18:22;;7468:15;7486:18;;;:10;:18;;;;;;7468:15;7687:10;7684:131;;7750:15;7724:3;:23;;;:41;7707:58;;7684:131;;;7803:5;7786:22;;7684:131;1808:5:16;7826:42:22;7845:22;;7826:14;:18;;:42;;;;:::i;:::-;:61;;;;;;;7337:571;-1:-1:-1;;;;;;;7337:571:22:o;3429:143:9:-;3519:4;3540:18;;;:8;:18;;;;;;;-1:-1:-1;;;;;3540:27:9;;;:18;;:27;;3429:143::o;5023:999:20:-;5135:11;5114:6;1627:22:15;1642:6;1627:14;:22::i;:::-;1612:60;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;-1:-1:-1;;;1612:60:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;5174:18:20;;5156:15;5174:18;;;:10;:18;;;;;5311:23;;;;5396:18;;5377:15;;5337;5311:41;;;;5361:31;;:53;5358:245;;5433:8;;5424:17;;5358:245;;;5578:18;;5548:8;;:27;;5561:13;5548:27;:12;:27;:::i;:::-;:48;;;;;;5539:57;;5358:245;5665:15;;:20;;:76;;;5723:18;;5705:15;;5689:13;:31;:52;5665:76;5662:356;;;5755:12;1808:5:16;5770:38:20;5783:24;;5770:8;;:12;;:38;;;;:::i;:::-;:57;;;;;;5755:72;;5848:7;5839:6;:16;5835:177;;;5961:7;5951:17;;;;5835:177;;;6002:1;5993:10;;5835:177;5662:356;;1678:1:15;;5023:999:20;;;;:::o;4239:589::-;-1:-1:-1;;;;;4344:21:20;;4326:15;4344:21;;;:10;:21;;;;;;;;;4387:11;;4377:53;;;;;;;4344:21;;4411:10;;4344:21;;4387:11;;4377:53;;;;;;;;;;;4626:15;4600:23;;;:41;4652:10;;4648:138;;4747:12;;4737:42;;-1:-1:-1;;;;;4747:12:20;4761:9;4772:6;4737:9;:42::i;:::-;4792:31;4805:9;4816:6;4792:12;:31::i;8321:679:22:-;8423:18;8444;;;:8;:18;;;;;;-1:-1:-1;;;;;8444:18:22;8476:24;8468:53;;;;;-1:-1:-1;;;8468:53:22;;;;;;;;;;;;-1:-1:-1;;;8468:53:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;8545:22:22;;8527:15;8545:22;;;:10;:22;;;;;8596:23;;;;8545:22;;8641:26;8556:10;8641:14;:26::i;:::-;8625:42;;8676:8;8673:267;;;8697:8;8694:165;;;8743:28;:15;8763:7;8743:28;:19;:28;:::i;:::-;8717:23;;;:54;8694:165;;;8822:28;:15;8842:7;8822:28;:19;:28;:::i;:::-;8796:23;;;:54;8694:165;8673:267;;;8905:28;:15;8925:7;8905:28;:19;:28;:::i;:::-;8879:23;;;:54;8673:267;8950:45;;;;;;;;;;;;;;;8967:8;;8950:45;;;;;;;;8321:679;;;;;;;:::o;5771:285:15:-;5857:18;;;;:8;:18;;;;;;-1:-1:-1;;;;;5857:28:15;;;:18;;:28;5853:199;;5945:6;27:10:-1;;39:1;23:18;;45:23;;;5945:19:15;;;;-1:-1:-1;;;;;5945:19:15;;-1:-1:-1;;;;;;5945:19:15;;;;;;;;-1:-1:-1;6018:18:15;;;:8;5945:19;6018:18;;;;:27;;;;;;;;;;5771:285;;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:155:9;3817:1;3787:18;;;:8;:18;;;;;;-1:-1:-1;;;;;3787:18:9;:32;3783:84;;3858:1;3829:18;;;:8;:18;;;;;:31;;-1:-1:-1;;;;;;3829:31:9;;;3716:155::o;5394:319:15:-;5468:12;;5464:245;;5572:12;:14;;;;;;;;5675:27;;5394:319::o;1590:384:13:-;1653:4;1670:10;;1667:303;;1693:12;;-1:-1:-1;;;;;1693:12:13;1690:274;;1752:6;1739:9;:19;;1731:48;;;;;-1:-1:-1;;;1731:48:13;;;;;;;;;;;;-1:-1:-1;;;1731:48:13;;;;;;;;;;;;;;;-1:-1:-1;1796:9:13;1789:16;;1690:274;1852:12;;-1:-1:-1;;;;;1852:12:13;1875:57;1852:12;1898:10;1918:4;1925:6;1875:57;:22;:57;:::i;:::-;1949:6;1942:13;;;;;864:359:12;1047:11;;1015:64;;;-1:-1:-1;;;1015:64:12;;-1:-1:-1;;;;;1047:11:12;;;1015:64;;;;520:66;1015:64;;;;;-1:-1:-1;;381:42:12;;1015:31;;:64;;;;;;;;;;;;;;;381:42;1015:64;;;5:2:-1;;;;30:1;27;20:12;5:2;1015:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1015:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1015:64:12;;-1:-1:-1;;;;;;1088:25:12;;;1085:134;;1127:85;;-1:-1:-1;;;1127:85:12;;1166:10;1127:85;;;;;;-1:-1:-1;;;;;1127:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;1166:10;1178:3;;1183:9;;1194:10;;1206:5;;1127:85;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1127:85:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1127:85:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1127:85:12;;;;864:359;;;;;:::o;1409:467:51:-;1842:7;1830:20;1864:7;1409:467;:::o;735:232:13:-;814:12;:28;;-1:-1:-1;;;;;;814:28:13;-1:-1:-1;;;;;814:28:13;;;;;;;;863:27;;:70;;;932:1;901:13;-1:-1:-1;;;;;894:33:13;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:35:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;894:35:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;894:35:13;:39;863:70;848:114;;;;;-1:-1:-1;;;848:114:13;;;;;;;;;;;;-1:-1:-1;;;848:114:13;;;;;;;;;;;;;;659:84:10;724:7;:14;;-1:-1:-1;;;;724:14:10;-1:-1:-1;;;724:14:10;;;659:84::o;2143:487:16:-;2332:24;2309:19;:47;;2301:84;;;;;-1:-1:-1;;;2301:84:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:14;:36;;2416:10;-1:-1:-1;;;;;;2391:36:16;;;;;;;2487:11;:26;;;;;-1:-1:-1;;;;;2487:26:16;;;;;;;;;;;2519:18;:40;;;;2565:8;:20;2591:15;:34;2143:487::o;1260:330:18:-;1348:19;:17;:19::i;:::-;1373:16;;;;:4;;:16;;;;;:::i;:::-;-1:-1:-1;1555:30:18;-1:-1:-1;;;1555:18:18;:30::i;452:389:11:-;806:30;-1:-1:-1;;;806:18:11;:30::i;:::-;452:389::o;1171:110:20:-;1272:4;1245:24;:31;1171:110::o;608:143:17:-;685:21;699:6;685:13;:21::i;:::-;680:67;;716:24;:12;733:6;716:24;:16;:24;:::i;1533:190:35:-;-1:-1:-1;;;;;;1608:25:35;;;;;1600:66;;;;;-1:-1:-1;;;1600:66:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1676:33:35;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1676:40:35;1712:4;1676:40;;;1533:190::o;867:96:30:-;946:10;867:96;:::o;2125:421:13:-;2230:11;;2227:315;;-1:-1:-1;;;;;2254:27:13;;2251:285;;2384:40;-1:-1:-1;;;;;2384:31:13;;2416:7;2384:40;:31;:40;:::i;:::-;2251:285;;;2471:13;2495:32;-1:-1:-1;;;;;2495:18:13;;2514:3;2519:7;2495:32;:18;:32;:::i;779:200:31:-;851:4;-1:-1:-1;;;;;875:21:31;;867:68;;;;-1:-1:-1;;;867:68:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:31;:11;:20;;;;;;;;;;;;;;;779:200::o;9503:347:22:-;9644:4;9663:15;:2;-1:-1:-1;;;;;9663:13:22;;:15::i;:::-;9658:48;;-1:-1:-1;9695:4:22;9688:11;;9658:48;9727:77;;-1:-1:-1;;;9727:77:22;;9771:10;9727:77;;;;;;-1:-1:-1;;;;;9727:77:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;9711:13;;9727:36;;;;;;9771:10;;9783:4;;9789:7;;9798:5;;9727:77;;;;;;;;;;;9711:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9727:77:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9727:77:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9727:77:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9727:77:22;-1:-1:-1;;;;;;9818:26:22;-1:-1:-1;;;9818:26:22;;-1:-1:-1;;9503:347:22;;;;;;:::o;1533:439:4:-;1671:42;;;;;;;;;;;-1:-1:-1;;;1671:42:4;;;;1738:13;;1748:2;1738:13;;;1603;1738;;;;;;-1:-1:-1;;;;;1650:14:4;;;1671:42;1603:13;;1738;;;21:6:-1;;104:10;1738:13:4;87:34:-1;135:17;;-1:-1;1738:13:4;1719:32;;-1:-1:-1;;;1757:3:4;1761:1;1757:6;;;;;;;;;;;:12;-1:-1:-1;;;;;1757:12:4;;;;;;;;;-1:-1:-1;;;1775:3:4;1779:1;1775:6;;;;;;;;;;;:12;-1:-1:-1;;;;;1775:12:4;;;;;;;;-1:-1:-1;1798:6:4;1793:151;1814:2;1810:1;:6;1793:151;;;1844:8;1876:1;1859:5;1865:1;1869:2;1865:6;1859:13;;;;;;;;;;-1:-1:-1;;;;;1859:18:4;;;;1853:25;;1844:35;;;;;;;;;;;;;;;;;;1831:3;1837:1;1839;1837:3;1835:1;:5;1831:10;;;;;;;;;;;:48;-1:-1:-1;;;;;1831:48:4;;;;;;;;;1900:8;1915:5;1921:1;1925:2;1921:6;1915:13;;;;;;;1900:37;;1915:13;;;1931:4;1909:27;;1900:37;;;;;;;;;;;;;;1887:3;1893:1;1895;1893:3;1891:1;:5;1887:10;;;;;;;;;;;:50;-1:-1:-1;;;;;1887:50:4;;;;;;;;-1:-1:-1;1818:3:4;;1793:151;;;-1:-1:-1;1963:3:4;1533:439;-1:-1:-1;;;;1533:439:4:o;1039:490::-;1101:27;1220:2;1232:7;1228:38;;-1:-1:-1;;1249:10:4;;;;;;;;;;;;-1:-1:-1;;;1249:10:4;;;;;;1228:38;1280:2;1271:6;1302:50;1309:6;;1302:50;;1325:5;;1343:2;1338:7;;;;1302:50;;;1357:17;1387:3;1377:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;1377:14:4;87:34:-1;135:17;;-1:-1;1377:14:4;-1:-1:-1;1357:34:4;-1:-1:-1;;;1406:7:4;;1419:81;1426:6;;1419:81;;1474:2;1470:1;:6;1465:2;:11;1454:24;;1442:4;1447:3;;;;;;;1442:9;;;;;;;;;;;:36;-1:-1:-1;;;;;1442:36:4;;;;;;;;-1:-1:-1;1491:2:4;1486:7;;;;1419:81;;;-1:-1:-1;1519:4:4;1039:490;-1:-1:-1;;;;;1039:490:4:o;247:788::-;385:33;428:16;453:2;428:28;;462:16;487:2;462:28;;496:16;521:2;496:28;;530:16;555:2;530:28;;564:18;635:3;:10;622:3;:10;609:3;:10;596:3;:10;:23;:36;:49;585:61;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;585:61:4;87:34:-1;135:17;;-1:-1;585:61:4;-1:-1:-1;564:82:4;-1:-1:-1;564:82:4;690:6;;722:67;738:3;:10;734:1;:14;722:67;;;776:3;780:1;776:6;;;;;;;;;;;;;;;;763:5;769:3;;;;;;763:10;;;;;;;;;;;:19;-1:-1:-1;;;;;763:19:4;;;;;;;;-1:-1:-1;750:3:4;;722:67;;;-1:-1:-1;803:1:4;794:67;810:3;:10;806:1;:14;794:67;;;848:3;852:1;848:6;;;;;;;;;;;;;;;;835:5;841:3;;;;;;835:10;;;;;;;;;;;:19;-1:-1:-1;;;;;835:19:4;;;;;;;;-1:-1:-1;822:3:4;;794:67;;;-1:-1:-1;875:1:4;866:67;882:3;:10;878:1;:14;866:67;;;920:3;924:1;920:6;;;;;;;;;;;;;;;;907:5;913:3;;;;;;907:10;;;;;;;;;;;:19;-1:-1:-1;;;;;907:19:4;;;;;;;;-1:-1:-1;894:3:4;;866:67;;;-1:-1:-1;947:1:4;938:67;954:3;:10;950:1;:14;938:67;;;992:3;996:1;992:6;;;;;;;;;;;;;;;;979:5;985:3;;;;;;979:10;;;;;;;;;;;:19;-1:-1:-1;;;;;979:19:4;;;;;;;;-1:-1:-1;966:3:4;;938:67;;;-1:-1:-1;1024:5:4;;247:788;-1:-1:-1;;;;;;;;;;;247:788:4:o;3381:265:34:-;3580:58;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3580:58:34;;;;;;;3570:69;;;;;;3381:265::o;260:175:31:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:31;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:31;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:31;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:31;;;510:180::o;2240:225:39:-;-1:-1:-1;;;;;2313:22:39;;2305:73;;;;-1:-1:-1;;;2305:73:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:39;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:39;-1:-1:-1;;;;;2441:17:39;;;;;;;;;;2240:225::o;2159:459:38:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:38;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:294:12;1473:11;;1441:66;;;-1:-1:-1;;;1441:66:12;;-1:-1:-1;;;;;1473:11:12;;;1441:66;;;;686;1441;;;;;-1:-1:-1;;381:42:12;;1441:31;;:66;;;;;;;;;;;;;;;381:42;1441:66;;;5:2:-1;;;;30:1;27;20:12;5:2;1441:66:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1441:66:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1441:66:12;;-1:-1:-1;;;;;;1516:25:12;;;1513:115;;1555:66;;;-1:-1:-1;;;1555:66:12;;1596:10;1555:66;;;;-1:-1:-1;;;;;1555:66:12;;;;;;;;;;;;;;;:40;;;;;;:66;;;;;-1:-1:-1;;1555:66:12;;;;;;;;-1:-1:-1;1555:40:12;:66;;;5:2:-1;;;;30:1;27;20:12;5:2;1555:66:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1274:134:38;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;842:202:45:-;968:68;;;-1:-1:-1;;;;;968:68:45;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:45;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:45;;961:5;;942:18;:95::i;2645:365:49:-;2759:6;2734:21;:31;;2726:73;;;;;-1:-1:-1;;;2726:73:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:32;;2865:12;;-1:-1:-1;;;;;2883:14:49;;;2904:6;;2865:12;2883:32;2865:12;2883:32;2904:6;2883:14;:32;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2864:51:49;;;2933:7;2925:78;;;;-1:-1:-1;;;2925:78:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:174:45;770:58;;;-1:-1:-1;;;;;770:58:45;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:45;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:45;;763:5;;744:18;:85::i;557:797:49:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:49;;;557:797;-1:-1:-1;;557:797:49:o;1732:187:38:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:38;;;1732:187::o;2666:1095:45:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:45;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:45;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:45;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:45;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:45;3659:85;;;;-1:-1:-1;;;3659:85:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:1204:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1083:1204:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1083:1204:1;;;-1:-1:-1;1083:1204:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.14;\n\n\nimport './interfaces/IPublicLock.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol';\nimport './mixins/MixinApproval.sol';\nimport './mixins/MixinDisableAndDestroy.sol';\nimport './mixins/MixinERC721Enumerable.sol';\nimport './mixins/MixinEventHooks.sol';\nimport './mixins/MixinFunds.sol';\nimport './mixins/MixinGrantKeys.sol';\nimport './mixins/MixinKeys.sol';\nimport './mixins/MixinLockCore.sol';\nimport './mixins/MixinLockMetadata.sol';\nimport './mixins/MixinPurchase.sol';\nimport './mixins/MixinRefunds.sol';\nimport './mixins/MixinTransfer.sol';\nimport './mixins/MixinSignatures.sol';\nimport './mixins/MixinLockManagerRole.sol';\n\n\n/**\n * @title The Lock contract\n * @author Julien Genestoux (unlock-protocol.com)\n * @dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\n * Every ERC-721 compliant contract must implement the ERC165 interface.\n * https://eips.ethereum.org/EIPS/eip-721\n */\ncontract PublicLock is\n  IPublicLock,\n  ERC165,\n  Ownable,\n  MixinSignatures,\n  MixinFunds,\n  MixinDisableAndDestroy,\n  MixinLockManagerRole,\n  MixinLockCore,\n  MixinKeys,\n  MixinLockMetadata,\n  MixinERC721Enumerable,\n  MixinEventHooks,\n  MixinGrantKeys,\n  MixinPurchase,\n  MixinApproval,\n  MixinTransfer,\n  MixinRefunds\n{\n  function initialize(\n    address _owner,\n    uint _expirationDuration,\n    address _tokenAddress,\n    uint _keyPrice,\n    uint _maxNumberOfKeys,\n    string memory _lockName\n  ) public\n    initializer()\n  {\n    Ownable.initialize(_owner);\n    MixinFunds._initializeMixinFunds(_tokenAddress);\n    MixinDisableAndDestroy._initializeMixinDisableAndDestroy();\n    MixinLockCore._initializeMixinLockCore(_owner, _expirationDuration, _keyPrice, _maxNumberOfKeys);\n    MixinLockMetadata._initializeMixinLockMetadata(_lockName);\n    MixinERC721Enumerable._initializeMixinERC721Enumerable();\n    MixinRefunds._initializeMixinRefunds();\n    MixinLockManagerRole._initializeMixinLockManagerRole(_owner);\n    // registering the interface for erc721 with ERC165.sol using\n    // the ID specified in the standard: https://eips.ethereum.org/EIPS/eip-721\n    _registerInterface(0x80ac58cd);\n  }\n}\n",
  "sourcePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
  "ast": {
    "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
    "exportedSymbols": {
      "PublicLock": [
        180
      ]
    },
    "id": 181,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol",
        "file": "./interfaces/IPublicLock.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1289,
        "src": "26:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 5485,
        "src": "65:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 5059,
        "src": "148:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol",
        "file": "./mixins/MixinApproval.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1615,
        "src": "234:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisableAndDestroy.sol",
        "file": "./mixins/MixinDisableAndDestroy.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1705,
        "src": "271:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol",
        "file": "./mixins/MixinERC721Enumerable.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1766,
        "src": "317:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinEventHooks.sol",
        "file": "./mixins/MixinEventHooks.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1857,
        "src": "362:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol",
        "file": "./mixins/MixinFunds.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2025,
        "src": "401:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol",
        "file": "./mixins/MixinGrantKeys.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2119,
        "src": "435:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol",
        "file": "./mixins/MixinKeys.sol",
        "id": 68,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2497,
        "src": "473:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol",
        "file": "./mixins/MixinLockCore.sol",
        "id": 69,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2780,
        "src": "506:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol",
        "file": "./mixins/MixinLockMetadata.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3042,
        "src": "543:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol",
        "file": "./mixins/MixinPurchase.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3238,
        "src": "584:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol",
        "file": "./mixins/MixinRefunds.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3550,
        "src": "621:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol",
        "file": "./mixins/MixinTransfer.sol",
        "id": 73,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 4246,
        "src": "657:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol",
        "file": "./mixins/MixinSignatures.sol",
        "id": 74,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3634,
        "src": "694:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol",
        "file": "./mixins/MixinLockManagerRole.sol",
        "id": 75,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2878,
        "src": "733:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 76,
              "name": "IPublicLock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1288,
              "src": "1108:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPublicLock_$1288",
                "typeString": "contract IPublicLock"
              }
            },
            "id": 77,
            "nodeType": "InheritanceSpecifier",
            "src": "1108:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5058,
              "src": "1123:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$5058",
                "typeString": "contract ERC165"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "1123:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5484,
              "src": "1133:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5484",
                "typeString": "contract Ownable"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "1133:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 82,
              "name": "MixinSignatures",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3633,
              "src": "1144:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinSignatures_$3633",
                "typeString": "contract MixinSignatures"
              }
            },
            "id": 83,
            "nodeType": "InheritanceSpecifier",
            "src": "1144:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 84,
              "name": "MixinFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2024,
              "src": "1163:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinFunds_$2024",
                "typeString": "contract MixinFunds"
              }
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "1163:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 86,
              "name": "MixinDisableAndDestroy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1704,
              "src": "1177:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinDisableAndDestroy_$1704",
                "typeString": "contract MixinDisableAndDestroy"
              }
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:22:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 88,
              "name": "MixinLockManagerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2877,
              "src": "1203:20:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockManagerRole_$2877",
                "typeString": "contract MixinLockManagerRole"
              }
            },
            "id": 89,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:20:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 90,
              "name": "MixinLockCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2779,
              "src": "1227:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockCore_$2779",
                "typeString": "contract MixinLockCore"
              }
            },
            "id": 91,
            "nodeType": "InheritanceSpecifier",
            "src": "1227:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 92,
              "name": "MixinKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2496,
              "src": "1244:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeys_$2496",
                "typeString": "contract MixinKeys"
              }
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 94,
              "name": "MixinLockMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3041,
              "src": "1257:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockMetadata_$3041",
                "typeString": "contract MixinLockMetadata"
              }
            },
            "id": 95,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "MixinERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1765,
              "src": "1278:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinERC721Enumerable_$1765",
                "typeString": "contract MixinERC721Enumerable"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "1278:21:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "MixinEventHooks",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1856,
              "src": "1303:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinEventHooks_$1856",
                "typeString": "contract MixinEventHooks"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1303:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MixinGrantKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "1322:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinGrantKeys_$2118",
                "typeString": "contract MixinGrantKeys"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "1322:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 102,
              "name": "MixinPurchase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3237,
              "src": "1340:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinPurchase_$3237",
                "typeString": "contract MixinPurchase"
              }
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 104,
              "name": "MixinApproval",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1614,
              "src": "1357:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinApproval_$1614",
                "typeString": "contract MixinApproval"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "1357:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 106,
              "name": "MixinTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4245,
              "src": "1374:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinTransfer_$4245",
                "typeString": "contract MixinTransfer"
              }
            },
            "id": 107,
            "nodeType": "InheritanceSpecifier",
            "src": "1374:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 108,
              "name": "MixinRefunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3549,
              "src": "1391:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinRefunds_$3549",
                "typeString": "contract MixinRefunds"
              }
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "1391:12:1"
          }
        ],
        "contractDependencies": [
          1288,
          1614,
          1704,
          1765,
          1856,
          2024,
          2118,
          2496,
          2779,
          2877,
          3041,
          3237,
          3549,
          3633,
          4245,
          4589,
          5058,
          5068,
          5484,
          6530,
          6560,
          6795
        ],
        "contractKind": "contract",
        "documentation": "@title The Lock contract\n@author Julien Genestoux (unlock-protocol.com)\n@dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\nEvery ERC-721 compliant contract must implement the ERC165 interface.\nhttps://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 180,
        "linearizedBaseContracts": [
          180,
          3549,
          4245,
          1614,
          3237,
          2118,
          1856,
          1765,
          3041,
          2496,
          2779,
          2877,
          1704,
          2024,
          3633,
          5484,
          4589,
          5058,
          1288,
          6560,
          6530,
          5068,
          6795
        ],
        "name": "PublicLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1612:673:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1637:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5484,
                        "src": "1618:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$5484_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5395,
                      "src": "1618:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1683:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "MixinFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "1650:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinFunds_$2024_$",
                          "typeString": "type(contract MixinFunds)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1899,
                      "src": "1650:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "MixinDisableAndDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1703:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinDisableAndDestroy_$1704_$",
                          "typeString": "type(contract MixinDisableAndDestroy)"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinDisableAndDestroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1640,
                      "src": "1703:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1806:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_expirationDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1814:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_keyPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1835:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_maxNumberOfKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1846:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "MixinLockCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "1767:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockCore_$2779_$",
                          "typeString": "type(contract MixinLockCore)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2628,
                      "src": "1767:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_lockName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1916:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "MixinLockMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "1869:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockMetadata_$3041_$",
                          "typeString": "type(contract MixinLockMetadata)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2933,
                      "src": "1869:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "MixinERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "1932:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinERC721Enumerable_$1765_$",
                          "typeString": "type(contract MixinERC721Enumerable)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinERC721Enumerable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "1932:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "MixinRefunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3549,
                        "src": "1994:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinRefunds_$3549_$",
                          "typeString": "type(contract MixinRefunds)"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3294,
                      "src": "1994:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2091:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "MixinLockManagerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2038:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockManagerRole_$2877_$",
                          "typeString": "type(contract MixinLockManagerRole)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockManagerRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2817,
                      "src": "2038:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783830616335386364",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2269:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        },
                        "value": "0x80ac58cd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        }
                      ],
                      "id": 174,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5053,
                      "src": "2250:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6776,
                  "src": "1596:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:13:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1433:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_expirationDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1453:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1483:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_keyPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1510:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_maxNumberOfKeys",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1530:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_lockName",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1557:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:157:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:1"
            },
            "scope": 180,
            "src": "1408:877:1",
            "stateMutability": "nonpayable",
            "superFunction": 960,
            "visibility": "public"
          }
        ],
        "scope": 181,
        "src": "1083:1204:1"
      }
    ],
    "src": "0:2288:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/PublicLock.sol",
    "exportedSymbols": {
      "PublicLock": [
        180
      ]
    },
    "id": 181,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/interfaces/IPublicLock.sol",
        "file": "./interfaces/IPublicLock.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1289,
        "src": "26:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 5485,
        "src": "65:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 5059,
        "src": "148:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinApproval.sol",
        "file": "./mixins/MixinApproval.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1615,
        "src": "234:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinDisableAndDestroy.sol",
        "file": "./mixins/MixinDisableAndDestroy.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1705,
        "src": "271:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinERC721Enumerable.sol",
        "file": "./mixins/MixinERC721Enumerable.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1766,
        "src": "317:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinEventHooks.sol",
        "file": "./mixins/MixinEventHooks.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 1857,
        "src": "362:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinFunds.sol",
        "file": "./mixins/MixinFunds.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2025,
        "src": "401:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinGrantKeys.sol",
        "file": "./mixins/MixinGrantKeys.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2119,
        "src": "435:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinKeys.sol",
        "file": "./mixins/MixinKeys.sol",
        "id": 68,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2497,
        "src": "473:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockCore.sol",
        "file": "./mixins/MixinLockCore.sol",
        "id": 69,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2780,
        "src": "506:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockMetadata.sol",
        "file": "./mixins/MixinLockMetadata.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3042,
        "src": "543:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinPurchase.sol",
        "file": "./mixins/MixinPurchase.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3238,
        "src": "584:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinRefunds.sol",
        "file": "./mixins/MixinRefunds.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3550,
        "src": "621:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinTransfer.sol",
        "file": "./mixins/MixinTransfer.sol",
        "id": 73,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 4246,
        "src": "657:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinSignatures.sol",
        "file": "./mixins/MixinSignatures.sol",
        "id": 74,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 3634,
        "src": "694:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/overlord/DAPPS/unlock/smart-contracts/contracts/mixins/MixinLockManagerRole.sol",
        "file": "./mixins/MixinLockManagerRole.sol",
        "id": 75,
        "nodeType": "ImportDirective",
        "scope": 181,
        "sourceUnit": 2878,
        "src": "733:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 76,
              "name": "IPublicLock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1288,
              "src": "1108:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPublicLock_$1288",
                "typeString": "contract IPublicLock"
              }
            },
            "id": 77,
            "nodeType": "InheritanceSpecifier",
            "src": "1108:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5058,
              "src": "1123:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$5058",
                "typeString": "contract ERC165"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "1123:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5484,
              "src": "1133:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5484",
                "typeString": "contract Ownable"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "1133:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 82,
              "name": "MixinSignatures",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3633,
              "src": "1144:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinSignatures_$3633",
                "typeString": "contract MixinSignatures"
              }
            },
            "id": 83,
            "nodeType": "InheritanceSpecifier",
            "src": "1144:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 84,
              "name": "MixinFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2024,
              "src": "1163:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinFunds_$2024",
                "typeString": "contract MixinFunds"
              }
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "1163:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 86,
              "name": "MixinDisableAndDestroy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1704,
              "src": "1177:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinDisableAndDestroy_$1704",
                "typeString": "contract MixinDisableAndDestroy"
              }
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:22:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 88,
              "name": "MixinLockManagerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2877,
              "src": "1203:20:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockManagerRole_$2877",
                "typeString": "contract MixinLockManagerRole"
              }
            },
            "id": 89,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:20:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 90,
              "name": "MixinLockCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2779,
              "src": "1227:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockCore_$2779",
                "typeString": "contract MixinLockCore"
              }
            },
            "id": 91,
            "nodeType": "InheritanceSpecifier",
            "src": "1227:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 92,
              "name": "MixinKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2496,
              "src": "1244:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinKeys_$2496",
                "typeString": "contract MixinKeys"
              }
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 94,
              "name": "MixinLockMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3041,
              "src": "1257:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinLockMetadata_$3041",
                "typeString": "contract MixinLockMetadata"
              }
            },
            "id": 95,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "MixinERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1765,
              "src": "1278:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinERC721Enumerable_$1765",
                "typeString": "contract MixinERC721Enumerable"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "1278:21:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "MixinEventHooks",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1856,
              "src": "1303:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinEventHooks_$1856",
                "typeString": "contract MixinEventHooks"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1303:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MixinGrantKeys",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "1322:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinGrantKeys_$2118",
                "typeString": "contract MixinGrantKeys"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "1322:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 102,
              "name": "MixinPurchase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3237,
              "src": "1340:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinPurchase_$3237",
                "typeString": "contract MixinPurchase"
              }
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 104,
              "name": "MixinApproval",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1614,
              "src": "1357:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinApproval_$1614",
                "typeString": "contract MixinApproval"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "1357:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 106,
              "name": "MixinTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4245,
              "src": "1374:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinTransfer_$4245",
                "typeString": "contract MixinTransfer"
              }
            },
            "id": 107,
            "nodeType": "InheritanceSpecifier",
            "src": "1374:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 108,
              "name": "MixinRefunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3549,
              "src": "1391:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixinRefunds_$3549",
                "typeString": "contract MixinRefunds"
              }
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "1391:12:1"
          }
        ],
        "contractDependencies": [
          1288,
          1614,
          1704,
          1765,
          1856,
          2024,
          2118,
          2496,
          2779,
          2877,
          3041,
          3237,
          3549,
          3633,
          4245,
          4589,
          5058,
          5068,
          5484,
          6530,
          6560,
          6795
        ],
        "contractKind": "contract",
        "documentation": "@title The Lock contract\n@author Julien Genestoux (unlock-protocol.com)\n@dev ERC165 allows our contract to be queried to determine whether it implements a given interface.\nEvery ERC-721 compliant contract must implement the ERC165 interface.\nhttps://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 180,
        "linearizedBaseContracts": [
          180,
          3549,
          4245,
          1614,
          3237,
          2118,
          1856,
          1765,
          3041,
          2496,
          2779,
          2877,
          1704,
          2024,
          3633,
          5484,
          4589,
          5058,
          1288,
          6560,
          6530,
          5068,
          6795
        ],
        "name": "PublicLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1612:673:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1637:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5484,
                        "src": "1618:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$5484_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5395,
                      "src": "1618:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1683:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "MixinFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2024,
                        "src": "1650:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinFunds_$2024_$",
                          "typeString": "type(contract MixinFunds)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1899,
                      "src": "1650:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "MixinDisableAndDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "1703:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinDisableAndDestroy_$1704_$",
                          "typeString": "type(contract MixinDisableAndDestroy)"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinDisableAndDestroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1640,
                      "src": "1703:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1806:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_expirationDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1814:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_keyPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1835:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_maxNumberOfKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1846:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "MixinLockCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "1767:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockCore_$2779_$",
                          "typeString": "type(contract MixinLockCore)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2628,
                      "src": "1767:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_lockName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1916:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "MixinLockMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "1869:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockMetadata_$3041_$",
                          "typeString": "type(contract MixinLockMetadata)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2933,
                      "src": "1869:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "MixinERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "1932:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinERC721Enumerable_$1765_$",
                          "typeString": "type(contract MixinERC721Enumerable)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinERC721Enumerable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "1932:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "MixinRefunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3549,
                        "src": "1994:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinRefunds_$3549_$",
                          "typeString": "type(contract MixinRefunds)"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3294,
                      "src": "1994:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2091:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "MixinLockManagerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2038:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MixinLockManagerRole_$2877_$",
                          "typeString": "type(contract MixinLockManagerRole)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initializeMixinLockManagerRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2817,
                      "src": "2038:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783830616335386364",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2269:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        },
                        "value": "0x80ac58cd"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2158778573_by_1",
                          "typeString": "int_const 2158778573"
                        }
                      ],
                      "id": 174,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5053,
                      "src": "2250:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6776,
                  "src": "1596:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:13:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1433:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_expirationDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1453:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1483:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "_keyPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1510:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_maxNumberOfKeys",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1530:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_lockName",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1557:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:157:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:1"
            },
            "scope": 180,
            "src": "1408:877:1",
            "stateMutability": "nonpayable",
            "superFunction": 960,
            "visibility": "public"
          }
        ],
        "scope": 181,
        "src": "1083:1204:1"
      }
    ],
    "src": "0:2288:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-15T23:36:50.899Z",
  "devdoc": {
    "author": "Julien Genestoux (unlock-protocol.com)",
    "details": "ERC165 allows our contract to be queried to determine whether it implements a given interface. Every ERC-721 compliant contract must implement the ERC165 interface. https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "balanceOf(address)": {
        "return": "The number of NFTs owned by `_owner`, either 0 or 1."
      },
      "cancelAndRefund()": {
        "details": "Destroys the user's key and sends a refund based on the amount of time remaining."
      },
      "cancelAndRefundFor(address,uint8,bytes32,bytes32)": {
        "details": "Cancels a key owned by a different user and sends the funds to the msg.sender.",
        "params": {
          "_keyOwner": "this user's key will be canceled",
          "_v": "_r _s getCancelAndRefundApprovalHash signed by the _keyOwner"
        }
      },
      "destroyLock()": {
        "details": "Used to clean up old lock contracts from the blockchain TODO: add a check to ensure all keys are INVALID!"
      },
      "disableLock()": {
        "details": "Used to disable lock before migrating keys and/or destroying contract"
      },
      "fullRefund(address,uint256)": {
        "details": "Invoked by the lock owner to destroy the user's ket and perform a refund and cancellation of the key"
      },
      "getCancelAndRefundApprovalHash(address,address)": {
        "details": "this can be computed in JS instead of read from the contract.",
        "params": {
          "_keyOwner": "The key owner's address (also the message signer)",
          "_txSender": "The address cancelling cancel on behalf of the keyOwner"
        },
        "return": "approvalHash The hash to sign"
      },
      "getCancelAndRefundValueFor(address)": {
        "details": "Determines how much of a refund a key owner would receive if they issued a cancelAndRefund block.timestamp. Note that due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call."
      },
      "getOwnersByPage(uint256,uint256)": {
        "params": {
          "_page": "the page of key owners requested when faceted by page size",
          "_pageSize": "the number of Key Owners requested per page"
        }
      },
      "getTokenIdFor(address)": {
        "return": "The tokenId of the NFT, else revert"
      },
      "getTransferFee(address,uint256)": {
        "params": {
          "_owner": "The owner of the key check the transfer fee for."
        }
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "invalidateOffchainApproval(uint256)": {
        "details": "This can be used to invalidate a previously signed message."
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "keyExpirationTimestampFor(address)": {
        "details": "Returns the key's ExpirationTimestamp field for a given owner.",
        "params": {
          "_owner": "address of the user for whom we search the key"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "purchase(uint256,address,address,bytes)": {
        "details": "Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).",
        "params": {
          "_data": "arbitrary data populated by the front-end which initiated the sale",
          "_recipient": "address of the recipient of the purchased key",
          "_referrer": "address of the user making the referral",
          "_value": "the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "This works identically to the other function with an extra data parameter, except this function just sets data to ''",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "shareKey(address,uint256,uint256)": {
        "params": {
          "_timeShared": "The amount of time shared",
          "_to": "The recipient of the shared key",
          "_tokenId": "the key to share"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token name"
      },
      "tokenByIndex(uint256)": {
        "details": "Throws if `_index` >= `totalSupply()`.",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "return": "The token identifier for the `_index`th NFT,  (sort order not specified)"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
        "params": {
          "_index": "A counter less than `balanceOf(_owner)`",
          "_owner": "An address where we are interested in NFTs owned by them"
        },
        "return": "The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)"
      },
      "tokenURI(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \"ERC721 Metadata JSON Schema\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "Called by owner to withdraw all funds from the lock and send them to the `beneficiary`.",
        "params": {
          "_amount": "specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.   * TODO: consider allowing anybody to trigger this as long as it goes to owner anyway? -- however be wary of draining funds as it breaks the `cancelAndRefund` and `fullRefund` use cases.",
          "_tokenAddress": "specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds."
        }
      }
    },
    "title": "The Lock contract"
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "This approves _approved to get ownership of _tokenId. Note: that since this is used for both purchase and transfer approvals the approved token may not exist."
      },
      "balanceOf(address)": {
        "notice": "In the specific case of a Lock, each owner can own only at most 1 key."
      },
      "expireKeyFor(address)": {
        "notice": "A function which lets the owner of the lock expire a users' key."
      },
      "getApproved(uint256)": {
        "notice": "Will return the approved recipient for a key, if any."
      },
      "getBalance(address,address)": {
        "notice": "Gets the current balance of the account provided."
      },
      "getCancelAndRefundApprovalHash(address,address)": {
        "notice": "returns the hash to sign in order to allow another user to cancel on your behalf."
      },
      "getHasValidKey(address)": {
        "notice": "Checks if the user has a non-expired key."
      },
      "getOwnersByPage(uint256,uint256)": {
        "notice": "A function which returns a subset of the keys for this Lock as an array"
      },
      "getTokenIdFor(address)": {
        "notice": "Find the tokenId for a given user"
      },
      "getTransferFee(address,uint256)": {
        "notice": "Determines how much of a fee a key owner would need to pay in order to transfer the key to another account.  This is pro-rated so the fee goes down overtime."
      },
      "grantKeys(address[],uint256[])": {
        "notice": "Allows the Lock owner to give a collection of users a key with no charge. Each key may be assigned a different expiration date."
      },
      "invalidateOffchainApproval(uint256)": {
        "notice": "Sets the minimum nonce for a valid off-chain approval message from the senders account."
      },
      "isKeyOwner(uint256,address)": {
        "notice": "Checks if the given address owns the given tokenId."
      },
      "numberOfOwners()": {
        "notice": "Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an NFT from one address to another address. When transfer is complete, this functions checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`."
      },
      "setBaseTokenURI(string)": {
        "notice": "Allows the Lock owner to update the baseTokenURI for this Lock."
      },
      "shareKey(address,uint256,uint256)": {
        "notice": "Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key)."
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid NFTs"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "notice": "Enumerate NFTs assigned to an owner"
      },
      "tokenURI(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
      },
      "updateBeneficiary(address)": {
        "notice": "A function which lets the owner of the lock update the beneficiary account, which receives funds on withdrawal."
      },
      "updateKeyPricing(uint256,address)": {
        "notice": "A function which lets the owner of the lock change the pricing for future purchases. This consists of 2 parts: The token address and the price in the given token. In order to set the token to ETH, use 0 for the token Address."
      },
      "updateLockName(string)": {
        "notice": "Allows the Lock owner to assign a descriptive name for this Lock."
      },
      "updateLockSymbol(string)": {
        "notice": "Allows the Lock owner to assign a Symbol for this Lock."
      },
      "updateRefundPenalty(uint256,uint256)": {
        "notice": "Allow the owner to change the refund penalty."
      },
      "updateTransferFee(uint256)": {
        "notice": "Allow the Lock owner to change the transfer fee."
      }
    }
  }
}