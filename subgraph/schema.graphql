type UnlockEntity @entity {
  id: ID!
  count: BigInt!
  lockOwner: Bytes! # address
  newLockAddress: Bytes! # address
}

type Key @entity {
  id: ID!
  lock: Lock!
  keyId: BigInt!
  owner: KeyHolder!
  expiration: BigInt!
  tokenURI: String
  createdAt: BigInt!
}

type KeyHolder @entity {
  id: ID!
  address: Bytes!
  keys: [Key]! @derivedFrom(field: "owner")
}

type KeyPurchase @entity {
  id: ID!
  lock: Bytes!
  purchaser: Bytes!
  price: BigInt!
  timestamp: BigInt!
  tokenAddress: Bytes!
}

type LockManager @entity {
  id: ID!
  lock: Lock!
  address: Bytes!
}

type Lock @entity {
  id: ID! #lock address
  address: Bytes!
  name: String
  tokenAddress: Bytes
  creationBlock: BigInt
  price: BigInt
  expirationDuration: BigInt
  totalSupply: BigInt
  maxNumberOfKeys: BigInt
  LockManagers: [LockManager!] @derivedFrom(field: "lock")
  keys: [Key!] @derivedFrom(field: "lock")
  owner: Bytes!
  version: BigInt
}
