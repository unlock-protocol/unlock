##
# This the travis config for Unlock's all project
# We use docker to run CI
# We need 2 images for this purpose:
#  - a generic `unlock` image which contains the code for the app, ready to run (deps installed)
#  - an image for puppeteer tests (`unlock-integration`) which contains only the required file for that purpose.
# (The generic unlock image can/will be used for actual deployment)
# TODO: To speed things up both images are cached on AWS's docker registry (the latest version is loaded before being built and pushed on master builds)
# TODO: To speed things up, both image building processes could be runnning in parallel.
# Once the images are built, we run test script using them.
# The `unlock` image is used for all services tests (smart-contracts, unlock-app, locksmith)
# The `unlock-integration` is used to run the integration tests
# TODO: To speed things up, all of the test scripts could be run in parallel.
# If tests are run successfully, we deploy to netlify and push the updated images.
# Both of these steps could be run in parallel
language: generic
env:
  global:
    - DB_USERNAME='locksmith_test'
    - DB_PASSWORD='password'
    - DB_NAME='locksmith_test'
    - DB_HOSTNAME='db'
services:
  - docker
before_script:
  - scripts/pull-image.sh
  - scripts/build-image.sh unlock 461040265176.dkr.ecr.us-east-1.amazonaws.com/unlock:latest
  - scripts/build-image.sh unlock-integration
  - scripts/docker-compose-build.sh
script:
  - scripts/tests.sh smart-contracts
  - scripts/tests.sh unlock-app
  - scripts/tests.sh locksmith
  - scripts/integration-tests.sh
after_success:
  - scripts/deploy.sh netlify
  - scripts/push-image.sh
notifications:
  slack:
    secure: q4BMSH3FifcaoPwQ2QFocbv8OuNT4JWgeJuE7jxppw86rCJHOyp6SdLpzp4944cWTlEGFdbQsp83OE2fx99i9OncvlJM5Is1IQgIDUfOD2l8mKx+HPlWvuBLaRB5j7vdamzODaHU2NlS+XSU7I0ytxp39x5arYY5hR9yqETvkyjAsSWBjY74Vv+eED+ALtQD9HKoH3xaxgV5rolujR3MEzdMSoNpenivz+BIfKhGQlOHyEN0FOsZtBkCmJTZ9mQbPApu2NKQZRU2cTn7h4Pp4Gpy6mVPWtesUd9OtblsA658qw9Sn/C9hIO1uKgGb4G1PJrKaa/qs2WeMj3VNQ0CkubXYNUS+OfnRb0CT+eTRCndnhFsDdt0zgIBtFeG2FT83OD0sT1SHduY69uETxxstTJw6F8+q/n4JNImBT7klBn2tLrS8kOpk2dqIkpQsvKst67UaYVNa4x2wOcbBxwE+RXP3i3Hs+NpNW/3W9IJOXA2Twx6Q70ORlg3Lnfw28gTDOnh3ZYx48b8y17U4J4KJgEu7aaQCUtoPK/dSwGl0atMQn/FRwEHvIs7zIh/PqyWYRA+y0V3VAe2bAuLf5WTjUijN5w+wfHDGjo6fxZ6dPwBXhhbeFWl4Tz6GEiOGJsebJTtDKWYD/uItNqb3uFiEwEeUEFJCY1zVU5jT8NL3TY=
